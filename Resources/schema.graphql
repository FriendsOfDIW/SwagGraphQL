scalar Date

type IntegrationAccessKey {
  accessKey: ID!
  secretAccessKey: ID!
}

scalar Json

type Mutation {
  """Dissolves a media folder and puts the content one level higher."""
  dissolve_media_folder(media_folder_id: ID!): ID!

  """Provides a unique filename based on the given one."""
  provide_file_name(fileName: String!, fileExtension: String!, media_id: ID): String!

  """Renames the file with the given ID."""
  rename_media(media_id: ID!, fileName: String!): media
  create_seo_url(id: ID, salesChannelId: ID, name: String!, foreignKey: ID, pathInfo: String!, seoPathInfo: String!, isCanonical: Boolean, isModified: Boolean, createdAt: Date, updatedAt: Date, salesChannel: input_sales_channel, url: String): seo_url
  update_seo_url(id: ID!, salesChannelId: ID, name: String, foreignKey: ID, pathInfo: String, seoPathInfo: String, isCanonical: Boolean, isModified: Boolean, createdAt: Date, updatedAt: Date, salesChannel: input_sales_channel, url: String): seo_url
  delete_seo_url(id: ID!): ID
  create_version(id: ID, name: String! = "Draft (2019-01-25 13:12:09.000)", createdAt: Date = "2019-01-25T13:12:09+01:00", updatedAt: Date, commits: [input_version_commit]): version
  update_version(id: ID!, name: String, createdAt: Date, updatedAt: Date, commits: [input_version_commit]): version
  delete_version(id: ID!): ID
  create_version_commit(id: ID, versionId: ID, userId: ID, integrationId: ID, autoIncrement: Int, isMerge: Boolean, message: String, createdAt: Date = "2019-01-25T13:12:09+01:00", data: [input_version_commit_data], version: input_version): version_commit
  update_version_commit(id: ID!, versionId: ID, userId: ID, integrationId: ID, autoIncrement: Int, isMerge: Boolean, message: String, createdAt: Date, data: [input_version_commit_data], version: input_version): version_commit
  delete_version_commit(id: ID!): ID
  create_version_commit_data(id: ID, versionCommitId: ID, commit: input_version_commit, userId: ID, integrationId: ID, autoIncrement: Int, entityName: String!, entityId: Json!, action: String!, payload: Json!, createdAt: Date): version_commit_data
  update_version_commit_data(id: ID!, versionCommitId: ID, commit: input_version_commit, userId: ID, integrationId: ID, autoIncrement: Int, entityName: String, entityId: Json, action: String, payload: Json, createdAt: Date): version_commit_data
  delete_version_commit_data(id: ID!): ID
  create_plugin(id: ID, name: String!, label: String!, active: Boolean!, version: String!, capabilityUpdate: Boolean!, capabilityInstall: Boolean!, capabilityEnable: Boolean!, capabilitySecureUninstall: Boolean!, description: String, descriptionLong: String, createdAt: Date, updatedAt: Date, installationDate: Date, updateDate: Date, refreshDate: Date, author: String, copyright: String, license: String, support: String, changes: String, link: String, storeVersion: String, storeDate: Date, updateSource: String, updateVersion: String, paymentMethods: [input_payment_method]): plugin
  update_plugin(id: ID!, name: String, label: String, active: Boolean, version: String, capabilityUpdate: Boolean, capabilityInstall: Boolean, capabilityEnable: Boolean, capabilitySecureUninstall: Boolean, description: String, descriptionLong: String, createdAt: Date, updatedAt: Date, installationDate: Date, updateDate: Date, refreshDate: Date, author: String, copyright: String, license: String, support: String, changes: String, link: String, storeVersion: String, storeDate: Date, updateSource: String, updateVersion: String, paymentMethods: [input_payment_method]): plugin
  delete_plugin(id: ID!): ID
  create_sales_channel(id: ID, typeId: ID, languageId: ID, currencyId: ID, paymentMethodId: ID, shippingMethodId: ID, countryId: ID, type: input_sales_channel_type, name: String, accessKey: String!, configuration: Json, active: Boolean, taxCalculationType: String, createdAt: Date, updatedAt: Date, translations: [input_sales_channel_translation], catalogs: [input_catalog], currencies: [input_currency], languages: [input_language], countries: [input_country], paymentMethods: [input_payment_method], shippingMethods: [input_shipping_method], language: input_language, currency: input_currency, paymentMethod: input_payment_method, shippingMethod: input_shipping_method, country: input_country, orders: [input_order], customers: [input_customer], domains: [input_sales_channel_domain], seoUrls: [input_seo_url]): sales_channel
  update_sales_channel(id: ID!, typeId: ID, languageId: ID, currencyId: ID, paymentMethodId: ID, shippingMethodId: ID, countryId: ID, type: input_sales_channel_type, name: String, accessKey: String, configuration: Json, active: Boolean, taxCalculationType: String, createdAt: Date, updatedAt: Date, translations: [input_sales_channel_translation], catalogs: [input_catalog], currencies: [input_currency], languages: [input_language], countries: [input_country], paymentMethods: [input_payment_method], shippingMethods: [input_shipping_method], language: input_language, currency: input_currency, paymentMethod: input_payment_method, shippingMethod: input_shipping_method, country: input_country, orders: [input_order], customers: [input_customer], domains: [input_sales_channel_domain], seoUrls: [input_seo_url]): sales_channel
  delete_sales_channel(id: ID!): ID
  create_sales_channel_domain(id: ID, url: String!, salesChannelId: ID, languageId: ID, currencyId: ID, snippetSetId: ID, createdAt: Date, updatedAt: Date, salesChannel: input_sales_channel, language: input_language, currency: input_currency, snippetSet: input_snippet_set): sales_channel_domain
  update_sales_channel_domain(id: ID!, url: String, salesChannelId: ID, languageId: ID, currencyId: ID, snippetSetId: ID, createdAt: Date, updatedAt: Date, salesChannel: input_sales_channel, language: input_language, currency: input_currency, snippetSet: input_snippet_set): sales_channel_domain
  delete_sales_channel_domain(id: ID!): ID
  create_sales_channel_type(id: ID, coverUrl: String, iconName: String, screenshotUrls: Json, name: String, manufacturer: String, description: String, descriptionLong: String, createdAt: Date, updatedAt: Date, translations: [input_sales_channel_type_translation], salesChannels: [input_sales_channel]): sales_channel_type
  update_sales_channel_type(id: ID!, coverUrl: String, iconName: String, screenshotUrls: Json, name: String, manufacturer: String, description: String, descriptionLong: String, createdAt: Date, updatedAt: Date, translations: [input_sales_channel_type_translation], salesChannels: [input_sales_channel]): sales_channel_type
  delete_sales_channel_type(id: ID!): ID
  create_country(id: ID, name: String, iso: String, position: Int, shippingFree: Boolean, taxFree: Boolean, taxfreeForVatId: Boolean, taxfreeVatidChecked: Boolean, active: Boolean, iso3: String, displayStateInRegistration: Boolean, forceStateInRegistration: Boolean, createdAt: Date, updatedAt: Date, salesChannelDefaultAssignments: [input_sales_channel], states: [input_country_state], translations: [input_country_translation], customerAddresses: [input_customer_address], orderAddresses: [input_order_address], salesChannels: [input_sales_channel]): country
  update_country(id: ID!, name: String, iso: String, position: Int, shippingFree: Boolean, taxFree: Boolean, taxfreeForVatId: Boolean, taxfreeVatidChecked: Boolean, active: Boolean, iso3: String, displayStateInRegistration: Boolean, forceStateInRegistration: Boolean, createdAt: Date, updatedAt: Date, salesChannelDefaultAssignments: [input_sales_channel], states: [input_country_state], translations: [input_country_translation], customerAddresses: [input_customer_address], orderAddresses: [input_order_address], salesChannels: [input_sales_channel]): country
  delete_country(id: ID!): ID
  create_country_state(id: ID, countryId: ID, shortCode: String!, name: String, position: Int, active: Boolean, createdAt: Date, updatedAt: Date, country: input_country, translations: [input_country_state_translation], customerAddresses: [input_customer_address], orderAddresses: [input_order_address]): country_state
  update_country_state(id: ID!, countryId: ID, shortCode: String, name: String, position: Int, active: Boolean, createdAt: Date, updatedAt: Date, country: input_country, translations: [input_country_state_translation], customerAddresses: [input_customer_address], orderAddresses: [input_order_address]): country_state
  delete_country_state(id: ID!): ID
  create_currency(id: ID, factor: Float!, symbol: String!, shortName: String, name: String, isDefault: Boolean, placedInFront: Boolean, position: Int, createdAt: Date, updatedAt: Date, salesChannelDefaultAssignments: [input_sales_channel], translations: [input_currency_translation], orders: [input_order], productPriceRules: [input_product_price_rule], salesChannels: [input_sales_channel], salesChannelDomains: [input_sales_channel_domain]): currency
  update_currency(id: ID!, factor: Float, symbol: String, shortName: String, name: String, isDefault: Boolean, placedInFront: Boolean, position: Int, createdAt: Date, updatedAt: Date, salesChannelDefaultAssignments: [input_sales_channel], translations: [input_currency_translation], orders: [input_order], productPriceRules: [input_product_price_rule], salesChannels: [input_sales_channel], salesChannelDomains: [input_sales_channel_domain]): currency
  delete_currency(id: ID!): ID
  create_locale(id: ID, code: String!, name: String, territory: String, createdAt: Date, updatedAt: Date, languages: [input_language], translations: [input_locale_translation], users: [input_user]): locale
  update_locale(id: ID!, code: String, name: String, territory: String, createdAt: Date, updatedAt: Date, languages: [input_language], translations: [input_locale_translation], users: [input_user]): locale
  delete_locale(id: ID!): ID
  create_listing_facet(id: ID, uniqueKey: String!, payload: String!, name: String, active: Boolean, displayInCategories: Boolean, deletable: Boolean, position: Int, createdAt: Date, updatedAt: Date, translations: [input_listing_facet_translation]): listing_facet
  update_listing_facet(id: ID!, uniqueKey: String, payload: String, name: String, active: Boolean, displayInCategories: Boolean, deletable: Boolean, position: Int, createdAt: Date, updatedAt: Date, translations: [input_listing_facet_translation]): listing_facet
  delete_listing_facet(id: ID!): ID
  create_listing_sorting(id: ID, payload: Json!, label: String, uniqueKey: String!, active: Boolean, displayInCategories: Boolean, position: Int, createdAt: Date, updatedAt: Date, translations: [input_listing_sorting_translation]): listing_sorting
  update_listing_sorting(id: ID!, payload: Json, label: String, uniqueKey: String, active: Boolean, displayInCategories: Boolean, position: Int, createdAt: Date, updatedAt: Date, translations: [input_listing_sorting_translation]): listing_sorting
  delete_listing_sorting(id: ID!): ID
  create_snippet_set(id: ID, name: String!, baseFile: String!, iso: String!, createdAt: Date, updatedAt: Date, snippets: [input_snippet], salesChannelDomains: [input_sales_channel_domain]): snippet_set
  update_snippet_set(id: ID!, name: String, baseFile: String, iso: String, createdAt: Date, updatedAt: Date, snippets: [input_snippet], salesChannelDomains: [input_sales_channel_domain]): snippet_set
  delete_snippet_set(id: ID!): ID
  create_snippet(id: ID, languageId: ID, setId: ID, translationKey: String!, value: String!, author: String!, createdAt: Date, updatedAt: Date, language: input_language, set: input_snippet_set): snippet
  update_snippet(id: ID!, languageId: ID, setId: ID, translationKey: String, value: String, author: String, createdAt: Date, updatedAt: Date, language: input_language, set: input_snippet_set): snippet
  delete_snippet(id: ID!): ID
  create_tax(id: ID, taxRate: Float!, name: String!, createdAt: Date, updatedAt: Date, products: [input_product], productServices: [input_product_service]): tax
  update_tax(id: ID!, taxRate: Float, name: String, createdAt: Date, updatedAt: Date, products: [input_product], productServices: [input_product_service]): tax
  delete_tax(id: ID!): ID
  create_unit(id: ID, shortCode: String, name: String, createdAt: Date, updatedAt: Date, products: [input_product], translations: [input_unit_translation]): unit
  update_unit(id: ID!, shortCode: String, name: String, createdAt: Date, updatedAt: Date, products: [input_product], translations: [input_unit_translation]): unit
  delete_unit(id: ID!): ID
  create_user(id: ID, localeId: ID, username: String!, name: String!, email: String!, lastLogin: Date, active: Boolean, failedLogins: Int, lockedUntil: Date, createdAt: Date, updatedAt: Date, locale: input_locale, media: [input_media], accessKeys: [input_user_access_key]): user
  update_user(id: ID!, localeId: ID, username: String, name: String, email: String, lastLogin: Date, active: Boolean, failedLogins: Int, lockedUntil: Date, createdAt: Date, updatedAt: Date, locale: input_locale, media: [input_media], accessKeys: [input_user_access_key]): user
  delete_user(id: ID!): ID
  create_user_access_key(id: ID, userId: ID, accessKey: String!, writeAccess: Boolean, createdAt: Date, lastUsageAt: Date, user: input_user): user_access_key
  update_user_access_key(id: ID!, userId: ID, accessKey: String, writeAccess: Boolean, createdAt: Date, lastUsageAt: Date, user: input_user): user_access_key
  delete_user_access_key(id: ID!): ID
  create_language(id: ID, parentId: ID, localeId: ID, translationCodeId: ID, name: String!, createdAt: Date, updatedAt: Date, parent: input_language, locale: input_locale, translationCode: input_locale, children: [input_language], salesChannels: [input_sales_channel], salesChannelDefaultAssignments: [input_sales_channel], snippets: [input_snippet], salesChannelDomains: [input_sales_channel_domain], catalogTranslations: [input_catalog_translation], categoryTranslations: [input_category_translation], countryStateTranslations: [input_country_state_translation], countryTranslations: [input_country_translation], currencyTranslations: [input_currency_translation], customerGroupTranslations: [input_customer_group_translation], listingFacetTranslations: [input_listing_facet_translation], listingSortingTranslations: [input_listing_sorting_translation], localeTranslations: [input_locale_translation], mediaTranslations: [input_media_translation], orderStateTranslations: [input_order_state_translation], orderTransactionStateTranslations: [input_order_transaction_state_translation], paymentMethodTranslations: [input_payment_method_translation], productManufacturerTranslations: [input_product_manufacturer_translation], productTranslations: [input_product_translation], shippingMethodTranslations: [input_shipping_method_translation], unitTranslations: [input_unit_translation], configurationGroupTranslations: [input_configuration_group_translation], configurationGroupOptionTranslations: [input_configuration_group_option_translation], discountSurchargeTranslations: [input_discount_surcharge_translation], salesChannelTranslations: [input_sales_channel_translation], salesChannelTypeTranslations: [input_sales_channel_type_translation], searchDocuments: [input_search_document], mediaFolderTranslations: [input_media_folder_translation]): language
  update_language(id: ID!, parentId: ID, localeId: ID, translationCodeId: ID, name: String, createdAt: Date, updatedAt: Date, parent: input_language, locale: input_locale, translationCode: input_locale, children: [input_language], salesChannels: [input_sales_channel], salesChannelDefaultAssignments: [input_sales_channel], snippets: [input_snippet], salesChannelDomains: [input_sales_channel_domain], catalogTranslations: [input_catalog_translation], categoryTranslations: [input_category_translation], countryStateTranslations: [input_country_state_translation], countryTranslations: [input_country_translation], currencyTranslations: [input_currency_translation], customerGroupTranslations: [input_customer_group_translation], listingFacetTranslations: [input_listing_facet_translation], listingSortingTranslations: [input_listing_sorting_translation], localeTranslations: [input_locale_translation], mediaTranslations: [input_media_translation], orderStateTranslations: [input_order_state_translation], orderTransactionStateTranslations: [input_order_transaction_state_translation], paymentMethodTranslations: [input_payment_method_translation], productManufacturerTranslations: [input_product_manufacturer_translation], productTranslations: [input_product_translation], shippingMethodTranslations: [input_shipping_method_translation], unitTranslations: [input_unit_translation], configurationGroupTranslations: [input_configuration_group_translation], configurationGroupOptionTranslations: [input_configuration_group_option_translation], discountSurchargeTranslations: [input_discount_surcharge_translation], salesChannelTranslations: [input_sales_channel_translation], salesChannelTypeTranslations: [input_sales_channel_type_translation], searchDocuments: [input_search_document], mediaFolderTranslations: [input_media_folder_translation]): language
  delete_language(id: ID!): ID
  create_integration(id: ID, label: String!, accessKey: String!, writeAccess: Boolean, lastUsageAt: Date, createdAt: Date, updatedAt: Date): integration
  update_integration(id: ID!, label: String, accessKey: String, writeAccess: Boolean, lastUsageAt: Date, createdAt: Date, updatedAt: Date): integration
  delete_integration(id: ID!): ID
  create_catalog(id: ID, name: String, createdAt: Date, updatedAt: Date, categories: [input_category], categoryTranslations: [input_category_translation], products: [input_product], productManufacturers: [input_product_manufacturer], productManufacturerTranslations: [input_product_manufacturer_translation], productMedia: [input_product_media], productTranslations: [input_product_translation], translations: [input_catalog_translation], salesChannels: [input_sales_channel]): catalog
  update_catalog(id: ID!, name: String, createdAt: Date, updatedAt: Date, categories: [input_category], categoryTranslations: [input_category_translation], products: [input_product], productManufacturers: [input_product_manufacturer], productManufacturerTranslations: [input_product_manufacturer_translation], productMedia: [input_product_media], productTranslations: [input_product_translation], translations: [input_catalog_translation], salesChannels: [input_sales_channel]): catalog
  delete_catalog(id: ID!): ID
  create_category(id: ID, versionId: ID, catalogId: ID, parentId: ID, parentVersionId: ID, mediaId: ID, autoIncrement: Int, path: String, position: Int, level: Int, template: String, active: Boolean, isBlog: Boolean, external: String, hideFilter: Boolean, hideTop: Boolean, productBoxLayout: String, hideSortings: Boolean, sortingIds: String, facetIds: String, childCount: Int, createdAt: Date, updatedAt: Date, name: String, metaKeywords: String, metaTitle: String, metaDescription: String, cmsHeadline: String, cmsDescription: String, parent: input_category, media: input_media, children: [input_category], translations: [input_category_translation], products: [input_product], catalog: input_catalog, nestedProducts: [input_product], canonicalUrl: input_seo_url): category
  update_category(id: ID!, versionId: ID, catalogId: ID, parentId: ID, parentVersionId: ID, mediaId: ID, autoIncrement: Int, path: String, position: Int, level: Int, template: String, active: Boolean, isBlog: Boolean, external: String, hideFilter: Boolean, hideTop: Boolean, productBoxLayout: String, hideSortings: Boolean, sortingIds: String, facetIds: String, childCount: Int, createdAt: Date, updatedAt: Date, name: String, metaKeywords: String, metaTitle: String, metaDescription: String, cmsHeadline: String, cmsDescription: String, parent: input_category, media: input_media, children: [input_category], translations: [input_category_translation], products: [input_product], catalog: input_catalog, nestedProducts: [input_product], canonicalUrl: input_seo_url): category
  delete_category(id: ID!, versionId: ID): ID
  create_media(id: ID, userId: ID, mediaFolderId: ID, mimeType: String, fileExtension: String, uploadedAt: Date, fileName: String, fileSize: Int, metaData: Json, mediaType: Json, createdAt: Date, updatedAt: Date, alt: String, title: String, url: String, user: input_user, categories: [input_category], productManufacturers: [input_product_manufacturer], productMedia: [input_product_media], translations: [input_media_translation], thumbnails: [input_media_thumbnail], hasFile: Boolean, mediaFolder: input_media_folder, configurationGroupOptions: [input_configuration_group_option]): media
  update_media(id: ID!, userId: ID, mediaFolderId: ID, mimeType: String, fileExtension: String, uploadedAt: Date, fileName: String, fileSize: Int, metaData: Json, mediaType: Json, createdAt: Date, updatedAt: Date, alt: String, title: String, url: String, user: input_user, categories: [input_category], productManufacturers: [input_product_manufacturer], productMedia: [input_product_media], translations: [input_media_translation], thumbnails: [input_media_thumbnail], hasFile: Boolean, mediaFolder: input_media_folder, configurationGroupOptions: [input_configuration_group_option]): media
  delete_media(id: ID!): ID
  create_media_default_folder(id: ID, associations: Json!, entity: String!, folderId: ID, folder: input_media_folder, createdAt: Date, updatedAt: Date): media_default_folder
  update_media_default_folder(id: ID!, associations: Json, entity: String, folderId: ID, folder: input_media_folder, createdAt: Date, updatedAt: Date): media_default_folder
  delete_media_default_folder(id: ID!): ID
  create_media_thumbnail(id: ID, mediaId: ID, createdAt: Date, updatedAt: Date, width: Int!, height: Int!, url: String, media: input_media): media_thumbnail
  update_media_thumbnail(id: ID!, mediaId: ID, createdAt: Date, updatedAt: Date, width: Int, height: Int, url: String, media: input_media): media_thumbnail
  delete_media_thumbnail(id: ID!): ID
  create_media_folder(id: ID, useParentConfiguration: Boolean = true, configurationId: ID, parentId: ID, parent: input_media_folder, children: [input_media_folder], childCount: Int, media: [input_media], defaultFolders: [input_media_default_folder], configuration: input_media_folder_configuration, name: String!, translations: [input_media_folder_translation], createdAt: Date, updatedAt: Date): media_folder
  update_media_folder(id: ID!, useParentConfiguration: Boolean, configurationId: ID, parentId: ID, parent: input_media_folder, children: [input_media_folder], childCount: Int, media: [input_media], defaultFolders: [input_media_default_folder], configuration: input_media_folder_configuration, name: String, translations: [input_media_folder_translation], createdAt: Date, updatedAt: Date): media_folder
  delete_media_folder(id: ID!): ID
  create_media_thumbnail_size(id: ID, width: Int!, height: Int!, mediaFolderConfigurations: [input_media_folder_configuration]): media_thumbnail_size
  update_media_thumbnail_size(id: ID!, width: Int, height: Int, mediaFolderConfigurations: [input_media_folder_configuration]): media_thumbnail_size
  delete_media_thumbnail_size(id: ID!): ID
  create_media_folder_configuration(id: ID, createThumbnails: Boolean = true, keepAspectRatio: Boolean = true, thumbnailQuality: Int = 80, mediaFolders: [input_media_folder], mediaThumbnailSizes: [input_media_thumbnail_size], createdAt: Date, updatedAt: Date): media_folder_configuration
  update_media_folder_configuration(id: ID!, createThumbnails: Boolean, keepAspectRatio: Boolean, thumbnailQuality: Int, mediaFolders: [input_media_folder], mediaThumbnailSizes: [input_media_thumbnail_size], createdAt: Date, updatedAt: Date): media_folder_configuration
  delete_media_folder_configuration(id: ID!): ID
  create_product(id: ID, versionId: ID, catalogId: ID, parentId: ID, parentVersionId: ID, blacklistIds: Json, whitelistIds: Json, autoIncrement: Int, active: Boolean, stock: Int, createdAt: Date, updatedAt: Date, manufacturerId: ID, productManufacturerVersionId: ID, unitId: ID, taxId: ID, coverId: ID, productMediaVersionId: ID, price: Json!, listingPrices: Json, manufacturerNumber: String, ean: String, isCloseout: Boolean = false, minStock: Int, purchaseSteps: Int = 1, maxPurchase: Int, minPurchase: Int = 1, purchaseUnit: Float, referenceUnit: Float, shippingFree: Boolean = false, purchasePrice: Float, markAsTopseller: Boolean, sales: Int = 0, position: Int, weight: Float, width: Float, height: Float, length: Float, allowNotification: Boolean, releaseDate: Date, categoryTree: Json, datasheetIds: Json, variationIds: Json, minDeliveryTime: Int = 1, maxDeliveryTime: Int = 2, restockTime: Int = 1, additionalText: String, name: String, keywords: String, description: String, descriptionLong: String, metaTitle: String, packUnit: String, parent: input_product, children: [input_product], tax: input_tax, manufacturer: input_product_manufacturer, unit: input_unit, cover: input_product_media, priceRules: [input_product_price_rule], media: [input_product_media], services: [input_product_service], datasheet: [input_configuration_group_option], categories: [input_category], searchKeywords: [input_search_document], categoriesRo: [input_category], translations: [input_product_translation], configurators: [input_product_configurator], variations: [input_configuration_group_option], catalog: input_catalog, canonicalUrl: input_seo_url): product
  update_product(id: ID!, versionId: ID, catalogId: ID, parentId: ID, parentVersionId: ID, blacklistIds: Json, whitelistIds: Json, autoIncrement: Int, active: Boolean, stock: Int, createdAt: Date, updatedAt: Date, manufacturerId: ID, productManufacturerVersionId: ID, unitId: ID, taxId: ID, coverId: ID, productMediaVersionId: ID, price: Json, listingPrices: Json, manufacturerNumber: String, ean: String, isCloseout: Boolean, minStock: Int, purchaseSteps: Int, maxPurchase: Int, minPurchase: Int, purchaseUnit: Float, referenceUnit: Float, shippingFree: Boolean, purchasePrice: Float, markAsTopseller: Boolean, sales: Int, position: Int, weight: Float, width: Float, height: Float, length: Float, allowNotification: Boolean, releaseDate: Date, categoryTree: Json, datasheetIds: Json, variationIds: Json, minDeliveryTime: Int, maxDeliveryTime: Int, restockTime: Int, additionalText: String, name: String, keywords: String, description: String, descriptionLong: String, metaTitle: String, packUnit: String, parent: input_product, children: [input_product], tax: input_tax, manufacturer: input_product_manufacturer, unit: input_unit, cover: input_product_media, priceRules: [input_product_price_rule], media: [input_product_media], services: [input_product_service], datasheet: [input_configuration_group_option], categories: [input_category], searchKeywords: [input_search_document], categoriesRo: [input_category], translations: [input_product_translation], configurators: [input_product_configurator], variations: [input_configuration_group_option], catalog: input_catalog, canonicalUrl: input_seo_url): product
  delete_product(id: ID!, versionId: ID): ID
  create_product_configurator(id: ID, versionId: ID, productId: ID, productVersionId: ID, optionId: ID, price: Json, prices: Json, createdAt: Date, updatedAt: Date, product: input_product, option: input_configuration_group_option): product_configurator
  update_product_configurator(id: ID!, versionId: ID, productId: ID, productVersionId: ID, optionId: ID, price: Json, prices: Json, createdAt: Date, updatedAt: Date, product: input_product, option: input_configuration_group_option): product_configurator
  delete_product_configurator(id: ID!, versionId: ID): ID
  create_product_price_rule(id: ID, versionId: ID, productId: ID, productVersionId: ID, currencyId: ID, ruleId: ID, price: Json!, quantityStart: Int!, quantityEnd: Int, createdAt: Date, updatedAt: Date, product: input_product, currency: input_currency, rule: input_rule): product_price_rule
  update_product_price_rule(id: ID!, versionId: ID, productId: ID, productVersionId: ID, currencyId: ID, ruleId: ID, price: Json, quantityStart: Int, quantityEnd: Int, createdAt: Date, updatedAt: Date, product: input_product, currency: input_currency, rule: input_rule): product_price_rule
  delete_product_price_rule(id: ID!, versionId: ID): ID
  create_product_manufacturer(id: ID, versionId: ID, catalogId: ID, mediaId: ID, link: String, updatedAt: Date, createdAt: Date, name: String, description: String, metaTitle: String, metaDescription: String, metaKeywords: String, media: input_media, products: [input_product], translations: [input_product_manufacturer_translation], catalog: input_catalog): product_manufacturer
  update_product_manufacturer(id: ID!, versionId: ID, catalogId: ID, mediaId: ID, link: String, updatedAt: Date, createdAt: Date, name: String, description: String, metaTitle: String, metaDescription: String, metaKeywords: String, media: input_media, products: [input_product], translations: [input_product_manufacturer_translation], catalog: input_catalog): product_manufacturer
  delete_product_manufacturer(id: ID!, versionId: ID): ID
  create_product_media(id: ID, versionId: ID, catalogId: ID, productId: ID, productVersionId: ID, mediaId: ID, position: Int, createdAt: Date, updatedAt: Date, product: input_product, media: input_media, catalog: input_catalog): product_media
  update_product_media(id: ID!, versionId: ID, catalogId: ID, productId: ID, productVersionId: ID, mediaId: ID, position: Int, createdAt: Date, updatedAt: Date, product: input_product, media: input_media, catalog: input_catalog): product_media
  delete_product_media(id: ID!, versionId: ID): ID
  create_search_document(id: ID, languageId: ID, entityId: ID, entity: String!, keyword: String!, ranking: Float!, language: input_language): search_document
  update_search_document(id: ID!, languageId: ID!, entityId: ID!, entity: String, keyword: String, ranking: Float, language: input_language): search_document
  delete_search_document(id: ID!, languageId: ID!, entityId: ID!): ID
  create_product_service(id: ID, versionId: ID, productId: ID, productVersionId: ID, optionId: ID, taxId: ID, price: Json, prices: Json, createdAt: Date, updatedAt: Date, product: input_product, option: input_configuration_group_option, tax: input_tax): product_service
  update_product_service(id: ID!, versionId: ID, productId: ID, productVersionId: ID, optionId: ID, taxId: ID, price: Json, prices: Json, createdAt: Date, updatedAt: Date, product: input_product, option: input_configuration_group_option, tax: input_tax): product_service
  delete_product_service(id: ID!, versionId: ID): ID
  create_rule(id: ID, name: String!, priority: Int!, description: String, payload: Json, invalid: Boolean, createdAt: Date, updatedAt: Date, conditions: [input_rule_condition], discountSurcharges: [input_discount_surcharge], productPriceRules: [input_product_price_rule]): rule
  update_rule(id: ID!, name: String, priority: Int, description: String, payload: Json, invalid: Boolean, createdAt: Date, updatedAt: Date, conditions: [input_rule_condition], discountSurcharges: [input_discount_surcharge], productPriceRules: [input_product_price_rule]): rule
  delete_rule(id: ID!): ID
  create_rule_condition(id: ID, type: String!, ruleId: ID, parentId: ID, value: Json, position: Int, rule: input_rule, parent: input_rule_condition, children: [input_rule_condition]): rule_condition
  update_rule_condition(id: ID!, type: String, ruleId: ID, parentId: ID, value: Json, position: Int, rule: input_rule, parent: input_rule_condition, children: [input_rule_condition]): rule_condition
  delete_rule_condition(id: ID!): ID
  create_configuration_group(id: ID, name: String, description: String, position: Int, filterable: Boolean, comparable: Boolean, displayType: String! = "text", sortingType: String! = "alphanumeric", createdAt: Date, updatedAt: Date, options: [input_configuration_group_option], translations: [input_configuration_group_translation]): configuration_group
  update_configuration_group(id: ID!, name: String, description: String, position: Int, filterable: Boolean, comparable: Boolean, displayType: String, sortingType: String, createdAt: Date, updatedAt: Date, options: [input_configuration_group_option], translations: [input_configuration_group_translation]): configuration_group
  delete_configuration_group(id: ID!): ID
  create_configuration_group_option(id: ID, groupId: ID, name: String, position: String, colorHexCode: String, mediaId: ID, createdAt: Date, updatedAt: Date, media: input_media, group: input_configuration_group, translations: [input_configuration_group_option_translation], productConfigurators: [input_product_configurator], productServices: [input_product_service], productDatasheets: [input_product], productVariations: [input_product]): configuration_group_option
  update_configuration_group_option(id: ID!, groupId: ID, name: String, position: String, colorHexCode: String, mediaId: ID, createdAt: Date, updatedAt: Date, media: input_media, group: input_configuration_group, translations: [input_configuration_group_option_translation], productConfigurators: [input_product_configurator], productServices: [input_product_service], productDatasheets: [input_product], productVariations: [input_product]): configuration_group_option
  delete_configuration_group_option(id: ID!): ID
  create_customer(id: ID, groupId: ID, defaultPaymentMethodId: ID, salesChannelId: ID, lastPaymentMethodId: ID, defaultBillingAddressId: ID, defaultShippingAddressId: ID, autoIncrement: Int, customerNumber: String!, salutation: String, firstName: String!, lastName: String!, email: String!, title: String, encoder: String, active: Boolean, guest: Boolean, confirmationKey: String, firstLogin: Date, lastLogin: Date, sessionId: String, newsletter: Boolean, validation: String, affiliate: Boolean, referer: String, internalComment: String, failedLogins: Int, lockedUntil: Date, birthday: Date, createdAt: Date, updatedAt: Date, group: input_customer_group, defaultPaymentMethod: input_payment_method, salesChannel: input_sales_channel, lastPaymentMethod: input_payment_method, defaultBillingAddress: input_customer_address, defaultShippingAddress: input_customer_address, addresses: [input_customer_address], orderCustomers: [input_order_customer], searchKeywords: [input_search_document]): customer
  update_customer(id: ID!, groupId: ID, defaultPaymentMethodId: ID, salesChannelId: ID, lastPaymentMethodId: ID, defaultBillingAddressId: ID, defaultShippingAddressId: ID, autoIncrement: Int, customerNumber: String, salutation: String, firstName: String, lastName: String, email: String, title: String, encoder: String, active: Boolean, guest: Boolean, confirmationKey: String, firstLogin: Date, lastLogin: Date, sessionId: String, newsletter: Boolean, validation: String, affiliate: Boolean, referer: String, internalComment: String, failedLogins: Int, lockedUntil: Date, birthday: Date, createdAt: Date, updatedAt: Date, group: input_customer_group, defaultPaymentMethod: input_payment_method, salesChannel: input_sales_channel, lastPaymentMethod: input_payment_method, defaultBillingAddress: input_customer_address, defaultShippingAddress: input_customer_address, addresses: [input_customer_address], orderCustomers: [input_order_customer], searchKeywords: [input_search_document]): customer
  delete_customer(id: ID!): ID
  create_customer_address(id: ID, customerId: ID, countryId: ID, countryStateId: ID, salutation: String, firstName: String!, lastName: String!, zipcode: String!, city: String!, company: String, street: String!, department: String, title: String, vatId: String, phoneNumber: String, additionalAddressLine1: String, additionalAddressLine2: String, createdAt: Date, updatedAt: Date, customer: input_customer, country: input_country, countryState: input_country_state): customer_address
  update_customer_address(id: ID!, customerId: ID, countryId: ID, countryStateId: ID, salutation: String, firstName: String, lastName: String, zipcode: String, city: String, company: String, street: String, department: String, title: String, vatId: String, phoneNumber: String, additionalAddressLine1: String, additionalAddressLine2: String, createdAt: Date, updatedAt: Date, customer: input_customer, country: input_country, countryState: input_country_state): customer_address
  delete_customer_address(id: ID!): ID
  create_customer_group(id: ID, name: String, displayGross: Boolean, inputGross: Boolean, hasGlobalDiscount: Boolean, percentageGlobalDiscount: Float, minimumOrderAmount: Float, minimumOrderAmountSurcharge: Float, createdAt: Date, updatedAt: Date, customers: [input_customer], discounts: [input_customer_group_discount], translations: [input_customer_group_translation]): customer_group
  update_customer_group(id: ID!, name: String, displayGross: Boolean, inputGross: Boolean, hasGlobalDiscount: Boolean, percentageGlobalDiscount: Float, minimumOrderAmount: Float, minimumOrderAmountSurcharge: Float, createdAt: Date, updatedAt: Date, customers: [input_customer], discounts: [input_customer_group_discount], translations: [input_customer_group_translation]): customer_group
  delete_customer_group(id: ID!): ID
  create_customer_group_discount(id: ID, customerGroupId: ID, percentageDiscount: Float!, minimumCartAmount: Float!, createdAt: Date, updatedAt: Date, customerGroup: input_customer_group): customer_group_discount
  update_customer_group_discount(id: ID!, customerGroupId: ID, percentageDiscount: Float, minimumCartAmount: Float, createdAt: Date, updatedAt: Date, customerGroup: input_customer_group): customer_group_discount
  delete_customer_group_discount(id: ID!): ID
  create_order(id: ID, versionId: ID, autoIncrement: Int, orderCustomerId: ID, orderCustomerVersionId: ID, stateId: ID, orderStateVersionId: ID, paymentMethodId: ID, currencyId: ID, salesChannelId: ID, billingAddressId: ID, billingAddressVersionId: ID, date: Date!, amountTotal: Float!, amountNet: Float, positionPrice: Float!, shippingTotal: Float!, currencyFactor: Float!, isNet: Boolean!, isTaxFree: Boolean!, deepLinkCode: String, createdAt: Date, updatedAt: Date, orderCustomer: input_order_customer, state: input_order_state, paymentMethod: input_payment_method, currency: input_currency, salesChannel: input_sales_channel, billingAddress: input_order_address, deliveries: [input_order_delivery], lineItems: [input_order_line_item], transactions: [input_order_transaction], searchKeywords: [input_search_document]): order
  update_order(id: ID!, versionId: ID, autoIncrement: Int, orderCustomerId: ID, orderCustomerVersionId: ID, stateId: ID, orderStateVersionId: ID, paymentMethodId: ID, currencyId: ID, salesChannelId: ID, billingAddressId: ID, billingAddressVersionId: ID, date: Date, amountTotal: Float, amountNet: Float, positionPrice: Float, shippingTotal: Float, currencyFactor: Float, isNet: Boolean, isTaxFree: Boolean, deepLinkCode: String, createdAt: Date, updatedAt: Date, orderCustomer: input_order_customer, state: input_order_state, paymentMethod: input_payment_method, currency: input_currency, salesChannel: input_sales_channel, billingAddress: input_order_address, deliveries: [input_order_delivery], lineItems: [input_order_line_item], transactions: [input_order_transaction], searchKeywords: [input_search_document]): order
  delete_order(id: ID!, versionId: ID): ID
  create_order_address(id: ID, versionId: ID, countryId: ID, countryStateId: ID, salutation: String, firstName: String!, lastName: String!, street: String!, zipcode: String!, city: String!, company: String, department: String, title: String, vatId: String, phoneNumber: String, additionalAddressLine1: String, additionalAddressLine2: String, createdAt: Date, updatedAt: Date, country: input_country, countryState: input_country_state, orders: [input_order], orderDeliveries: [input_order_delivery]): order_address
  update_order_address(id: ID!, versionId: ID, countryId: ID, countryStateId: ID, salutation: String, firstName: String, lastName: String, street: String, zipcode: String, city: String, company: String, department: String, title: String, vatId: String, phoneNumber: String, additionalAddressLine1: String, additionalAddressLine2: String, createdAt: Date, updatedAt: Date, country: input_country, countryState: input_country_state, orders: [input_order], orderDeliveries: [input_order_delivery]): order_address
  delete_order_address(id: ID!, versionId: ID): ID
  create_order_customer(id: ID, versionId: ID, customerId: ID, email: String!, firstName: String!, lastName: String!, salutation: String, title: String, customerNumber: String, createdAt: Date, updatedAt: Date, customer: input_customer, orders: [input_order]): order_customer
  update_order_customer(id: ID!, versionId: ID, customerId: ID, email: String, firstName: String, lastName: String, salutation: String, title: String, customerNumber: String, createdAt: Date, updatedAt: Date, customer: input_customer, orders: [input_order]): order_customer
  delete_order_customer(id: ID!, versionId: ID): ID
  create_order_delivery(id: ID, versionId: ID, orderId: ID, orderVersionId: ID, shippingOrderAddressId: ID, shippingOrderAddressVersionId: ID, orderStateId: ID, orderStateVersionId: ID, shippingMethodId: ID, shippingDateEarliest: Date!, shippingDateLatest: Date!, trackingCode: String, createdAt: Date, updatedAt: Date, order: input_order, shippingOrderAddress: input_order_address, orderState: input_order_state, shippingMethod: input_shipping_method, positions: [input_order_delivery_position]): order_delivery
  update_order_delivery(id: ID!, versionId: ID, orderId: ID, orderVersionId: ID, shippingOrderAddressId: ID, shippingOrderAddressVersionId: ID, orderStateId: ID, orderStateVersionId: ID, shippingMethodId: ID, shippingDateEarliest: Date, shippingDateLatest: Date, trackingCode: String, createdAt: Date, updatedAt: Date, order: input_order, shippingOrderAddress: input_order_address, orderState: input_order_state, shippingMethod: input_shipping_method, positions: [input_order_delivery_position]): order_delivery
  delete_order_delivery(id: ID!, versionId: ID): ID
  create_order_delivery_position(id: ID, versionId: ID, orderDeliveryId: ID, orderDeliveryVersionId: ID, orderLineItemId: ID, orderLineItemVersionId: ID, unitPrice: Float!, totalPrice: Float!, quantity: Float!, createdAt: Date, updatedAt: Date, orderDelivery: input_order_delivery, orderLineItem: input_order_line_item): order_delivery_position
  update_order_delivery_position(id: ID!, versionId: ID, orderDeliveryId: ID, orderDeliveryVersionId: ID, orderLineItemId: ID, orderLineItemVersionId: ID, unitPrice: Float, totalPrice: Float, quantity: Float, createdAt: Date, updatedAt: Date, orderDelivery: input_order_delivery, orderLineItem: input_order_line_item): order_delivery_position
  delete_order_delivery_position(id: ID!, versionId: ID): ID
  create_order_line_item(id: ID, versionId: ID, orderId: ID, orderVersionId: ID, parentId: ID, parentVersionId: ID, identifier: String!, quantity: Int!, label: String!, payload: Json, good: Boolean, removable: Boolean, stackable: Boolean, priority: Int, price: Json, priceDefinition: Json, unitPrice: Float!, totalPrice: Float!, description: String, type: String, createdAt: Date, updatedAt: Date, order: input_order, orderDeliveryPositions: [input_order_delivery_position], parent: input_order_line_item, children: [input_order_line_item]): order_line_item
  update_order_line_item(id: ID!, versionId: ID, orderId: ID, orderVersionId: ID, parentId: ID, parentVersionId: ID, identifier: String, quantity: Int, label: String, payload: Json, good: Boolean, removable: Boolean, stackable: Boolean, priority: Int, price: Json, priceDefinition: Json, unitPrice: Float, totalPrice: Float, description: String, type: String, createdAt: Date, updatedAt: Date, order: input_order, orderDeliveryPositions: [input_order_delivery_position], parent: input_order_line_item, children: [input_order_line_item]): order_line_item
  delete_order_line_item(id: ID!, versionId: ID): ID
  create_order_state(id: ID, versionId: ID, description: String, position: Int, hasMail: Boolean, createdAt: Date, updatedAt: Date, orders: [input_order], orderDeliveries: [input_order_delivery], translations: [input_order_state_translation]): order_state
  update_order_state(id: ID!, versionId: ID, description: String, position: Int, hasMail: Boolean, createdAt: Date, updatedAt: Date, orders: [input_order], orderDeliveries: [input_order_delivery], translations: [input_order_state_translation]): order_state
  delete_order_state(id: ID!, versionId: ID): ID
  create_order_transaction(id: ID, versionId: ID, orderId: ID, orderVersionId: ID, paymentMethodId: ID, orderTransactionStateId: ID, orderTransactionStateVersionId: ID, amount: Json!, details: Json, createdAt: Date, updatedAt: Date, order: input_order, paymentMethod: input_payment_method, orderTransactionState: input_order_transaction_state): order_transaction
  update_order_transaction(id: ID!, versionId: ID, orderId: ID, orderVersionId: ID, paymentMethodId: ID, orderTransactionStateId: ID, orderTransactionStateVersionId: ID, amount: Json, details: Json, createdAt: Date, updatedAt: Date, order: input_order, paymentMethod: input_payment_method, orderTransactionState: input_order_transaction_state): order_transaction
  delete_order_transaction(id: ID!, versionId: ID): ID
  create_order_transaction_state(versionId: ID, id: ID, position: Int!, hasMail: Boolean!, description: String, createdAt: Date, updatedAt: Date, translations: [input_order_transaction_state_translation], orderTransactions: [input_order_transaction]): order_transaction_state
  update_order_transaction_state(versionId: ID, id: ID!, position: Int, hasMail: Boolean, description: String, createdAt: Date, updatedAt: Date, translations: [input_order_transaction_state_translation], orderTransactions: [input_order_transaction]): order_transaction_state
  delete_order_transaction_state(versionId: ID, id: ID!): ID
  create_payment_method(id: ID, pluginId: ID, technicalName: String!, name: String, additionalDescription: String, template: String, class: String, percentageSurcharge: Float, absoluteSurcharge: Float, surchargeString: String, position: Int, active: Boolean, riskRules: String, createdAt: Date, updatedAt: Date, salesChannelDefaultAssignments: [input_sales_channel], plugin: input_plugin, customers: [input_customer], orders: [input_order], orderTransactions: [input_order_transaction], translations: [input_payment_method_translation], salesChannels: [input_sales_channel]): payment_method
  update_payment_method(id: ID!, pluginId: ID, technicalName: String, name: String, additionalDescription: String, template: String, class: String, percentageSurcharge: Float, absoluteSurcharge: Float, surchargeString: String, position: Int, active: Boolean, riskRules: String, createdAt: Date, updatedAt: Date, salesChannelDefaultAssignments: [input_sales_channel], plugin: input_plugin, customers: [input_customer], orders: [input_order], orderTransactions: [input_order_transaction], translations: [input_payment_method_translation], salesChannels: [input_sales_channel]): payment_method
  delete_payment_method(id: ID!): ID
  create_shipping_method(id: ID, type: Int!, bindShippingfree: Boolean!, bindLaststock: Boolean, name: String, active: Boolean, position: Int, calculation: Int, surchargeCalculation: Int, taxCalculation: Int, minDeliveryTime: Int, maxDeliveryTime: Int, shippingFree: Float, bindTimeFrom: Int, bindTimeTo: Int, bindInstock: Boolean, bindWeekdayFrom: Int, bindWeekdayTo: Int, bindWeightFrom: Float, bindWeightTo: Float, bindPriceFrom: Float, bindPriceTo: Float, bindSql: String, statusLink: String, calculationSql: String, createdAt: Date, updatedAt: Date, salesChannelDefaultAssignments: [input_sales_channel], description: String, comment: String, orderDeliveries: [input_order_delivery], prices: [input_shipping_method_price], translations: [input_shipping_method_translation], salesChannels: [input_sales_channel]): shipping_method
  update_shipping_method(id: ID!, type: Int, bindShippingfree: Boolean, bindLaststock: Boolean, name: String, active: Boolean, position: Int, calculation: Int, surchargeCalculation: Int, taxCalculation: Int, minDeliveryTime: Int, maxDeliveryTime: Int, shippingFree: Float, bindTimeFrom: Int, bindTimeTo: Int, bindInstock: Boolean, bindWeekdayFrom: Int, bindWeekdayTo: Int, bindWeightFrom: Float, bindWeightTo: Float, bindPriceFrom: Float, bindPriceTo: Float, bindSql: String, statusLink: String, calculationSql: String, createdAt: Date, updatedAt: Date, salesChannelDefaultAssignments: [input_sales_channel], description: String, comment: String, orderDeliveries: [input_order_delivery], prices: [input_shipping_method_price], translations: [input_shipping_method_translation], salesChannels: [input_sales_channel]): shipping_method
  delete_shipping_method(id: ID!): ID
  create_shipping_method_price(id: ID, shippingMethodId: ID, quantityFrom: Float!, price: Float!, factor: Float!, createdAt: Date, updatedAt: Date, shippingMethod: input_shipping_method): shipping_method_price
  update_shipping_method_price(id: ID!, shippingMethodId: ID, quantityFrom: Float, price: Float, factor: Float, createdAt: Date, updatedAt: Date, shippingMethod: input_shipping_method): shipping_method_price
  delete_shipping_method_price(id: ID!): ID
  create_discount_surcharge(id: ID, name: String, ruleId: ID, filterRule: Json!, type: String!, amount: Float!, createdAt: Date, updatedAt: Date, translations: [input_discount_surcharge_translation], rule: input_rule): discount_surcharge
  update_discount_surcharge(id: ID!, name: String, ruleId: ID, filterRule: Json, type: String, amount: Float, createdAt: Date, updatedAt: Date, translations: [input_discount_surcharge_translation], rule: input_rule): discount_surcharge
  delete_discount_surcharge(id: ID!): ID
  create_named(id: ID, name: String!, optionalGroupId: ID, optionalGroup: input_named_optional_group): named
  update_named(id: ID!, name: String, optionalGroupId: ID, optionalGroup: input_named_optional_group): named
  delete_named(id: ID!): ID
  create_named_optional_group(id: ID, name: String!, nameds: [input_named]): named_optional_group
  update_named_optional_group(id: ID!, name: String, nameds: [input_named]): named_optional_group
  delete_named_optional_group(id: ID!): ID
}

type Query {
  """Generates access keys for integrations."""
  generate_integration_key: IntegrationAccessKey

  """Generates the access key for a sales channel."""
  generate_sales_channel_key: ID!

  """Generates the access keys for a user."""
  generate_user_key: UserAccessKey
  seo_url(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): seo_url_connection
  version(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): version_connection
  version_commit(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): version_commit_connection
  version_commit_data(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): version_commit_data_connection
  plugin(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): plugin_connection
  sales_channel(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): sales_channel_connection
  sales_channel_domain(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): sales_channel_domain_connection
  sales_channel_type(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): sales_channel_type_connection
  country(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): country_connection
  country_state(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): country_state_connection
  currency(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): currency_connection
  locale(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): locale_connection
  listing_facet(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): listing_facet_connection
  listing_sorting(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): listing_sorting_connection
  snippet_set(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): snippet_set_connection
  snippet(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): snippet_connection
  tax(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): tax_connection
  unit(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): unit_connection
  user(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): user_connection
  user_access_key(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): user_access_key_connection
  language(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): language_connection
  integration(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): integration_connection
  catalog(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): catalog_connection
  category(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): category_connection
  media(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): media_connection
  media_default_folder(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): media_default_folder_connection
  media_thumbnail(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): media_thumbnail_connection
  media_folder(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): media_folder_connection
  media_thumbnail_size(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): media_thumbnail_size_connection
  media_folder_configuration(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): media_folder_configuration_connection
  product(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): product_connection
  product_configurator(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): product_configurator_connection
  product_price_rule(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): product_price_rule_connection
  product_manufacturer(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): product_manufacturer_connection
  product_media(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): product_media_connection
  search_document(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): search_document_connection
  product_service(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): product_service_connection
  rule(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): rule_connection
  rule_condition(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): rule_condition_connection
  configuration_group(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): configuration_group_connection
  configuration_group_option(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): configuration_group_option_connection
  customer(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): customer_connection
  customer_address(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): customer_address_connection
  customer_group(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): customer_group_connection
  customer_group_discount(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): customer_group_discount_connection
  order(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): order_connection
  order_address(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): order_address_connection
  order_customer(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): order_customer_connection
  order_delivery(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): order_delivery_connection
  order_delivery_position(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): order_delivery_position_connection
  order_line_item(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): order_line_item_connection
  order_state(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): order_state_connection
  order_transaction(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): order_transaction_connection
  order_transaction_state(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): order_transaction_state_connection
  payment_method(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): payment_method_connection
  shipping_method(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): shipping_method_connection
  shipping_method_price(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): shipping_method_price_connection
  discount_surcharge(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): discount_surcharge_connection
  named(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): named_connection
  named_optional_group(first: Int, last: Int, after: String, before: String, sortBy: String, sortDirection: sortDirection, query: query, aggregations: [aggregation]): named_optional_group_connection
}

type UserAccessKey {
  accessKey: ID!
  secretAccessKey: ID!
}

input aggregation {
  type: aggregationTypes!
  name: String!
  field: String!
}

type aggregationResult {
  type: String
  result: Float
}

type aggregationResults {
  name: String
  results: [aggregationResult]
}

enum aggregationTypes {
  avg
  cardinality
  count
  max
  min
  stats
  sum
  value_count
}

type catalog {
  id: ID!
  name: String
  createdAt: Date!
  updatedAt: Date!
  categories: category_connection
  categoryTranslations: category_translation_connection
  products: product_connection
  productManufacturers: product_manufacturer_connection
  productManufacturerTranslations: product_manufacturer_translation_connection
  productMedia: product_media_connection
  productTranslations: product_translation_connection
  translations: catalog_translation_connection!
  salesChannels: sales_channel_connection
}

type catalog_connection {
  total: Int
  edges: [catalog_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type catalog_edge {
  node: catalog
  cursor: ID
}

type catalog_translation {
  name: String!
  catalogId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  catalog: catalog
  language: language
}

type catalog_translation_connection {
  total: Int
  edges: [catalog_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type catalog_translation_edge {
  node: catalog_translation
  cursor: ID
}

type category {
  id: ID!
  versionId: ID!
  catalogId: ID!
  parentId: ID
  parentVersionId: ID!
  mediaId: ID
  autoIncrement: Int
  path: String
  position: Int
  level: Int
  template: String
  active: Boolean
  isBlog: Boolean
  external: String
  hideFilter: Boolean
  hideTop: Boolean
  productBoxLayout: String
  hideSortings: Boolean
  sortingIds: String
  facetIds: String
  childCount: Int
  createdAt: Date!
  updatedAt: Date!
  name: String
  metaKeywords: String
  metaTitle: String
  metaDescription: String
  cmsHeadline: String
  cmsDescription: String
  parent: category
  media: media
  children: category_connection
  translations: category_translation_connection!
  products: product_connection
  catalog: catalog
  nestedProducts: product_connection
  canonicalUrl: seo_url
}

type category_connection {
  total: Int
  edges: [category_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type category_edge {
  node: category
  cursor: ID
}

type category_translation {
  name: String!
  metaKeywords: String
  metaTitle: String
  metaDescription: String
  cmsHeadline: String
  cmsDescription: String
  catalogId: ID!
  catalog: catalog
  categoryId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  category: category
  language: language
  categoryVersionId: ID!
}

type category_translation_connection {
  total: Int
  edges: [category_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type category_translation_edge {
  node: category_translation
  cursor: ID
}

type configuration_group {
  id: ID!
  name: String
  description: String
  position: Int
  filterable: Boolean
  comparable: Boolean
  displayType: String!
  sortingType: String!
  createdAt: Date!
  updatedAt: Date!
  options: configuration_group_option_connection
  translations: configuration_group_translation_connection!
}

type configuration_group_connection {
  total: Int
  edges: [configuration_group_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type configuration_group_edge {
  node: configuration_group
  cursor: ID
}

type configuration_group_option {
  id: ID!
  groupId: ID!
  name: String
  position: String
  colorHexCode: String
  mediaId: ID
  createdAt: Date!
  updatedAt: Date!
  media: media
  group: configuration_group
  translations: configuration_group_option_translation_connection!
  productConfigurators: product_configurator_connection
  productServices: product_service_connection
  productDatasheets: product_connection
  productVariations: product_connection
}

type configuration_group_option_connection {
  total: Int
  edges: [configuration_group_option_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type configuration_group_option_edge {
  node: configuration_group_option
  cursor: ID
}

type configuration_group_option_translation {
  name: String!
  position: Int
  configurationGroupOptionId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  configurationGroupOption: configuration_group_option
  language: language
}

type configuration_group_option_translation_connection {
  total: Int
  edges: [configuration_group_option_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type configuration_group_option_translation_edge {
  node: configuration_group_option_translation
  cursor: ID
}

type configuration_group_translation {
  name: String!
  description: String
  configurationGroupId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  configurationGroup: configuration_group
  language: language
}

type configuration_group_translation_connection {
  total: Int
  edges: [configuration_group_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type configuration_group_translation_edge {
  node: configuration_group_translation
  cursor: ID
}

type country {
  id: ID!
  name: String
  iso: String
  position: Int
  shippingFree: Boolean
  taxFree: Boolean
  taxfreeForVatId: Boolean
  taxfreeVatidChecked: Boolean
  active: Boolean
  iso3: String
  displayStateInRegistration: Boolean
  forceStateInRegistration: Boolean
  createdAt: Date!
  updatedAt: Date!
  salesChannelDefaultAssignments: sales_channel_connection
  states: country_state_connection
  translations: country_translation_connection!
  customerAddresses: customer_address_connection
  orderAddresses: order_address_connection
  salesChannels: sales_channel_connection
}

type country_connection {
  total: Int
  edges: [country_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type country_edge {
  node: country
  cursor: ID
}

type country_state {
  id: ID!
  countryId: ID!
  shortCode: String!
  name: String
  position: Int
  active: Boolean
  createdAt: Date!
  updatedAt: Date!
  country: country
  translations: country_state_translation_connection!
  customerAddresses: customer_address_connection
  orderAddresses: order_address_connection
}

type country_state_connection {
  total: Int
  edges: [country_state_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type country_state_edge {
  node: country_state
  cursor: ID
}

type country_state_translation {
  name: String!
  countryStateId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  countryState: country_state
  language: language
}

type country_state_translation_connection {
  total: Int
  edges: [country_state_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type country_state_translation_edge {
  node: country_state_translation
  cursor: ID
}

type country_translation {
  name: String!
  countryId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  country: country
  language: language
}

type country_translation_connection {
  total: Int
  edges: [country_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type country_translation_edge {
  node: country_translation
  cursor: ID
}

type currency {
  id: ID!
  factor: Float!
  symbol: String!
  shortName: String
  name: String
  isDefault: Boolean
  placedInFront: Boolean
  position: Int
  createdAt: Date!
  updatedAt: Date!
  salesChannelDefaultAssignments: sales_channel_connection
  translations: currency_translation_connection!
  orders: order_connection
  productPriceRules: product_price_rule_connection
  salesChannels: sales_channel_connection
  salesChannelDomains: sales_channel_domain_connection
}

type currency_connection {
  total: Int
  edges: [currency_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type currency_edge {
  node: currency
  cursor: ID
}

type currency_translation {
  shortName: String!
  name: String!
  currencyId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  currency: currency
  language: language
}

type currency_translation_connection {
  total: Int
  edges: [currency_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type currency_translation_edge {
  node: currency_translation
  cursor: ID
}

type customer {
  id: ID!
  groupId: ID!
  defaultPaymentMethodId: ID!
  salesChannelId: ID!
  lastPaymentMethodId: ID
  defaultBillingAddressId: ID!
  defaultShippingAddressId: ID!
  autoIncrement: Int
  customerNumber: String!
  salutation: String
  firstName: String!
  lastName: String!
  email: String!
  title: String
  encoder: String
  active: Boolean
  guest: Boolean
  confirmationKey: String
  firstLogin: Date
  lastLogin: Date
  sessionId: String
  newsletter: Boolean
  validation: String
  affiliate: Boolean
  referer: String
  internalComment: String
  failedLogins: Int
  lockedUntil: Date
  birthday: Date
  createdAt: Date!
  updatedAt: Date!
  group: customer_group
  defaultPaymentMethod: payment_method
  salesChannel: sales_channel
  lastPaymentMethod: payment_method
  defaultBillingAddress: customer_address
  defaultShippingAddress: customer_address
  addresses: customer_address_connection
  orderCustomers: order_customer_connection
  searchKeywords: search_document_connection
}

type customer_address {
  id: ID!
  customerId: ID!
  countryId: ID!
  countryStateId: ID
  salutation: String
  firstName: String!
  lastName: String!
  zipcode: String!
  city: String!
  company: String
  street: String!
  department: String
  title: String
  vatId: String
  phoneNumber: String
  additionalAddressLine1: String
  additionalAddressLine2: String
  createdAt: Date!
  updatedAt: Date!
  customer: customer
  country: country
  countryState: country_state
}

type customer_address_connection {
  total: Int
  edges: [customer_address_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type customer_address_edge {
  node: customer_address
  cursor: ID
}

type customer_connection {
  total: Int
  edges: [customer_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type customer_edge {
  node: customer
  cursor: ID
}

type customer_group {
  id: ID!
  name: String
  displayGross: Boolean
  inputGross: Boolean
  hasGlobalDiscount: Boolean
  percentageGlobalDiscount: Float
  minimumOrderAmount: Float
  minimumOrderAmountSurcharge: Float
  createdAt: Date!
  updatedAt: Date!
  customers: customer_connection
  discounts: customer_group_discount_connection
  translations: customer_group_translation_connection!
}

type customer_group_connection {
  total: Int
  edges: [customer_group_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type customer_group_discount {
  id: ID!
  customerGroupId: ID!
  percentageDiscount: Float!
  minimumCartAmount: Float!
  createdAt: Date!
  updatedAt: Date!
  customerGroup: customer_group
}

type customer_group_discount_connection {
  total: Int
  edges: [customer_group_discount_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type customer_group_discount_edge {
  node: customer_group_discount
  cursor: ID
}

type customer_group_edge {
  node: customer_group
  cursor: ID
}

type customer_group_translation {
  name: String!
  customerGroupId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  customerGroup: customer_group
  language: language
}

type customer_group_translation_connection {
  total: Int
  edges: [customer_group_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type customer_group_translation_edge {
  node: customer_group_translation
  cursor: ID
}

type discount_surcharge {
  id: ID!
  name: String
  ruleId: ID!
  filterRule: Json!
  type: String!
  amount: Float!
  createdAt: Date!
  updatedAt: Date!
  translations: discount_surcharge_translation_connection!
  rule: rule
}

type discount_surcharge_connection {
  total: Int
  edges: [discount_surcharge_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type discount_surcharge_edge {
  node: discount_surcharge
  cursor: ID
}

type discount_surcharge_translation {
  name: String!
  discountSurchargeId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  discountSurcharge: discount_surcharge
  language: language
}

type discount_surcharge_translation_connection {
  total: Int
  edges: [discount_surcharge_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type discount_surcharge_translation_edge {
  node: discount_surcharge_translation
  cursor: ID
}

input input_catalog {
  id: ID
  name: String
  createdAt: Date
  updatedAt: Date
  categories: [input_category]
  categoryTranslations: [input_category_translation]
  products: [input_product]
  productManufacturers: [input_product_manufacturer]
  productManufacturerTranslations: [input_product_manufacturer_translation]
  productMedia: [input_product_media]
  productTranslations: [input_product_translation]
  translations: [input_catalog_translation]
  salesChannels: [input_sales_channel]
}

input input_catalog_translation {
  name: String
  catalogId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  catalog: input_catalog
  language: input_language
}

input input_category {
  id: ID
  versionId: ID
  catalogId: ID
  parentId: ID
  parentVersionId: ID
  mediaId: ID
  autoIncrement: Int
  path: String
  position: Int
  level: Int
  template: String
  active: Boolean
  isBlog: Boolean
  external: String
  hideFilter: Boolean
  hideTop: Boolean
  productBoxLayout: String
  hideSortings: Boolean
  sortingIds: String
  facetIds: String
  childCount: Int
  createdAt: Date
  updatedAt: Date
  name: String
  metaKeywords: String
  metaTitle: String
  metaDescription: String
  cmsHeadline: String
  cmsDescription: String
  parent: input_category
  media: input_media
  children: [input_category]
  translations: [input_category_translation]
  products: [input_product]
  catalog: input_catalog
  nestedProducts: [input_product]
  canonicalUrl: input_seo_url
}

input input_category_translation {
  name: String
  metaKeywords: String
  metaTitle: String
  metaDescription: String
  cmsHeadline: String
  cmsDescription: String
  catalogId: ID
  catalog: input_catalog
  categoryId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  category: input_category
  language: input_language
  categoryVersionId: ID
}

input input_configuration_group {
  id: ID
  name: String
  description: String
  position: Int
  filterable: Boolean
  comparable: Boolean
  displayType: String
  sortingType: String
  createdAt: Date
  updatedAt: Date
  options: [input_configuration_group_option]
  translations: [input_configuration_group_translation]
}

input input_configuration_group_option {
  id: ID
  groupId: ID
  name: String
  position: String
  colorHexCode: String
  mediaId: ID
  createdAt: Date
  updatedAt: Date
  media: input_media
  group: input_configuration_group
  translations: [input_configuration_group_option_translation]
  productConfigurators: [input_product_configurator]
  productServices: [input_product_service]
  productDatasheets: [input_product]
  productVariations: [input_product]
}

input input_configuration_group_option_translation {
  name: String
  position: Int
  configurationGroupOptionId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  configurationGroupOption: input_configuration_group_option
  language: input_language
}

input input_configuration_group_translation {
  name: String
  description: String
  configurationGroupId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  configurationGroup: input_configuration_group
  language: input_language
}

input input_country {
  id: ID
  name: String
  iso: String
  position: Int
  shippingFree: Boolean
  taxFree: Boolean
  taxfreeForVatId: Boolean
  taxfreeVatidChecked: Boolean
  active: Boolean
  iso3: String
  displayStateInRegistration: Boolean
  forceStateInRegistration: Boolean
  createdAt: Date
  updatedAt: Date
  salesChannelDefaultAssignments: [input_sales_channel]
  states: [input_country_state]
  translations: [input_country_translation]
  customerAddresses: [input_customer_address]
  orderAddresses: [input_order_address]
  salesChannels: [input_sales_channel]
}

input input_country_state {
  id: ID
  countryId: ID
  shortCode: String
  name: String
  position: Int
  active: Boolean
  createdAt: Date
  updatedAt: Date
  country: input_country
  translations: [input_country_state_translation]
  customerAddresses: [input_customer_address]
  orderAddresses: [input_order_address]
}

input input_country_state_translation {
  name: String
  countryStateId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  countryState: input_country_state
  language: input_language
}

input input_country_translation {
  name: String
  countryId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  country: input_country
  language: input_language
}

input input_currency {
  id: ID
  factor: Float
  symbol: String
  shortName: String
  name: String
  isDefault: Boolean
  placedInFront: Boolean
  position: Int
  createdAt: Date
  updatedAt: Date
  salesChannelDefaultAssignments: [input_sales_channel]
  translations: [input_currency_translation]
  orders: [input_order]
  productPriceRules: [input_product_price_rule]
  salesChannels: [input_sales_channel]
  salesChannelDomains: [input_sales_channel_domain]
}

input input_currency_translation {
  shortName: String
  name: String
  currencyId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  currency: input_currency
  language: input_language
}

input input_customer {
  id: ID
  groupId: ID
  defaultPaymentMethodId: ID
  salesChannelId: ID
  lastPaymentMethodId: ID
  defaultBillingAddressId: ID
  defaultShippingAddressId: ID
  autoIncrement: Int
  customerNumber: String
  salutation: String
  firstName: String
  lastName: String
  email: String
  title: String
  encoder: String
  active: Boolean
  guest: Boolean
  confirmationKey: String
  firstLogin: Date
  lastLogin: Date
  sessionId: String
  newsletter: Boolean
  validation: String
  affiliate: Boolean
  referer: String
  internalComment: String
  failedLogins: Int
  lockedUntil: Date
  birthday: Date
  createdAt: Date
  updatedAt: Date
  group: input_customer_group
  defaultPaymentMethod: input_payment_method
  salesChannel: input_sales_channel
  lastPaymentMethod: input_payment_method
  defaultBillingAddress: input_customer_address
  defaultShippingAddress: input_customer_address
  addresses: [input_customer_address]
  orderCustomers: [input_order_customer]
  searchKeywords: [input_search_document]
}

input input_customer_address {
  id: ID
  customerId: ID
  countryId: ID
  countryStateId: ID
  salutation: String
  firstName: String
  lastName: String
  zipcode: String
  city: String
  company: String
  street: String
  department: String
  title: String
  vatId: String
  phoneNumber: String
  additionalAddressLine1: String
  additionalAddressLine2: String
  createdAt: Date
  updatedAt: Date
  customer: input_customer
  country: input_country
  countryState: input_country_state
}

input input_customer_group {
  id: ID
  name: String
  displayGross: Boolean
  inputGross: Boolean
  hasGlobalDiscount: Boolean
  percentageGlobalDiscount: Float
  minimumOrderAmount: Float
  minimumOrderAmountSurcharge: Float
  createdAt: Date
  updatedAt: Date
  customers: [input_customer]
  discounts: [input_customer_group_discount]
  translations: [input_customer_group_translation]
}

input input_customer_group_discount {
  id: ID
  customerGroupId: ID
  percentageDiscount: Float
  minimumCartAmount: Float
  createdAt: Date
  updatedAt: Date
  customerGroup: input_customer_group
}

input input_customer_group_translation {
  name: String
  customerGroupId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  customerGroup: input_customer_group
  language: input_language
}

input input_discount_surcharge {
  id: ID
  name: String
  ruleId: ID
  filterRule: Json
  type: String
  amount: Float
  createdAt: Date
  updatedAt: Date
  translations: [input_discount_surcharge_translation]
  rule: input_rule
}

input input_discount_surcharge_translation {
  name: String
  discountSurchargeId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  discountSurcharge: input_discount_surcharge
  language: input_language
}

input input_language {
  id: ID
  parentId: ID
  localeId: ID
  translationCodeId: ID
  name: String
  createdAt: Date
  updatedAt: Date
  parent: input_language
  locale: input_locale
  translationCode: input_locale
  children: [input_language]
  salesChannels: [input_sales_channel]
  salesChannelDefaultAssignments: [input_sales_channel]
  snippets: [input_snippet]
  salesChannelDomains: [input_sales_channel_domain]
  catalogTranslations: [input_catalog_translation]
  categoryTranslations: [input_category_translation]
  countryStateTranslations: [input_country_state_translation]
  countryTranslations: [input_country_translation]
  currencyTranslations: [input_currency_translation]
  customerGroupTranslations: [input_customer_group_translation]
  listingFacetTranslations: [input_listing_facet_translation]
  listingSortingTranslations: [input_listing_sorting_translation]
  localeTranslations: [input_locale_translation]
  mediaTranslations: [input_media_translation]
  orderStateTranslations: [input_order_state_translation]
  orderTransactionStateTranslations: [input_order_transaction_state_translation]
  paymentMethodTranslations: [input_payment_method_translation]
  productManufacturerTranslations: [input_product_manufacturer_translation]
  productTranslations: [input_product_translation]
  shippingMethodTranslations: [input_shipping_method_translation]
  unitTranslations: [input_unit_translation]
  configurationGroupTranslations: [input_configuration_group_translation]
  configurationGroupOptionTranslations: [input_configuration_group_option_translation]
  discountSurchargeTranslations: [input_discount_surcharge_translation]
  salesChannelTranslations: [input_sales_channel_translation]
  salesChannelTypeTranslations: [input_sales_channel_type_translation]
  searchDocuments: [input_search_document]
  mediaFolderTranslations: [input_media_folder_translation]
}

input input_listing_facet {
  id: ID
  uniqueKey: String
  payload: String
  name: String
  active: Boolean
  displayInCategories: Boolean
  deletable: Boolean
  position: Int
  createdAt: Date
  updatedAt: Date
  translations: [input_listing_facet_translation]
}

input input_listing_facet_translation {
  name: String
  listingFacetId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  listingFacet: input_listing_facet
  language: input_language
}

input input_listing_sorting {
  id: ID
  payload: Json
  label: String
  uniqueKey: String
  active: Boolean
  displayInCategories: Boolean
  position: Int
  createdAt: Date
  updatedAt: Date
  translations: [input_listing_sorting_translation]
}

input input_listing_sorting_translation {
  label: String
  listingSortingId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  listingSorting: input_listing_sorting
  language: input_language
}

input input_locale {
  id: ID
  code: String
  name: String
  territory: String
  createdAt: Date
  updatedAt: Date
  languages: [input_language]
  translations: [input_locale_translation]
  users: [input_user]
}

input input_locale_translation {
  name: String
  territory: String
  localeId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  locale: input_locale
  language: input_language
}

input input_media {
  id: ID
  userId: ID
  mediaFolderId: ID
  mimeType: String
  fileExtension: String
  uploadedAt: Date
  fileName: String
  fileSize: Int
  metaData: Json
  mediaType: Json
  createdAt: Date
  updatedAt: Date
  alt: String
  title: String
  url: String
  user: input_user
  categories: [input_category]
  productManufacturers: [input_product_manufacturer]
  productMedia: [input_product_media]
  translations: [input_media_translation]
  thumbnails: [input_media_thumbnail]
  hasFile: Boolean
  mediaFolder: input_media_folder
  configurationGroupOptions: [input_configuration_group_option]
}

input input_media_default_folder {
  id: ID
  associations: Json
  entity: String
  folderId: ID
  folder: input_media_folder
  createdAt: Date
  updatedAt: Date
}

input input_media_folder {
  id: ID
  useParentConfiguration: Boolean
  configurationId: ID
  parentId: ID
  parent: input_media_folder
  children: [input_media_folder]
  childCount: Int
  media: [input_media]
  defaultFolders: [input_media_default_folder]
  configuration: input_media_folder_configuration
  name: String
  translations: [input_media_folder_translation]
  createdAt: Date
  updatedAt: Date
}

input input_media_folder_configuration {
  id: ID
  createThumbnails: Boolean
  keepAspectRatio: Boolean
  thumbnailQuality: Int
  mediaFolders: [input_media_folder]
  mediaThumbnailSizes: [input_media_thumbnail_size]
  createdAt: Date
  updatedAt: Date
}

input input_media_folder_translation {
  name: String
  mediaFolderId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  mediaFolder: input_media_folder
  language: input_language
}

input input_media_thumbnail {
  id: ID
  mediaId: ID
  createdAt: Date
  updatedAt: Date
  width: Int
  height: Int
  url: String
  media: input_media
}

input input_media_thumbnail_size {
  id: ID
  width: Int
  height: Int
  mediaFolderConfigurations: [input_media_folder_configuration]
}

input input_media_translation {
  title: String
  alt: String
  mediaId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  media: input_media
  language: input_language
}

input input_named {
  id: ID
  name: String
  optionalGroupId: ID
  optionalGroup: input_named_optional_group
}

input input_named_optional_group {
  id: ID
  name: String
  nameds: [input_named]
}

input input_order {
  id: ID
  versionId: ID
  autoIncrement: Int
  orderCustomerId: ID
  orderCustomerVersionId: ID
  stateId: ID
  orderStateVersionId: ID
  paymentMethodId: ID
  currencyId: ID
  salesChannelId: ID
  billingAddressId: ID
  billingAddressVersionId: ID
  date: Date
  amountTotal: Float
  amountNet: Float
  positionPrice: Float
  shippingTotal: Float
  currencyFactor: Float
  isNet: Boolean
  isTaxFree: Boolean
  deepLinkCode: String
  createdAt: Date
  updatedAt: Date
  orderCustomer: input_order_customer
  state: input_order_state
  paymentMethod: input_payment_method
  currency: input_currency
  salesChannel: input_sales_channel
  billingAddress: input_order_address
  deliveries: [input_order_delivery]
  lineItems: [input_order_line_item]
  transactions: [input_order_transaction]
  searchKeywords: [input_search_document]
}

input input_order_address {
  id: ID
  versionId: ID
  countryId: ID
  countryStateId: ID
  salutation: String
  firstName: String
  lastName: String
  street: String
  zipcode: String
  city: String
  company: String
  department: String
  title: String
  vatId: String
  phoneNumber: String
  additionalAddressLine1: String
  additionalAddressLine2: String
  createdAt: Date
  updatedAt: Date
  country: input_country
  countryState: input_country_state
  orders: [input_order]
  orderDeliveries: [input_order_delivery]
}

input input_order_customer {
  id: ID
  versionId: ID
  customerId: ID
  email: String
  firstName: String
  lastName: String
  salutation: String
  title: String
  customerNumber: String
  createdAt: Date
  updatedAt: Date
  customer: input_customer
  orders: [input_order]
}

input input_order_delivery {
  id: ID
  versionId: ID
  orderId: ID
  orderVersionId: ID
  shippingOrderAddressId: ID
  shippingOrderAddressVersionId: ID
  orderStateId: ID
  orderStateVersionId: ID
  shippingMethodId: ID
  shippingDateEarliest: Date
  shippingDateLatest: Date
  trackingCode: String
  createdAt: Date
  updatedAt: Date
  order: input_order
  shippingOrderAddress: input_order_address
  orderState: input_order_state
  shippingMethod: input_shipping_method
  positions: [input_order_delivery_position]
}

input input_order_delivery_position {
  id: ID
  versionId: ID
  orderDeliveryId: ID
  orderDeliveryVersionId: ID
  orderLineItemId: ID
  orderLineItemVersionId: ID
  unitPrice: Float
  totalPrice: Float
  quantity: Float
  createdAt: Date
  updatedAt: Date
  orderDelivery: input_order_delivery
  orderLineItem: input_order_line_item
}

input input_order_line_item {
  id: ID
  versionId: ID
  orderId: ID
  orderVersionId: ID
  parentId: ID
  parentVersionId: ID
  identifier: String
  quantity: Int
  label: String
  payload: Json
  good: Boolean
  removable: Boolean
  stackable: Boolean
  priority: Int
  price: Json
  priceDefinition: Json
  unitPrice: Float
  totalPrice: Float
  description: String
  type: String
  createdAt: Date
  updatedAt: Date
  order: input_order
  orderDeliveryPositions: [input_order_delivery_position]
  parent: input_order_line_item
  children: [input_order_line_item]
}

input input_order_state {
  id: ID
  versionId: ID
  description: String
  position: Int
  hasMail: Boolean
  createdAt: Date
  updatedAt: Date
  orders: [input_order]
  orderDeliveries: [input_order_delivery]
  translations: [input_order_state_translation]
}

input input_order_state_translation {
  description: String
  orderStateId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  orderState: input_order_state
  language: input_language
  orderStateVersionId: ID
}

input input_order_transaction {
  id: ID
  versionId: ID
  orderId: ID
  orderVersionId: ID
  paymentMethodId: ID
  orderTransactionStateId: ID
  orderTransactionStateVersionId: ID
  amount: Json
  details: Json
  createdAt: Date
  updatedAt: Date
  order: input_order
  paymentMethod: input_payment_method
  orderTransactionState: input_order_transaction_state
}

input input_order_transaction_state {
  versionId: ID
  id: ID
  position: Int
  hasMail: Boolean
  description: String
  createdAt: Date
  updatedAt: Date
  translations: [input_order_transaction_state_translation]
  orderTransactions: [input_order_transaction]
}

input input_order_transaction_state_translation {
  description: String
  orderTransactionStateId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  orderTransactionState: input_order_transaction_state
  language: input_language
  orderTransactionStateVersionId: ID
}

input input_payment_method {
  id: ID
  pluginId: ID
  technicalName: String
  name: String
  additionalDescription: String
  template: String
  class: String
  percentageSurcharge: Float
  absoluteSurcharge: Float
  surchargeString: String
  position: Int
  active: Boolean
  riskRules: String
  createdAt: Date
  updatedAt: Date
  salesChannelDefaultAssignments: [input_sales_channel]
  plugin: input_plugin
  customers: [input_customer]
  orders: [input_order]
  orderTransactions: [input_order_transaction]
  translations: [input_payment_method_translation]
  salesChannels: [input_sales_channel]
}

input input_payment_method_translation {
  name: String
  additionalDescription: String
  paymentMethodId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  paymentMethod: input_payment_method
  language: input_language
}

input input_plugin {
  id: ID
  name: String
  label: String
  active: Boolean
  version: String
  capabilityUpdate: Boolean
  capabilityInstall: Boolean
  capabilityEnable: Boolean
  capabilitySecureUninstall: Boolean
  description: String
  descriptionLong: String
  createdAt: Date
  updatedAt: Date
  installationDate: Date
  updateDate: Date
  refreshDate: Date
  author: String
  copyright: String
  license: String
  support: String
  changes: String
  link: String
  storeVersion: String
  storeDate: Date
  updateSource: String
  updateVersion: String
  paymentMethods: [input_payment_method]
}

input input_product {
  id: ID
  versionId: ID
  catalogId: ID
  parentId: ID
  parentVersionId: ID
  blacklistIds: Json
  whitelistIds: Json
  autoIncrement: Int
  active: Boolean
  stock: Int
  createdAt: Date
  updatedAt: Date
  manufacturerId: ID
  productManufacturerVersionId: ID
  unitId: ID
  taxId: ID
  coverId: ID
  productMediaVersionId: ID
  price: Json
  listingPrices: Json
  manufacturerNumber: String
  ean: String
  isCloseout: Boolean
  minStock: Int
  purchaseSteps: Int
  maxPurchase: Int
  minPurchase: Int
  purchaseUnit: Float
  referenceUnit: Float
  shippingFree: Boolean
  purchasePrice: Float
  markAsTopseller: Boolean
  sales: Int
  position: Int
  weight: Float
  width: Float
  height: Float
  length: Float
  allowNotification: Boolean
  releaseDate: Date
  categoryTree: Json
  datasheetIds: Json
  variationIds: Json
  minDeliveryTime: Int
  maxDeliveryTime: Int
  restockTime: Int
  additionalText: String
  name: String
  keywords: String
  description: String
  descriptionLong: String
  metaTitle: String
  packUnit: String
  parent: input_product
  children: [input_product]
  tax: input_tax
  manufacturer: input_product_manufacturer
  unit: input_unit
  cover: input_product_media
  priceRules: [input_product_price_rule]
  media: [input_product_media]
  services: [input_product_service]
  datasheet: [input_configuration_group_option]
  categories: [input_category]
  searchKeywords: [input_search_document]
  categoriesRo: [input_category]
  translations: [input_product_translation]
  configurators: [input_product_configurator]
  variations: [input_configuration_group_option]
  catalog: input_catalog
  canonicalUrl: input_seo_url
}

input input_product_configurator {
  id: ID
  versionId: ID
  productId: ID
  productVersionId: ID
  optionId: ID
  price: Json
  prices: Json
  createdAt: Date
  updatedAt: Date
  product: input_product
  option: input_configuration_group_option
}

input input_product_manufacturer {
  id: ID
  versionId: ID
  catalogId: ID
  mediaId: ID
  link: String
  updatedAt: Date
  createdAt: Date
  name: String
  description: String
  metaTitle: String
  metaDescription: String
  metaKeywords: String
  media: input_media
  products: [input_product]
  translations: [input_product_manufacturer_translation]
  catalog: input_catalog
}

input input_product_manufacturer_translation {
  name: String
  description: String
  metaTitle: String
  metaDescription: String
  metaKeywords: String
  catalogId: ID
  catalog: input_catalog
  productManufacturerId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  productManufacturer: input_product_manufacturer
  language: input_language
  productManufacturerVersionId: ID
}

input input_product_media {
  id: ID
  versionId: ID
  catalogId: ID
  productId: ID
  productVersionId: ID
  mediaId: ID
  position: Int
  createdAt: Date
  updatedAt: Date
  product: input_product
  media: input_media
  catalog: input_catalog
}

input input_product_price_rule {
  id: ID
  versionId: ID
  productId: ID
  productVersionId: ID
  currencyId: ID
  ruleId: ID
  price: Json
  quantityStart: Int
  quantityEnd: Int
  createdAt: Date
  updatedAt: Date
  product: input_product
  currency: input_currency
  rule: input_rule
}

input input_product_service {
  id: ID
  versionId: ID
  productId: ID
  productVersionId: ID
  optionId: ID
  taxId: ID
  price: Json
  prices: Json
  createdAt: Date
  updatedAt: Date
  product: input_product
  option: input_configuration_group_option
  tax: input_tax
}

input input_product_translation {
  additionalText: String
  name: String
  keywords: String
  description: String
  descriptionLong: String
  metaTitle: String
  packUnit: String
  catalogId: ID
  catalog: input_catalog
  productId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  product: input_product
  language: input_language
  productVersionId: ID
}

input input_rule {
  id: ID
  name: String
  priority: Int
  description: String
  payload: Json
  invalid: Boolean
  createdAt: Date
  updatedAt: Date
  conditions: [input_rule_condition]
  discountSurcharges: [input_discount_surcharge]
  productPriceRules: [input_product_price_rule]
}

input input_rule_condition {
  id: ID
  type: String
  ruleId: ID
  parentId: ID
  value: Json
  position: Int
  rule: input_rule
  parent: input_rule_condition
  children: [input_rule_condition]
}

input input_sales_channel {
  id: ID
  typeId: ID
  languageId: ID
  currencyId: ID
  paymentMethodId: ID
  shippingMethodId: ID
  countryId: ID
  type: input_sales_channel_type
  name: String
  accessKey: String
  configuration: Json
  active: Boolean
  taxCalculationType: String
  createdAt: Date
  updatedAt: Date
  translations: [input_sales_channel_translation]
  catalogs: [input_catalog]
  currencies: [input_currency]
  languages: [input_language]
  countries: [input_country]
  paymentMethods: [input_payment_method]
  shippingMethods: [input_shipping_method]
  language: input_language
  currency: input_currency
  paymentMethod: input_payment_method
  shippingMethod: input_shipping_method
  country: input_country
  orders: [input_order]
  customers: [input_customer]
  domains: [input_sales_channel_domain]
  seoUrls: [input_seo_url]
}

input input_sales_channel_domain {
  id: ID
  url: String
  salesChannelId: ID
  languageId: ID
  currencyId: ID
  snippetSetId: ID
  createdAt: Date
  updatedAt: Date
  salesChannel: input_sales_channel
  language: input_language
  currency: input_currency
  snippetSet: input_snippet_set
}

input input_sales_channel_translation {
  name: String
  salesChannelId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  salesChannel: input_sales_channel
  language: input_language
}

input input_sales_channel_type {
  id: ID
  coverUrl: String
  iconName: String
  screenshotUrls: Json
  name: String
  manufacturer: String
  description: String
  descriptionLong: String
  createdAt: Date
  updatedAt: Date
  translations: [input_sales_channel_type_translation]
  salesChannels: [input_sales_channel]
}

input input_sales_channel_type_translation {
  name: String
  manufacturer: String
  description: String
  descriptionLong: String
  salesChannelTypeId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  salesChannelType: input_sales_channel_type
  language: input_language
}

input input_search_document {
  id: ID
  languageId: ID
  entityId: ID
  entity: String
  keyword: String
  ranking: Float
  language: input_language
}

input input_seo_url {
  id: ID
  salesChannelId: ID
  name: String
  foreignKey: ID
  pathInfo: String
  seoPathInfo: String
  isCanonical: Boolean
  isModified: Boolean
  createdAt: Date
  updatedAt: Date
  salesChannel: input_sales_channel
  url: String
}

input input_shipping_method {
  id: ID
  type: Int
  bindShippingfree: Boolean
  bindLaststock: Boolean
  name: String
  active: Boolean
  position: Int
  calculation: Int
  surchargeCalculation: Int
  taxCalculation: Int
  minDeliveryTime: Int
  maxDeliveryTime: Int
  shippingFree: Float
  bindTimeFrom: Int
  bindTimeTo: Int
  bindInstock: Boolean
  bindWeekdayFrom: Int
  bindWeekdayTo: Int
  bindWeightFrom: Float
  bindWeightTo: Float
  bindPriceFrom: Float
  bindPriceTo: Float
  bindSql: String
  statusLink: String
  calculationSql: String
  createdAt: Date
  updatedAt: Date
  salesChannelDefaultAssignments: [input_sales_channel]
  description: String
  comment: String
  orderDeliveries: [input_order_delivery]
  prices: [input_shipping_method_price]
  translations: [input_shipping_method_translation]
  salesChannels: [input_sales_channel]
}

input input_shipping_method_price {
  id: ID
  shippingMethodId: ID
  quantityFrom: Float
  price: Float
  factor: Float
  createdAt: Date
  updatedAt: Date
  shippingMethod: input_shipping_method
}

input input_shipping_method_translation {
  name: String
  description: String
  comment: String
  shippingMethodId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  shippingMethod: input_shipping_method
  language: input_language
}

input input_snippet {
  id: ID
  languageId: ID
  setId: ID
  translationKey: String
  value: String
  author: String
  createdAt: Date
  updatedAt: Date
  language: input_language
  set: input_snippet_set
}

input input_snippet_set {
  id: ID
  name: String
  baseFile: String
  iso: String
  createdAt: Date
  updatedAt: Date
  snippets: [input_snippet]
  salesChannelDomains: [input_sales_channel_domain]
}

input input_tax {
  id: ID
  taxRate: Float
  name: String
  createdAt: Date
  updatedAt: Date
  products: [input_product]
  productServices: [input_product_service]
}

input input_unit {
  id: ID
  shortCode: String
  name: String
  createdAt: Date
  updatedAt: Date
  products: [input_product]
  translations: [input_unit_translation]
}

input input_unit_translation {
  shortCode: String
  name: String
  unitId: ID
  languageId: ID
  createdAt: Date
  updatedAt: Date
  unit: input_unit
  language: input_language
}

input input_user {
  id: ID
  localeId: ID
  username: String
  name: String
  email: String
  lastLogin: Date
  active: Boolean
  failedLogins: Int
  lockedUntil: Date
  createdAt: Date
  updatedAt: Date
  locale: input_locale
  media: [input_media]
  accessKeys: [input_user_access_key]
}

input input_user_access_key {
  id: ID
  userId: ID
  accessKey: String
  writeAccess: Boolean
  createdAt: Date
  lastUsageAt: Date
  user: input_user
}

input input_version {
  id: ID
  name: String
  createdAt: Date
  updatedAt: Date
  commits: [input_version_commit]
}

input input_version_commit {
  id: ID
  versionId: ID
  userId: ID
  integrationId: ID
  autoIncrement: Int
  isMerge: Boolean
  message: String
  createdAt: Date
  data: [input_version_commit_data]
  version: input_version
}

input input_version_commit_data {
  id: ID
  versionCommitId: ID
  commit: input_version_commit
  userId: ID
  integrationId: ID
  autoIncrement: Int
  entityName: String
  entityId: Json
  action: String
  payload: Json
  createdAt: Date
}

type integration {
  id: ID!
  label: String!
  accessKey: String!
  writeAccess: Boolean
  lastUsageAt: Date
  createdAt: Date!
  updatedAt: Date!
}

type integration_connection {
  total: Int
  edges: [integration_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type integration_edge {
  node: integration
  cursor: ID
}

type language {
  id: ID!
  parentId: ID
  localeId: ID!
  translationCodeId: ID
  name: String!
  createdAt: Date!
  updatedAt: Date!
  parent: language
  locale: locale
  translationCode: locale
  children: language_connection
  salesChannels: sales_channel_connection
  salesChannelDefaultAssignments: sales_channel_connection
  snippets: snippet_connection
  salesChannelDomains: sales_channel_domain_connection
  catalogTranslations: catalog_translation_connection
  categoryTranslations: category_translation_connection
  countryStateTranslations: country_state_translation_connection
  countryTranslations: country_translation_connection
  currencyTranslations: currency_translation_connection
  customerGroupTranslations: customer_group_translation_connection
  listingFacetTranslations: listing_facet_translation_connection
  listingSortingTranslations: listing_sorting_translation_connection
  localeTranslations: locale_translation_connection
  mediaTranslations: media_translation_connection
  orderStateTranslations: order_state_translation_connection
  orderTransactionStateTranslations: order_transaction_state_translation_connection
  paymentMethodTranslations: payment_method_translation_connection
  productManufacturerTranslations: product_manufacturer_translation_connection
  productTranslations: product_translation_connection
  shippingMethodTranslations: shipping_method_translation_connection
  unitTranslations: unit_translation_connection
  configurationGroupTranslations: configuration_group_translation_connection
  configurationGroupOptionTranslations: configuration_group_option_translation_connection
  discountSurchargeTranslations: discount_surcharge_translation_connection
  salesChannelTranslations: sales_channel_translation_connection
  salesChannelTypeTranslations: sales_channel_type_translation_connection
  searchDocuments: search_document_connection
  mediaFolderTranslations: media_folder_translation_connection
}

type language_connection {
  total: Int
  edges: [language_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type language_edge {
  node: language
  cursor: ID
}

type listing_facet {
  id: ID!
  uniqueKey: String!
  payload: String!
  name: String
  active: Boolean
  displayInCategories: Boolean
  deletable: Boolean
  position: Int
  createdAt: Date!
  updatedAt: Date!
  translations: listing_facet_translation_connection!
}

type listing_facet_connection {
  total: Int
  edges: [listing_facet_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type listing_facet_edge {
  node: listing_facet
  cursor: ID
}

type listing_facet_translation {
  name: String!
  listingFacetId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  listingFacet: listing_facet
  language: language
}

type listing_facet_translation_connection {
  total: Int
  edges: [listing_facet_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type listing_facet_translation_edge {
  node: listing_facet_translation
  cursor: ID
}

type listing_sorting {
  id: ID!
  payload: Json!
  label: String
  uniqueKey: String!
  active: Boolean
  displayInCategories: Boolean
  position: Int
  createdAt: Date!
  updatedAt: Date!
  translations: listing_sorting_translation_connection!
}

type listing_sorting_connection {
  total: Int
  edges: [listing_sorting_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type listing_sorting_edge {
  node: listing_sorting
  cursor: ID
}

type listing_sorting_translation {
  label: String!
  listingSortingId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  listingSorting: listing_sorting
  language: language
}

type listing_sorting_translation_connection {
  total: Int
  edges: [listing_sorting_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type listing_sorting_translation_edge {
  node: listing_sorting_translation
  cursor: ID
}

type locale {
  id: ID!
  code: String!
  name: String
  territory: String
  createdAt: Date!
  updatedAt: Date!
  languages: language_connection
  translations: locale_translation_connection!
  users: user_connection
}

type locale_connection {
  total: Int
  edges: [locale_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type locale_edge {
  node: locale
  cursor: ID
}

type locale_translation {
  name: String!
  territory: String!
  localeId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  locale: locale
  language: language
}

type locale_translation_connection {
  total: Int
  edges: [locale_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type locale_translation_edge {
  node: locale_translation
  cursor: ID
}

type media {
  id: ID!
  userId: ID
  mediaFolderId: ID
  mimeType: String
  fileExtension: String
  uploadedAt: Date
  fileName: String
  fileSize: Int
  metaData: Json
  mediaType: Json
  createdAt: Date!
  updatedAt: Date!
  alt: String
  title: String
  url: String
  user: user
  categories: category_connection
  productManufacturers: product_manufacturer_connection
  productMedia: product_media_connection
  translations: media_translation_connection!
  thumbnails: media_thumbnail_connection
  hasFile: Boolean
  mediaFolder: media_folder
  configurationGroupOptions: configuration_group_option_connection
}

type media_connection {
  total: Int
  edges: [media_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type media_default_folder {
  id: ID!
  associations: Json!
  entity: String!
  folderId: ID
  folder: media_folder
  createdAt: Date!
  updatedAt: Date!
}

type media_default_folder_connection {
  total: Int
  edges: [media_default_folder_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type media_default_folder_edge {
  node: media_default_folder
  cursor: ID
}

type media_edge {
  node: media
  cursor: ID
}

type media_folder {
  id: ID!
  useParentConfiguration: Boolean
  configurationId: ID!
  parentId: ID
  parent: media_folder
  children: media_folder_connection
  childCount: Int
  media: media_connection
  defaultFolders: media_default_folder_connection
  configuration: media_folder_configuration
  name: String!
  translations: media_folder_translation_connection
  createdAt: Date!
  updatedAt: Date!
}

type media_folder_configuration {
  id: ID!
  createThumbnails: Boolean
  keepAspectRatio: Boolean
  thumbnailQuality: Int
  mediaFolders: media_folder_connection
  mediaThumbnailSizes: media_thumbnail_size_connection
  createdAt: Date!
  updatedAt: Date!
}

type media_folder_configuration_connection {
  total: Int
  edges: [media_folder_configuration_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type media_folder_configuration_edge {
  node: media_folder_configuration
  cursor: ID
}

type media_folder_connection {
  total: Int
  edges: [media_folder_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type media_folder_edge {
  node: media_folder
  cursor: ID
}

type media_folder_translation {
  name: String!
  mediaFolderId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  mediaFolder: media_folder
  language: language
}

type media_folder_translation_connection {
  total: Int
  edges: [media_folder_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type media_folder_translation_edge {
  node: media_folder_translation
  cursor: ID
}

type media_thumbnail {
  id: ID!
  mediaId: ID!
  createdAt: Date!
  updatedAt: Date!
  width: Int!
  height: Int!
  url: String
  media: media
}

type media_thumbnail_connection {
  total: Int
  edges: [media_thumbnail_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type media_thumbnail_edge {
  node: media_thumbnail
  cursor: ID
}

type media_thumbnail_size {
  id: ID!
  width: Int!
  height: Int!
  mediaFolderConfigurations: media_folder_configuration_connection
}

type media_thumbnail_size_connection {
  total: Int
  edges: [media_thumbnail_size_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type media_thumbnail_size_edge {
  node: media_thumbnail_size
  cursor: ID
}

type media_translation {
  title: String
  alt: String
  mediaId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  media: media
  language: language
}

type media_translation_connection {
  total: Int
  edges: [media_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type media_translation_edge {
  node: media_translation
  cursor: ID
}

type named {
  id: ID!
  name: String!
  optionalGroupId: ID
  optionalGroup: named_optional_group
}

type named_connection {
  total: Int
  edges: [named_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type named_edge {
  node: named
  cursor: ID
}

type named_optional_group {
  id: ID!
  name: String!
  nameds: named_connection
}

type named_optional_group_connection {
  total: Int
  edges: [named_optional_group_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type named_optional_group_edge {
  node: named_optional_group
  cursor: ID
}

type order {
  id: ID!
  versionId: ID!
  autoIncrement: Int
  orderCustomerId: ID!
  orderCustomerVersionId: ID!
  stateId: ID!
  orderStateVersionId: ID!
  paymentMethodId: ID!
  currencyId: ID!
  salesChannelId: ID!
  billingAddressId: ID!
  billingAddressVersionId: ID!
  date: Date!
  amountTotal: Float!
  amountNet: Float
  positionPrice: Float!
  shippingTotal: Float!
  currencyFactor: Float!
  isNet: Boolean!
  isTaxFree: Boolean!
  deepLinkCode: String
  createdAt: Date!
  updatedAt: Date!
  orderCustomer: order_customer
  state: order_state
  paymentMethod: payment_method
  currency: currency
  salesChannel: sales_channel
  billingAddress: order_address
  deliveries: order_delivery_connection
  lineItems: order_line_item_connection
  transactions: order_transaction_connection
  searchKeywords: search_document_connection
}

type order_address {
  id: ID!
  versionId: ID!
  countryId: ID!
  countryStateId: ID
  salutation: String
  firstName: String!
  lastName: String!
  street: String!
  zipcode: String!
  city: String!
  company: String
  department: String
  title: String
  vatId: String
  phoneNumber: String
  additionalAddressLine1: String
  additionalAddressLine2: String
  createdAt: Date!
  updatedAt: Date!
  country: country
  countryState: country_state
  orders: order_connection
  orderDeliveries: order_delivery_connection
}

type order_address_connection {
  total: Int
  edges: [order_address_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_address_edge {
  node: order_address
  cursor: ID
}

type order_connection {
  total: Int
  edges: [order_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_customer {
  id: ID!
  versionId: ID!
  customerId: ID
  email: String!
  firstName: String!
  lastName: String!
  salutation: String
  title: String
  customerNumber: String
  createdAt: Date!
  updatedAt: Date!
  customer: customer
  orders: order_connection
}

type order_customer_connection {
  total: Int
  edges: [order_customer_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_customer_edge {
  node: order_customer
  cursor: ID
}

type order_delivery {
  id: ID!
  versionId: ID!
  orderId: ID!
  orderVersionId: ID!
  shippingOrderAddressId: ID!
  shippingOrderAddressVersionId: ID!
  orderStateId: ID!
  orderStateVersionId: ID!
  shippingMethodId: ID!
  shippingDateEarliest: Date!
  shippingDateLatest: Date!
  trackingCode: String
  createdAt: Date!
  updatedAt: Date!
  order: order
  shippingOrderAddress: order_address
  orderState: order_state
  shippingMethod: shipping_method
  positions: order_delivery_position_connection
}

type order_delivery_connection {
  total: Int
  edges: [order_delivery_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_delivery_edge {
  node: order_delivery
  cursor: ID
}

type order_delivery_position {
  id: ID!
  versionId: ID!
  orderDeliveryId: ID!
  orderDeliveryVersionId: ID!
  orderLineItemId: ID!
  orderLineItemVersionId: ID!
  unitPrice: Float!
  totalPrice: Float!
  quantity: Float!
  createdAt: Date!
  updatedAt: Date!
  orderDelivery: order_delivery
  orderLineItem: order_line_item
}

type order_delivery_position_connection {
  total: Int
  edges: [order_delivery_position_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_delivery_position_edge {
  node: order_delivery_position
  cursor: ID
}

type order_edge {
  node: order
  cursor: ID
}

type order_line_item {
  id: ID!
  versionId: ID!
  orderId: ID!
  orderVersionId: ID!
  parentId: ID
  parentVersionId: ID!
  identifier: String!
  quantity: Int!
  label: String!
  payload: Json
  good: Boolean
  removable: Boolean
  stackable: Boolean
  priority: Int
  price: Json
  priceDefinition: Json
  unitPrice: Float!
  totalPrice: Float!
  description: String
  type: String
  createdAt: Date!
  updatedAt: Date!
  order: order
  orderDeliveryPositions: order_delivery_position_connection
  parent: order_line_item
  children: order_line_item_connection
}

type order_line_item_connection {
  total: Int
  edges: [order_line_item_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_line_item_edge {
  node: order_line_item
  cursor: ID
}

type order_state {
  id: ID!
  versionId: ID!
  description: String
  position: Int
  hasMail: Boolean
  createdAt: Date!
  updatedAt: Date!
  orders: order_connection
  orderDeliveries: order_delivery_connection
  translations: order_state_translation_connection!
}

type order_state_connection {
  total: Int
  edges: [order_state_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_state_edge {
  node: order_state
  cursor: ID
}

type order_state_translation {
  description: String!
  orderStateId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  orderState: order_state
  language: language
  orderStateVersionId: ID!
}

type order_state_translation_connection {
  total: Int
  edges: [order_state_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_state_translation_edge {
  node: order_state_translation
  cursor: ID
}

type order_transaction {
  id: ID!
  versionId: ID!
  orderId: ID!
  orderVersionId: ID!
  paymentMethodId: ID!
  orderTransactionStateId: ID!
  orderTransactionStateVersionId: ID!
  amount: Json!
  details: Json
  createdAt: Date!
  updatedAt: Date!
  order: order
  paymentMethod: payment_method
  orderTransactionState: order_transaction_state
}

type order_transaction_connection {
  total: Int
  edges: [order_transaction_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_transaction_edge {
  node: order_transaction
  cursor: ID
}

type order_transaction_state {
  versionId: ID!
  id: ID!
  position: Int!
  hasMail: Boolean!
  description: String
  createdAt: Date!
  updatedAt: Date!
  translations: order_transaction_state_translation_connection!
  orderTransactions: order_transaction_connection
}

type order_transaction_state_connection {
  total: Int
  edges: [order_transaction_state_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_transaction_state_edge {
  node: order_transaction_state
  cursor: ID
}

type order_transaction_state_translation {
  description: String!
  orderTransactionStateId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  orderTransactionState: order_transaction_state
  language: language
  orderTransactionStateVersionId: ID!
}

type order_transaction_state_translation_connection {
  total: Int
  edges: [order_transaction_state_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type order_transaction_state_translation_edge {
  node: order_transaction_state_translation
  cursor: ID
}

type pageInfo {
  endCursor: ID
  startCursor: ID
  hasNextPage: Boolean
  hasPreviousPage: Boolean
}

input parameter {
  operator: rangeOperator!
  value: Float!
}

type payment_method {
  id: ID!
  pluginId: ID
  technicalName: String!
  name: String
  additionalDescription: String
  template: String
  class: String
  percentageSurcharge: Float
  absoluteSurcharge: Float
  surchargeString: String
  position: Int
  active: Boolean
  riskRules: String
  createdAt: Date!
  updatedAt: Date!
  salesChannelDefaultAssignments: sales_channel_connection
  plugin: plugin
  customers: customer_connection
  orders: order_connection
  orderTransactions: order_transaction_connection
  translations: payment_method_translation_connection!
  salesChannels: sales_channel_connection
}

type payment_method_connection {
  total: Int
  edges: [payment_method_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type payment_method_edge {
  node: payment_method
  cursor: ID
}

type payment_method_translation {
  name: String!
  additionalDescription: String
  paymentMethodId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  paymentMethod: payment_method
  language: language
}

type payment_method_translation_connection {
  total: Int
  edges: [payment_method_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type payment_method_translation_edge {
  node: payment_method_translation
  cursor: ID
}

type plugin {
  id: ID!
  name: String!
  label: String!
  active: Boolean!
  version: String!
  capabilityUpdate: Boolean!
  capabilityInstall: Boolean!
  capabilityEnable: Boolean!
  capabilitySecureUninstall: Boolean!
  description: String
  descriptionLong: String
  createdAt: Date!
  updatedAt: Date!
  installationDate: Date
  updateDate: Date
  refreshDate: Date
  author: String
  copyright: String
  license: String
  support: String
  changes: String
  link: String
  storeVersion: String
  storeDate: Date
  updateSource: String
  updateVersion: String
  paymentMethods: payment_method_connection
}

type plugin_connection {
  total: Int
  edges: [plugin_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type plugin_edge {
  node: plugin
  cursor: ID
}

type product {
  id: ID!
  versionId: ID!
  catalogId: ID!
  parentId: ID
  parentVersionId: ID!
  blacklistIds: Json
  whitelistIds: Json
  autoIncrement: Int
  active: Boolean
  stock: Int
  createdAt: Date!
  updatedAt: Date!
  manufacturerId: ID!
  productManufacturerVersionId: ID!
  unitId: ID
  taxId: ID!
  coverId: ID
  productMediaVersionId: ID
  price: Json!
  listingPrices: Json
  manufacturerNumber: String
  ean: String
  isCloseout: Boolean
  minStock: Int
  purchaseSteps: Int
  maxPurchase: Int
  minPurchase: Int
  purchaseUnit: Float
  referenceUnit: Float
  shippingFree: Boolean
  purchasePrice: Float
  markAsTopseller: Boolean
  sales: Int
  position: Int
  weight: Float
  width: Float
  height: Float
  length: Float
  allowNotification: Boolean
  releaseDate: Date
  categoryTree: Json
  datasheetIds: Json
  variationIds: Json
  minDeliveryTime: Int
  maxDeliveryTime: Int
  restockTime: Int
  additionalText: String
  name: String
  keywords: String
  description: String
  descriptionLong: String
  metaTitle: String
  packUnit: String
  parent: product
  children: product_connection
  tax: tax
  manufacturer: product_manufacturer
  unit: unit
  cover: product_media
  priceRules: product_price_rule_connection
  media: product_media_connection
  services: product_service_connection
  datasheet: configuration_group_option_connection
  categories: category_connection
  searchKeywords: search_document_connection
  categoriesRo: category_connection
  translations: product_translation_connection!
  configurators: product_configurator_connection
  variations: configuration_group_option_connection
  catalog: catalog
  canonicalUrl: seo_url
}

type product_configurator {
  id: ID!
  versionId: ID!
  productId: ID!
  productVersionId: ID!
  optionId: ID!
  price: Json
  prices: Json
  createdAt: Date!
  updatedAt: Date!
  product: product
  option: configuration_group_option
}

type product_configurator_connection {
  total: Int
  edges: [product_configurator_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type product_configurator_edge {
  node: product_configurator
  cursor: ID
}

type product_connection {
  total: Int
  edges: [product_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type product_edge {
  node: product
  cursor: ID
}

type product_manufacturer {
  id: ID!
  versionId: ID!
  catalogId: ID!
  mediaId: ID
  link: String
  updatedAt: Date!
  createdAt: Date!
  name: String
  description: String
  metaTitle: String
  metaDescription: String
  metaKeywords: String
  media: media
  products: product_connection
  translations: product_manufacturer_translation_connection!
  catalog: catalog
}

type product_manufacturer_connection {
  total: Int
  edges: [product_manufacturer_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type product_manufacturer_edge {
  node: product_manufacturer
  cursor: ID
}

type product_manufacturer_translation {
  name: String!
  description: String
  metaTitle: String
  metaDescription: String
  metaKeywords: String
  catalogId: ID!
  catalog: catalog
  productManufacturerId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  productManufacturer: product_manufacturer
  language: language
  productManufacturerVersionId: ID!
}

type product_manufacturer_translation_connection {
  total: Int
  edges: [product_manufacturer_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type product_manufacturer_translation_edge {
  node: product_manufacturer_translation
  cursor: ID
}

type product_media {
  id: ID!
  versionId: ID!
  catalogId: ID!
  productId: ID!
  productVersionId: ID!
  mediaId: ID!
  position: Int
  createdAt: Date!
  updatedAt: Date!
  product: product
  media: media
  catalog: catalog
}

type product_media_connection {
  total: Int
  edges: [product_media_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type product_media_edge {
  node: product_media
  cursor: ID
}

type product_price_rule {
  id: ID!
  versionId: ID!
  productId: ID!
  productVersionId: ID!
  currencyId: ID!
  ruleId: ID!
  price: Json!
  quantityStart: Int!
  quantityEnd: Int
  createdAt: Date!
  updatedAt: Date!
  product: product
  currency: currency
  rule: rule
}

type product_price_rule_connection {
  total: Int
  edges: [product_price_rule_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type product_price_rule_edge {
  node: product_price_rule
  cursor: ID
}

type product_service {
  id: ID!
  versionId: ID!
  productId: ID!
  productVersionId: ID!
  optionId: ID!
  taxId: ID!
  price: Json
  prices: Json
  createdAt: Date!
  updatedAt: Date!
  product: product
  option: configuration_group_option
  tax: tax
}

type product_service_connection {
  total: Int
  edges: [product_service_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type product_service_edge {
  node: product_service
  cursor: ID
}

type product_translation {
  additionalText: String
  name: String
  keywords: String
  description: String
  descriptionLong: String
  metaTitle: String
  packUnit: String
  catalogId: ID!
  catalog: catalog
  productId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  product: product
  language: language
  productVersionId: ID!
}

type product_translation_connection {
  total: Int
  edges: [product_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type product_translation_edge {
  node: product_translation
  cursor: ID
}

input query {
  type: queryTypes!
  operator: queryOperator
  queries: [query]
  field: String
  value: String
  parameters: [parameter]
}

enum queryOperator {
  AND
  OR
}

enum queryTypes {
  equals
  contains
  equalsAny
  multi
  not
  range
}

enum rangeOperator {
  GTE
  GT
  LTE
  LT
}

type rule {
  id: ID!
  name: String!
  priority: Int!
  description: String
  payload: Json
  invalid: Boolean
  createdAt: Date!
  updatedAt: Date!
  conditions: rule_condition_connection
  discountSurcharges: discount_surcharge_connection
  productPriceRules: product_price_rule_connection
}

type rule_condition {
  id: ID!
  type: String!
  ruleId: ID!
  parentId: ID
  value: Json
  position: Int
  rule: rule
  parent: rule_condition
  children: rule_condition_connection
}

type rule_condition_connection {
  total: Int
  edges: [rule_condition_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type rule_condition_edge {
  node: rule_condition
  cursor: ID
}

type rule_connection {
  total: Int
  edges: [rule_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type rule_edge {
  node: rule
  cursor: ID
}

type sales_channel {
  id: ID!
  typeId: ID!
  languageId: ID!
  currencyId: ID!
  paymentMethodId: ID!
  shippingMethodId: ID!
  countryId: ID!
  type: sales_channel_type
  name: String
  accessKey: String!
  configuration: Json
  active: Boolean
  taxCalculationType: String
  createdAt: Date!
  updatedAt: Date!
  translations: sales_channel_translation_connection!
  catalogs: catalog_connection
  currencies: currency_connection
  languages: language_connection
  countries: country_connection
  paymentMethods: payment_method_connection
  shippingMethods: shipping_method_connection
  language: language
  currency: currency
  paymentMethod: payment_method
  shippingMethod: shipping_method
  country: country
  orders: order_connection
  customers: customer_connection
  domains: sales_channel_domain_connection
  seoUrls: seo_url_connection
}

type sales_channel_connection {
  total: Int
  edges: [sales_channel_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type sales_channel_domain {
  id: ID!
  url: String!
  salesChannelId: ID!
  languageId: ID!
  currencyId: ID!
  snippetSetId: ID!
  createdAt: Date!
  updatedAt: Date!
  salesChannel: sales_channel
  language: language
  currency: currency
  snippetSet: snippet_set
}

type sales_channel_domain_connection {
  total: Int
  edges: [sales_channel_domain_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type sales_channel_domain_edge {
  node: sales_channel_domain
  cursor: ID
}

type sales_channel_edge {
  node: sales_channel
  cursor: ID
}

type sales_channel_translation {
  name: String!
  salesChannelId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  salesChannel: sales_channel
  language: language
}

type sales_channel_translation_connection {
  total: Int
  edges: [sales_channel_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type sales_channel_translation_edge {
  node: sales_channel_translation
  cursor: ID
}

type sales_channel_type {
  id: ID!
  coverUrl: String
  iconName: String
  screenshotUrls: Json
  name: String
  manufacturer: String
  description: String
  descriptionLong: String
  createdAt: Date!
  updatedAt: Date!
  translations: sales_channel_type_translation_connection!
  salesChannels: sales_channel_connection
}

type sales_channel_type_connection {
  total: Int
  edges: [sales_channel_type_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type sales_channel_type_edge {
  node: sales_channel_type
  cursor: ID
}

type sales_channel_type_translation {
  name: String!
  manufacturer: String
  description: String
  descriptionLong: String
  salesChannelTypeId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  salesChannelType: sales_channel_type
  language: language
}

type sales_channel_type_translation_connection {
  total: Int
  edges: [sales_channel_type_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type sales_channel_type_translation_edge {
  node: sales_channel_type_translation
  cursor: ID
}

type search_document {
  id: ID!
  languageId: ID!
  entityId: ID!
  entity: String!
  keyword: String!
  ranking: Float!
  language: language
}

type search_document_connection {
  total: Int
  edges: [search_document_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type search_document_edge {
  node: search_document
  cursor: ID
}

type seo_url {
  id: ID!
  salesChannelId: ID!
  name: String!
  foreignKey: ID!
  pathInfo: String!
  seoPathInfo: String!
  isCanonical: Boolean
  isModified: Boolean
  createdAt: Date!
  updatedAt: Date!
  salesChannel: sales_channel
  url: String
}

type seo_url_connection {
  total: Int
  edges: [seo_url_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type seo_url_edge {
  node: seo_url
  cursor: ID
}

type shipping_method {
  id: ID!
  type: Int!
  bindShippingfree: Boolean!
  bindLaststock: Boolean
  name: String
  active: Boolean
  position: Int
  calculation: Int
  surchargeCalculation: Int
  taxCalculation: Int
  minDeliveryTime: Int
  maxDeliveryTime: Int
  shippingFree: Float
  bindTimeFrom: Int
  bindTimeTo: Int
  bindInstock: Boolean
  bindWeekdayFrom: Int
  bindWeekdayTo: Int
  bindWeightFrom: Float
  bindWeightTo: Float
  bindPriceFrom: Float
  bindPriceTo: Float
  bindSql: String
  statusLink: String
  calculationSql: String
  createdAt: Date!
  updatedAt: Date!
  salesChannelDefaultAssignments: sales_channel_connection
  description: String
  comment: String
  orderDeliveries: order_delivery_connection
  prices: shipping_method_price_connection
  translations: shipping_method_translation_connection!
  salesChannels: sales_channel_connection
}

type shipping_method_connection {
  total: Int
  edges: [shipping_method_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type shipping_method_edge {
  node: shipping_method
  cursor: ID
}

type shipping_method_price {
  id: ID!
  shippingMethodId: ID!
  quantityFrom: Float!
  price: Float!
  factor: Float!
  createdAt: Date!
  updatedAt: Date!
  shippingMethod: shipping_method
}

type shipping_method_price_connection {
  total: Int
  edges: [shipping_method_price_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type shipping_method_price_edge {
  node: shipping_method_price
  cursor: ID
}

type shipping_method_translation {
  name: String!
  description: String
  comment: String
  shippingMethodId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  shippingMethod: shipping_method
  language: language
}

type shipping_method_translation_connection {
  total: Int
  edges: [shipping_method_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type shipping_method_translation_edge {
  node: shipping_method_translation
  cursor: ID
}

type snippet {
  id: ID!
  languageId: ID!
  setId: ID!
  translationKey: String!
  value: String!
  author: String!
  createdAt: Date!
  updatedAt: Date!
  language: language
  set: snippet_set
}

type snippet_connection {
  total: Int
  edges: [snippet_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type snippet_edge {
  node: snippet
  cursor: ID
}

type snippet_set {
  id: ID!
  name: String!
  baseFile: String!
  iso: String!
  createdAt: Date!
  updatedAt: Date!
  snippets: snippet_connection
  salesChannelDomains: sales_channel_domain_connection
}

type snippet_set_connection {
  total: Int
  edges: [snippet_set_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type snippet_set_edge {
  node: snippet_set
  cursor: ID
}

enum sortDirection {
  ASC
  DESC
}

type tax {
  id: ID!
  taxRate: Float!
  name: String!
  createdAt: Date!
  updatedAt: Date!
  products: product_connection
  productServices: product_service_connection
}

type tax_connection {
  total: Int
  edges: [tax_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type tax_edge {
  node: tax
  cursor: ID
}

type unit {
  id: ID!
  shortCode: String
  name: String
  createdAt: Date!
  updatedAt: Date!
  products: product_connection
  translations: unit_translation_connection!
}

type unit_connection {
  total: Int
  edges: [unit_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type unit_edge {
  node: unit
  cursor: ID
}

type unit_translation {
  shortCode: String!
  name: String!
  unitId: ID!
  languageId: ID!
  createdAt: Date!
  updatedAt: Date!
  unit: unit
  language: language
}

type unit_translation_connection {
  total: Int
  edges: [unit_translation_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type unit_translation_edge {
  node: unit_translation
  cursor: ID
}

type user {
  id: ID!
  localeId: ID!
  username: String!
  name: String!
  email: String!
  lastLogin: Date
  active: Boolean
  failedLogins: Int
  lockedUntil: Date
  createdAt: Date!
  updatedAt: Date!
  locale: locale
  media: media_connection
  accessKeys: user_access_key_connection
}

type user_access_key {
  id: ID!
  userId: ID!
  accessKey: String!
  writeAccess: Boolean
  createdAt: Date!
  lastUsageAt: Date
  user: user
}

type user_access_key_connection {
  total: Int
  edges: [user_access_key_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type user_access_key_edge {
  node: user_access_key
  cursor: ID
}

type user_connection {
  total: Int
  edges: [user_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type user_edge {
  node: user
  cursor: ID
}

type version {
  id: ID!
  name: String!
  createdAt: Date!
  updatedAt: Date!
  commits: version_commit_connection
}

type version_commit {
  id: ID!
  versionId: ID!
  userId: ID
  integrationId: ID
  autoIncrement: Int
  isMerge: Boolean
  message: String
  createdAt: Date!
  data: version_commit_data_connection
  version: version
}

type version_commit_connection {
  total: Int
  edges: [version_commit_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type version_commit_data {
  id: ID!
  versionCommitId: ID!
  commit: version_commit
  userId: ID
  integrationId: ID
  autoIncrement: Int
  entityName: String!
  entityId: Json!
  action: String!
  payload: Json!
  createdAt: Date!
}

type version_commit_data_connection {
  total: Int
  edges: [version_commit_data_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type version_commit_data_edge {
  node: version_commit_data
  cursor: ID
}

type version_commit_edge {
  node: version_commit
  cursor: ID
}

type version_connection {
  total: Int
  edges: [version_edge]
  pageInfo: pageInfo
  aggregations: [aggregationResults]
}

type version_edge {
  node: version
  cursor: ID
}
