type AclRole {
  __typename: String
  id: ID!
  name: String!
  description: String
  users(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AclUserRoleConnection
  app: App
  integrations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): IntegrationRoleConnection
}

"""The Result for a search that returns multiple Items"""
type AclRoleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AclRoleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  description: String
  users(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AclUserRoleConnection
  app: App
  integrations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): IntegrationRoleConnection
}

"""Contains the information for one Edge"""
type AclRoleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AclRole

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type AclUserRole {
  __typename: String
  userId: ID!
  aclRoleId: ID!
  user: User
  aclRole: AclRole
}

"""The Result for a search that returns multiple Items"""
type AclUserRoleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AclUserRoleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  userId: ID!
  aclRoleId: ID!
  user: User
  aclRole: AclRole
}

"""Contains the information for one Edge"""
type AclUserRoleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AclUserRole

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""A Aggregation the DAL should perform"""
input Aggregation {
  __typename: String

  """The aggregation type"""
  type: AggregationTypes!

  """The name of the aggregation"""
  name: String!

  """The field used to aggregate"""
  field: String!

  """The fields used to group the result"""
  groupByFields: [String]
}

"""Contains the result of a single aggregation"""
type AggregationBucket {
  __typename: String

  """The Keys of this aggregation bucket"""
  keys: [AggregationKey]

  """The result of the aggregation"""
  results: [AggregationResult]
}

"""A key of the Aggregation Bucket"""
type AggregationKey {
  __typename: String

  """The field used to group the result"""
  field: String

  """The value for the groupByKey"""
  value: String
}

"""Contains the result of a single aggregation"""
type AggregationResult {
  __typename: String

  """The type of the aggregation"""
  type: String

  """The result of the aggregation"""
  result: String
}

"""Contains the results of the aggregations"""
type AggregationResults {
  __typename: String

  """Name of the aggregation"""
  name: String

  """Contains an aggregationResult"""
  buckets: [AggregationBucket]
}

"""The AggregationTypes the DAL can perform"""
enum AggregationTypes {
  """Performs an average aggregation"""
  avg

  """Performs a cardinality aggregation"""
  cardinality

  """Performs a count aggregation"""
  count

  """Performs a maximum aggregation"""
  max

  """Performs a minimum aggregation"""
  min

  """Performs a stats aggregation"""
  stats

  """Performs a sum aggregation"""
  sum

  """Performs a value count aggregation"""
  value_count
}

type App {
  __typename: String
  id: ID!
  name: String!
  path: String!
  author: String
  copyright: String
  license: String
  active: Boolean!
  configurable: Boolean!
  privacy: String
  version: String!
  icon: String
  appSecret: String
  translations: AppTranslationConnection!
  label: String
  description: String
  privacyPolicyExtensions: String
  customFields: String
  integrationId: ID!
  integration: Integration
  aclRoleId: ID!
  aclRole: AclRole
  customFieldSets(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomFieldSetConnection
  actionButtons(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppActionButtonConnection
  templates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppTemplateConnection
  scripts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ScriptConnection
  webhooks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): WebhookConnection
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppPaymentMethodConnection
  cmsBlocks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppCmsBlockConnection
}

type AppActionButton {
  __typename: String
  id: ID!
  entity: String!
  view: String!
  url: String!
  action: String!
  openNewTab: Boolean!
  label: String
  translations: AppActionButtonTranslationConnection!
  appId: ID!
  app: App
}

"""The Result for a search that returns multiple Items"""
type AppActionButtonConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AppActionButtonEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  entity: String!
  view: String!
  url: String!
  action: String!
  openNewTab: Boolean!
  label: String
  translations: AppActionButtonTranslationConnection!
  appId: ID!
  app: App
}

"""Contains the information for one Edge"""
type AppActionButtonEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AppActionButton

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type AppActionButtonTranslation {
  __typename: String
  label: String!
  appActionButtonId: ID!
  languageId: ID!
  appActionButton: AppActionButton
  language: Language
}

"""The Result for a search that returns multiple Items"""
type AppActionButtonTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AppActionButtonTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  label: String!
  appActionButtonId: ID!
  languageId: ID!
  appActionButton: AppActionButton
  language: Language
}

"""Contains the information for one Edge"""
type AppActionButtonTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AppActionButtonTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type AppCmsBlock {
  __typename: String
  id: ID!
  name: String!
  template: String!
  styles: String!
  label: String
  translations: AppCmsBlockTranslationConnection!
  appId: ID!
  app: App
}

"""The Result for a search that returns multiple Items"""
type AppCmsBlockConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AppCmsBlockEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  template: String!
  styles: String!
  label: String
  translations: AppCmsBlockTranslationConnection!
  appId: ID!
  app: App
}

"""Contains the information for one Edge"""
type AppCmsBlockEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AppCmsBlock

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type AppCmsBlockTranslation {
  __typename: String
  label: String!
  appCmsBlockId: ID!
  languageId: ID!
  appCmsBlock: AppCmsBlock
  language: Language
}

"""The Result for a search that returns multiple Items"""
type AppCmsBlockTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AppCmsBlockTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  label: String!
  appCmsBlockId: ID!
  languageId: ID!
  appCmsBlock: AppCmsBlock
  language: Language
}

"""Contains the information for one Edge"""
type AppCmsBlockTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AppCmsBlockTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type AppConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AppEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  path: String!
  author: String
  copyright: String
  license: String
  active: Boolean!
  configurable: Boolean!
  privacy: String
  version: String!
  icon: String
  appSecret: String
  translations: AppTranslationConnection!
  label: String
  description: String
  privacyPolicyExtensions: String
  customFields: String
  integrationId: ID!
  integration: Integration
  aclRoleId: ID!
  aclRole: AclRole
  customFieldSets(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomFieldSetConnection
  actionButtons(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppActionButtonConnection
  templates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppTemplateConnection
  scripts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ScriptConnection
  webhooks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): WebhookConnection
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppPaymentMethodConnection
  cmsBlocks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppCmsBlockConnection
}

"""Contains the information for one Edge"""
type AppEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: App

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type AppPaymentMethod {
  __typename: String
  id: ID!
  appName: String!
  identifier: String!
  payUrl: String
  finalizeUrl: String
  appId: ID
  app: App
  originalMediaId: ID
  originalMedia: Media
  paymentMethodId: ID!
  paymentMethod: PaymentMethod
}

"""The Result for a search that returns multiple Items"""
type AppPaymentMethodConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AppPaymentMethodEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  appName: String!
  identifier: String!
  payUrl: String
  finalizeUrl: String
  appId: ID
  app: App
  originalMediaId: ID
  originalMedia: Media
  paymentMethodId: ID!
  paymentMethod: PaymentMethod
}

"""Contains the information for one Edge"""
type AppPaymentMethodEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AppPaymentMethod

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type AppTemplate {
  __typename: String
  id: ID!
  template: String!
  path: String!
  active: Boolean!
  appId: ID!
  app: App
}

"""The Result for a search that returns multiple Items"""
type AppTemplateConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AppTemplateEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  template: String!
  path: String!
  active: Boolean!
  appId: ID!
  app: App
}

"""Contains the information for one Edge"""
type AppTemplateEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AppTemplate

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type AppTranslation {
  __typename: String
  label: String!
  description: String
  privacyPolicyExtensions: String
  appId: ID!
  languageId: ID!
  app: App
  language: Language
}

"""The Result for a search that returns multiple Items"""
type AppTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AppTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  label: String!
  description: String
  privacyPolicyExtensions: String
  appId: ID!
  languageId: ID!
  app: App
  language: Language
}

"""Contains the information for one Edge"""
type AppTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AppTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type AttributeTest {
  __typename: String
  id: ID
  parentId: ID
  name: String
  customTranslated: String
  translations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AttributeTestTranslationConnection
  parent: AttributeTest
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AttributeTestConnection
}

"""The Result for a search that returns multiple Items"""
type AttributeTestConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AttributeTestEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID
  parentId: ID
  name: String
  customTranslated: String
  translations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AttributeTestTranslationConnection
  parent: AttributeTest
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AttributeTestConnection
}

"""Contains the information for one Edge"""
type AttributeTestEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AttributeTest

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type AttributeTestTranslation {
  __typename: String
  attributeTestId: ID!
  languageId: ID!
  attributeTest: AttributeTest
  language: Language
}

"""The Result for a search that returns multiple Items"""
type AttributeTestTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [AttributeTestTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  attributeTestId: ID!
  languageId: ID!
  attributeTest: AttributeTest
  language: Language
}

"""Contains the information for one Edge"""
type AttributeTestTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: AttributeTestTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CalculatedPriceFieldTest {
  __typename: String
  id: ID!
  versionId: ID!
}

"""The Result for a search that returns multiple Items"""
type CalculatedPriceFieldTestConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CalculatedPriceFieldTestEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
}

"""Contains the information for one Edge"""
type CalculatedPriceFieldTestEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CalculatedPriceFieldTest

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Category {
  __typename: String
  id: ID!
  versionId: ID!
  parentId: ID
  parentVersionId: ID!
  afterCategoryId: ID
  afterCategoryVersionId: ID!
  mediaId: ID
  displayNestedProducts: Boolean!
  autoIncrement: Int
  breadcrumb: String
  level: Int
  path: String
  childCount: Int
  type: String!
  productAssignmentType: String!
  visible: Boolean
  active: Boolean
  name: String
  customFields: String
  slotConfig: String
  linkType: String
  internalLink: String
  externalLink: String
  linkNewTab: String
  description: String
  metaTitle: String
  metaDescription: String
  keywords: String
  parent: Category
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryConnection
  media: Media
  translations: CategoryTranslationConnection!
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCategoryConnection
  nestedProducts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCategoryTreeConnection
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryTagConnection
  cmsPageId: ID
  cmsPageVersionId: ID!
  cmsPage: CmsPage
  productStreamId: ID
  productStream: ProductStream
  navigationSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  footerSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  serviceSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  mainCategories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MainCategoryConnection
  seoUrls(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
}

"""The Result for a search that returns multiple Items"""
type CategoryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CategoryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  parentId: ID
  parentVersionId: ID!
  afterCategoryId: ID
  afterCategoryVersionId: ID!
  mediaId: ID
  displayNestedProducts: Boolean!
  autoIncrement: Int
  breadcrumb: String
  level: Int
  path: String
  childCount: Int
  type: String!
  productAssignmentType: String!
  visible: Boolean
  active: Boolean
  name: String
  customFields: String
  slotConfig: String
  linkType: String
  internalLink: String
  externalLink: String
  linkNewTab: String
  description: String
  metaTitle: String
  metaDescription: String
  keywords: String
  parent: Category
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryConnection
  media: Media
  translations: CategoryTranslationConnection!
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCategoryConnection
  nestedProducts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCategoryTreeConnection
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryTagConnection
  cmsPageId: ID
  cmsPageVersionId: ID!
  cmsPage: CmsPage
  productStreamId: ID
  productStream: ProductStream
  navigationSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  footerSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  serviceSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  mainCategories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MainCategoryConnection
  seoUrls(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
}

"""Contains the information for one Edge"""
type CategoryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Category

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CategoryTag {
  __typename: String
  categoryId: ID!
  categoryVersionId: ID!
  tagId: ID!
  category: Category
  tag: Tag
}

"""The Result for a search that returns multiple Items"""
type CategoryTagConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CategoryTagEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  categoryId: ID!
  categoryVersionId: ID!
  tagId: ID!
  category: Category
  tag: Tag
}

"""Contains the information for one Edge"""
type CategoryTagEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CategoryTag

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CategoryTranslation {
  __typename: String
  name: String!
  linkType: String
  internalLink: ID
  externalLink: String
  linkNewTab: Boolean
  description: String
  metaTitle: String
  metaDescription: String
  keywords: String
  categoryId: ID!
  languageId: ID!
  category: Category
  language: Language
  categoryVersionId: ID!
}

"""The Result for a search that returns multiple Items"""
type CategoryTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CategoryTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  linkType: String
  internalLink: ID
  externalLink: String
  linkNewTab: Boolean
  description: String
  metaTitle: String
  metaDescription: String
  keywords: String
  categoryId: ID!
  languageId: ID!
  category: Category
  language: Language
  categoryVersionId: ID!
}

"""Contains the information for one Edge"""
type CategoryTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CategoryTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CmsBlock {
  __typename: String
  id: ID!
  position: Int!
  type: String!
  locked: Boolean
  name: String
  sectionPosition: String
  marginTop: String
  marginBottom: String
  marginLeft: String
  marginRight: String
  backgroundColor: String
  backgroundMediaId: ID
  backgroundMediaMode: String
  cssClass: String
  sectionId: ID!
  section: CmsSection
  backgroundMedia: Media
  slots(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSlotConnection
  versionId: ID!
  cmsSectionVersionId: ID!
}

"""The Result for a search that returns multiple Items"""
type CmsBlockConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CmsBlockEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  position: Int!
  type: String!
  locked: Boolean
  name: String
  sectionPosition: String
  marginTop: String
  marginBottom: String
  marginLeft: String
  marginRight: String
  backgroundColor: String
  backgroundMediaId: ID
  backgroundMediaMode: String
  cssClass: String
  sectionId: ID!
  section: CmsSection
  backgroundMedia: Media
  slots(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSlotConnection
  versionId: ID!
  cmsSectionVersionId: ID!
}

"""Contains the information for one Edge"""
type CmsBlockEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CmsBlock

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CmsPage {
  __typename: String
  id: ID!
  versionId: ID!
  name: String
  type: String!
  entity: String
  previewMediaId: ID
  customFields: String
  locked: Boolean
  sections(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSectionConnection
  translations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsPageTranslationConnection
  previewMedia: Media
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryConnection
  landingPages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageConnection
  homeSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
}

"""The Result for a search that returns multiple Items"""
type CmsPageConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CmsPageEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  name: String
  type: String!
  entity: String
  previewMediaId: ID
  customFields: String
  locked: Boolean
  sections(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSectionConnection
  translations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsPageTranslationConnection
  previewMedia: Media
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryConnection
  landingPages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageConnection
  homeSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
}

"""Contains the information for one Edge"""
type CmsPageEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CmsPage

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CmsPageTranslation {
  __typename: String
  name: String
  cmsPageId: ID!
  languageId: ID!
  cmsPage: CmsPage
  language: Language
  cmsPageVersionId: ID!
}

"""The Result for a search that returns multiple Items"""
type CmsPageTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CmsPageTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String
  cmsPageId: ID!
  languageId: ID!
  cmsPage: CmsPage
  language: Language
  cmsPageVersionId: ID!
}

"""Contains the information for one Edge"""
type CmsPageTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CmsPageTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CmsSection {
  __typename: String
  id: ID!
  position: Int!
  type: String!
  locked: Boolean
  name: String
  sizingMode: String
  mobileBehavior: String
  backgroundColor: String
  backgroundMediaId: ID
  backgroundMediaMode: String
  cssClass: String
  pageId: ID!
  page: CmsPage
  backgroundMedia: Media
  blocks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsBlockConnection
  versionId: ID!
  cmsPageVersionId: ID!
}

"""The Result for a search that returns multiple Items"""
type CmsSectionConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CmsSectionEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  position: Int!
  type: String!
  locked: Boolean
  name: String
  sizingMode: String
  mobileBehavior: String
  backgroundColor: String
  backgroundMediaId: ID
  backgroundMediaMode: String
  cssClass: String
  pageId: ID!
  page: CmsPage
  backgroundMedia: Media
  blocks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsBlockConnection
  versionId: ID!
  cmsPageVersionId: ID!
}

"""Contains the information for one Edge"""
type CmsSectionEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CmsSection

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CmsSlot {
  __typename: String
  id: ID!
  versionId: ID!
  type: String!
  slot: String!
  locked: Boolean
  config: String
  customFields: String
  blockId: ID!
  block: CmsBlock
  translations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSlotTranslationConnection
  cmsBlockVersionId: ID!
}

"""The Result for a search that returns multiple Items"""
type CmsSlotConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CmsSlotEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  type: String!
  slot: String!
  locked: Boolean
  config: String
  customFields: String
  blockId: ID!
  block: CmsBlock
  translations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSlotTranslationConnection
  cmsBlockVersionId: ID!
}

"""Contains the information for one Edge"""
type CmsSlotEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CmsSlot

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CmsSlotTranslation {
  __typename: String
  cmsSlotId: ID!
  languageId: ID!
  cmsSlot: CmsSlot
  language: Language
  cmsSlotVersionId: ID!
}

"""The Result for a search that returns multiple Items"""
type CmsSlotTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CmsSlotTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  cmsSlotId: ID!
  languageId: ID!
  cmsSlot: CmsSlot
  language: Language
  cmsSlotVersionId: ID!
}

"""Contains the information for one Edge"""
type CmsSlotTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CmsSlotTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Country {
  __typename: String
  id: ID!
  name: String
  iso: String
  position: Int
  taxFree: Boolean
  active: Boolean
  shippingAvailable: Boolean
  iso3: String
  displayStateInRegistration: Boolean
  forceStateInRegistration: Boolean
  companyTaxFree: Boolean
  checkVatIdPattern: Boolean
  vatIdRequired: Boolean
  vatIdPattern: String
  customFields: String
  states(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CountryStateConnection
  translations: CountryTranslationConnection!
  customerAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerAddressConnection
  orderAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderAddressConnection
  salesChannelDefaultAssignments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelCountryConnection
  taxRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxRuleConnection
  currencyCountryRoundings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CurrencyCountryRoundingConnection
}

"""The Result for a search that returns multiple Items"""
type CountryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CountryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String
  iso: String
  position: Int
  taxFree: Boolean
  active: Boolean
  shippingAvailable: Boolean
  iso3: String
  displayStateInRegistration: Boolean
  forceStateInRegistration: Boolean
  companyTaxFree: Boolean
  checkVatIdPattern: Boolean
  vatIdRequired: Boolean
  vatIdPattern: String
  customFields: String
  states(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CountryStateConnection
  translations: CountryTranslationConnection!
  customerAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerAddressConnection
  orderAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderAddressConnection
  salesChannelDefaultAssignments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelCountryConnection
  taxRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxRuleConnection
  currencyCountryRoundings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CurrencyCountryRoundingConnection
}

"""Contains the information for one Edge"""
type CountryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Country

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CountryState {
  __typename: String
  id: ID!
  countryId: ID!
  shortCode: String!
  name: String
  position: Int
  active: Boolean
  customFields: String
  country: Country
  translations: CountryStateTranslationConnection!
  customerAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerAddressConnection
  orderAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderAddressConnection
}

"""The Result for a search that returns multiple Items"""
type CountryStateConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CountryStateEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  countryId: ID!
  shortCode: String!
  name: String
  position: Int
  active: Boolean
  customFields: String
  country: Country
  translations: CountryStateTranslationConnection!
  customerAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerAddressConnection
  orderAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderAddressConnection
}

"""Contains the information for one Edge"""
type CountryStateEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CountryState

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CountryStateTranslation {
  __typename: String
  name: String!
  countryStateId: ID!
  languageId: ID!
  countryState: CountryState
  language: Language
}

"""The Result for a search that returns multiple Items"""
type CountryStateTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CountryStateTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  countryStateId: ID!
  languageId: ID!
  countryState: CountryState
  language: Language
}

"""Contains the information for one Edge"""
type CountryStateTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CountryStateTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CountryTranslation {
  __typename: String
  name: String!
  countryId: ID!
  languageId: ID!
  country: Country
  language: Language
}

"""The Result for a search that returns multiple Items"""
type CountryTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CountryTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  countryId: ID!
  languageId: ID!
  country: Country
  language: Language
}

"""Contains the information for one Edge"""
type CountryTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CountryTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Currency {
  __typename: String
  id: ID!
  factor: Float!
  symbol: String!
  isoCode: String!
  shortName: String
  name: String
  position: Int
  isSystemDefault: Boolean
  customFields: String
  translations: CurrencyTranslationConnection!
  salesChannelDefaultAssignments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelCurrencyConnection
  salesChannelDomains(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelDomainConnection
  promotionDiscountPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountPricesConnection
  productExports(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductExportConnection
  countryRoundings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CurrencyCountryRoundingConnection
  taxFreeFrom: Float
}

"""The Result for a search that returns multiple Items"""
type CurrencyConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CurrencyEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  factor: Float!
  symbol: String!
  isoCode: String!
  shortName: String
  name: String
  position: Int
  isSystemDefault: Boolean
  customFields: String
  translations: CurrencyTranslationConnection!
  salesChannelDefaultAssignments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelCurrencyConnection
  salesChannelDomains(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelDomainConnection
  promotionDiscountPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountPricesConnection
  productExports(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductExportConnection
  countryRoundings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CurrencyCountryRoundingConnection
  taxFreeFrom: Float
}

type CurrencyCountryRounding {
  __typename: String
  id: ID!
  currencyId: ID!
  countryId: ID!
  currency: Currency
  country: Country
}

"""The Result for a search that returns multiple Items"""
type CurrencyCountryRoundingConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CurrencyCountryRoundingEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  currencyId: ID!
  countryId: ID!
  currency: Currency
  country: Country
}

"""Contains the information for one Edge"""
type CurrencyCountryRoundingEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CurrencyCountryRounding

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""Contains the information for one Edge"""
type CurrencyEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Currency

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CurrencyTranslation {
  __typename: String
  shortName: String!
  name: String!
  currencyId: ID!
  languageId: ID!
  currency: Currency
  language: Language
}

"""The Result for a search that returns multiple Items"""
type CurrencyTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CurrencyTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  shortName: String!
  name: String!
  currencyId: ID!
  languageId: ID!
  currency: Currency
  language: Language
}

"""Contains the information for one Edge"""
type CurrencyTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CurrencyTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CustomField {
  __typename: String
  id: ID!
  name: String!
  type: String!
  active: Boolean
  customFieldSetId: ID
  customFieldSet: CustomFieldSet
  productSearchConfigFields(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchConfigFieldConnection
}

"""The Result for a search that returns multiple Items"""
type CustomFieldConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomFieldEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  type: String!
  active: Boolean
  customFieldSetId: ID
  customFieldSet: CustomFieldSet
  productSearchConfigFields(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchConfigFieldConnection
}

"""Contains the information for one Edge"""
type CustomFieldEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomField

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CustomFieldSet {
  __typename: String
  id: ID!
  name: String!
  active: Boolean
  global: Boolean
  position: Int
  appId: ID
  customFields(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomFieldConnection
  relations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomFieldSetRelationConnection
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCustomFieldSetConnection
  app: App
}

"""The Result for a search that returns multiple Items"""
type CustomFieldSetConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomFieldSetEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  active: Boolean
  global: Boolean
  position: Int
  appId: ID
  customFields(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomFieldConnection
  relations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomFieldSetRelationConnection
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCustomFieldSetConnection
  app: App
}

"""Contains the information for one Edge"""
type CustomFieldSetEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomFieldSet

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CustomFieldSetRelation {
  __typename: String
  id: ID!
  customFieldSetId: ID!
  entityName: String!
  customFieldSet: CustomFieldSet
}

"""The Result for a search that returns multiple Items"""
type CustomFieldSetRelationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomFieldSetRelationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  customFieldSetId: ID!
  entityName: String!
  customFieldSet: CustomFieldSet
}

"""Contains the information for one Edge"""
type CustomFieldSetRelationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomFieldSetRelation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Customer {
  __typename: String
  id: ID!
  groupId: ID!
  defaultPaymentMethodId: ID!
  salesChannelId: ID!
  languageId: ID!
  lastPaymentMethodId: ID
  defaultBillingAddressId: ID!
  defaultShippingAddressId: ID!
  autoIncrement: Int
  customerNumber: String!
  salutationId: ID
  firstName: String!
  lastName: String!
  company: String
  email: String!
  title: String
  affiliateCode: String
  campaignCode: String
  active: Boolean
  doubleOptInRegistration: Boolean
  hash: String
  guest: Boolean
  newsletter: Boolean
  birthday: Date
  orderCount: Int
  orderTotalAmount: Float
  legacyPassword: String
  legacyEncoder: String
  group: CustomerGroup
  defaultPaymentMethod: PaymentMethod
  salesChannel: SalesChannel
  language: Language
  lastPaymentMethod: PaymentMethod
  defaultBillingAddress: CustomerAddress
  defaultShippingAddress: CustomerAddress
  salutation: Salutation
  addresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerAddressConnection
  orderCustomers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderCustomerConnection
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerTagConnection
  promotions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionPersonaCustomerConnection
  productReviews(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductReviewConnection
  recoveryCustomer: CustomerRecovery
  requestedGroupId: ID
  requestedGroup: CustomerGroup
  boundSalesChannelId: ID
  boundSalesChannel: SalesChannel
  wishlists(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerWishlistConnection
}

type CustomerAddress {
  __typename: String
  id: ID!
  customerId: ID!
  countryId: ID!
  countryStateId: ID
  salutationId: ID
  firstName: String!
  lastName: String!
  zipcode: String!
  city: String!
  company: String
  street: String!
  department: String
  title: String
  phoneNumber: String
  additionalAddressLine1: String
  additionalAddressLine2: String
  customer: Customer
  country: Country
  countryState: CountryState
  salutation: Salutation
}

"""The Result for a search that returns multiple Items"""
type CustomerAddressConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomerAddressEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  customerId: ID!
  countryId: ID!
  countryStateId: ID
  salutationId: ID
  firstName: String!
  lastName: String!
  zipcode: String!
  city: String!
  company: String
  street: String!
  department: String
  title: String
  phoneNumber: String
  additionalAddressLine1: String
  additionalAddressLine2: String
  customer: Customer
  country: Country
  countryState: CountryState
  salutation: Salutation
}

"""Contains the information for one Edge"""
type CustomerAddressEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomerAddress

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type CustomerConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomerEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  groupId: ID!
  defaultPaymentMethodId: ID!
  salesChannelId: ID!
  languageId: ID!
  lastPaymentMethodId: ID
  defaultBillingAddressId: ID!
  defaultShippingAddressId: ID!
  autoIncrement: Int
  customerNumber: String!
  salutationId: ID
  firstName: String!
  lastName: String!
  company: String
  email: String!
  title: String
  affiliateCode: String
  campaignCode: String
  active: Boolean
  doubleOptInRegistration: Boolean
  hash: String
  guest: Boolean
  newsletter: Boolean
  birthday: Date
  orderCount: Int
  orderTotalAmount: Float
  legacyPassword: String
  legacyEncoder: String
  group: CustomerGroup
  defaultPaymentMethod: PaymentMethod
  salesChannel: SalesChannel
  language: Language
  lastPaymentMethod: PaymentMethod
  defaultBillingAddress: CustomerAddress
  defaultShippingAddress: CustomerAddress
  salutation: Salutation
  addresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerAddressConnection
  orderCustomers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderCustomerConnection
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerTagConnection
  promotions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionPersonaCustomerConnection
  productReviews(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductReviewConnection
  recoveryCustomer: CustomerRecovery
  requestedGroupId: ID
  requestedGroup: CustomerGroup
  boundSalesChannelId: ID
  boundSalesChannel: SalesChannel
  wishlists(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerWishlistConnection
}

"""Contains the information for one Edge"""
type CustomerEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Customer

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CustomerGroup {
  __typename: String
  id: ID!
  name: String
  displayGross: Boolean
  customFields: String
  registrationActive: Boolean
  registrationTitle: String
  registrationIntroduction: String
  registrationOnlyCompanyRegistration: String
  registrationSeoMetaDescription: String
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  translations: CustomerGroupTranslationConnection!
  registrationSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerGroupRegistrationSalesChannelsConnection
}

"""The Result for a search that returns multiple Items"""
type CustomerGroupConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomerGroupEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String
  displayGross: Boolean
  customFields: String
  registrationActive: Boolean
  registrationTitle: String
  registrationIntroduction: String
  registrationOnlyCompanyRegistration: String
  registrationSeoMetaDescription: String
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  translations: CustomerGroupTranslationConnection!
  registrationSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerGroupRegistrationSalesChannelsConnection
}

"""Contains the information for one Edge"""
type CustomerGroupEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomerGroup

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CustomerGroupRegistrationSalesChannels {
  __typename: String
  customerGroupId: ID!
  salesChannelId: ID!
  customerGroup: CustomerGroup
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type CustomerGroupRegistrationSalesChannelsConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomerGroupRegistrationSalesChannelsEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  customerGroupId: ID!
  salesChannelId: ID!
  customerGroup: CustomerGroup
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type CustomerGroupRegistrationSalesChannelsEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomerGroupRegistrationSalesChannels

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CustomerGroupTranslation {
  __typename: String
  name: String!
  registrationTitle: String
  registrationIntroduction: String
  registrationOnlyCompanyRegistration: Boolean
  registrationSeoMetaDescription: String
  customerGroupId: ID!
  languageId: ID!
  customerGroup: CustomerGroup
  language: Language
}

"""The Result for a search that returns multiple Items"""
type CustomerGroupTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomerGroupTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  registrationTitle: String
  registrationIntroduction: String
  registrationOnlyCompanyRegistration: Boolean
  registrationSeoMetaDescription: String
  customerGroupId: ID!
  languageId: ID!
  customerGroup: CustomerGroup
  language: Language
}

"""Contains the information for one Edge"""
type CustomerGroupTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomerGroupTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CustomerRecovery {
  __typename: String
  id: ID!
  hash: String!
  customerId: ID!
  customer: Customer
}

"""The Result for a search that returns multiple Items"""
type CustomerRecoveryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomerRecoveryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  hash: String!
  customerId: ID!
  customer: Customer
}

"""Contains the information for one Edge"""
type CustomerRecoveryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomerRecovery

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CustomerTag {
  __typename: String
  customerId: ID!
  tagId: ID!
  customer: Customer
  tag: Tag
}

"""The Result for a search that returns multiple Items"""
type CustomerTagConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomerTagEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  customerId: ID!
  tagId: ID!
  customer: Customer
  tag: Tag
}

"""Contains the information for one Edge"""
type CustomerTagEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomerTag

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CustomerWishlist {
  __typename: String
  id: ID!
  customerId: ID!
  salesChannelId: ID!
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerWishlistProductConnection
  customer: Customer
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type CustomerWishlistConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomerWishlistEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  customerId: ID!
  salesChannelId: ID!
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerWishlistProductConnection
  customer: Customer
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type CustomerWishlistEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomerWishlist

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type CustomerWishlistProduct {
  __typename: String
  id: ID!
  productId: ID!
  productVersionId: ID!
  wishlistId: ID!
  wishlist: CustomerWishlist
  product: Product
}

"""The Result for a search that returns multiple Items"""
type CustomerWishlistProductConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [CustomerWishlistProductEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  productId: ID!
  productVersionId: ID!
  wishlistId: ID!
  wishlist: CustomerWishlist
  product: Product
}

"""Contains the information for one Edge"""
type CustomerWishlistProductEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: CustomerWishlistProduct

  """The cursor to the Item of the Edge"""
  cursor: ID
}

scalar Date

type DateTimeTest {
  __typename: String
  id: ID
  name: String
}

"""The Result for a search that returns multiple Items"""
type DateTimeTestConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [DateTimeTestEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID
  name: String
}

"""Contains the information for one Edge"""
type DateTimeTestEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: DateTimeTest

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type DeadMessage {
  __typename: String
  id: ID!
  originalMessageClass: String!
  handlerClass: String!
  encrypted: Boolean!
  errorCount: Int!
  exception: String!
  exceptionMessage: String!
  exceptionFile: String!
  exceptionLine: Int!
  scheduledTaskId: ID
  scheduledTask: ScheduledTask
}

"""The Result for a search that returns multiple Items"""
type DeadMessageConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [DeadMessageEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  originalMessageClass: String!
  handlerClass: String!
  encrypted: Boolean!
  errorCount: Int!
  exception: String!
  exceptionMessage: String!
  exceptionFile: String!
  exceptionLine: Int!
  scheduledTaskId: ID
  scheduledTask: ScheduledTask
}

"""Contains the information for one Edge"""
type DeadMessageEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: DeadMessage

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type DeliveryTime {
  __typename: String
  id: ID!
  name: String!
  min: Int!
  max: Int!
  unit: String!
  customFields: String
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodConnection
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  translations: DeliveryTimeTranslationConnection!
}

"""The Result for a search that returns multiple Items"""
type DeliveryTimeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [DeliveryTimeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  min: Int!
  max: Int!
  unit: String!
  customFields: String
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodConnection
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  translations: DeliveryTimeTranslationConnection!
}

"""Contains the information for one Edge"""
type DeliveryTimeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: DeliveryTime

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type DeliveryTimeTranslation {
  __typename: String
  name: String!
  deliveryTimeId: ID!
  languageId: ID!
  deliveryTime: DeliveryTime
  language: Language
}

"""The Result for a search that returns multiple Items"""
type DeliveryTimeTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [DeliveryTimeTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  deliveryTimeId: ID!
  languageId: ID!
  deliveryTime: DeliveryTime
  language: Language
}

"""Contains the information for one Edge"""
type DeliveryTimeTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: DeliveryTimeTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Document {
  __typename: String
  id: ID!
  documentTypeId: ID!
  fileType: String!
  referencedDocumentId: ID
  orderId: ID!
  documentMediaFileId: ID
  orderVersionId: ID!
  sent: Boolean
  static: Boolean
  deepLinkCode: String!
  documentType: DocumentType
  order: Order
  referencedDocument: Document
  dependentDocuments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentConnection
  documentMediaFile: Media
}

type DocumentBaseConfig {
  __typename: String
  id: ID!
  documentTypeId: ID!
  logoId: ID
  name: String!
  filenamePrefix: String
  filenameSuffix: String
  global: Boolean!
  documentNumber: String
  documentType: DocumentType
  logo: Media
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigSalesChannelConnection
}

"""The Result for a search that returns multiple Items"""
type DocumentBaseConfigConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [DocumentBaseConfigEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  documentTypeId: ID!
  logoId: ID
  name: String!
  filenamePrefix: String
  filenameSuffix: String
  global: Boolean!
  documentNumber: String
  documentType: DocumentType
  logo: Media
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigSalesChannelConnection
}

"""Contains the information for one Edge"""
type DocumentBaseConfigEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: DocumentBaseConfig

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type DocumentBaseConfigSalesChannel {
  __typename: String
  id: ID!
  documentBaseConfigId: ID!
  salesChannelId: ID
  documentTypeId: ID
  documentType: DocumentType
  documentBaseConfig: DocumentBaseConfig
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type DocumentBaseConfigSalesChannelConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [DocumentBaseConfigSalesChannelEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  documentBaseConfigId: ID!
  salesChannelId: ID
  documentTypeId: ID
  documentType: DocumentType
  documentBaseConfig: DocumentBaseConfig
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type DocumentBaseConfigSalesChannelEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: DocumentBaseConfigSalesChannel

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type DocumentConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [DocumentEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  documentTypeId: ID!
  fileType: String!
  referencedDocumentId: ID
  orderId: ID!
  documentMediaFileId: ID
  orderVersionId: ID!
  sent: Boolean
  static: Boolean
  deepLinkCode: String!
  documentType: DocumentType
  order: Order
  referencedDocument: Document
  dependentDocuments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentConnection
  documentMediaFile: Media
}

"""Contains the information for one Edge"""
type DocumentEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Document

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type DocumentType {
  __typename: String
  id: ID!
  name: String
  technicalName: String!
  customFields: String
  translations: DocumentTypeTranslationConnection!
  documents(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentConnection
  documentBaseConfigs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigConnection
  documentBaseConfigSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigSalesChannelConnection
}

"""The Result for a search that returns multiple Items"""
type DocumentTypeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [DocumentTypeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String
  technicalName: String!
  customFields: String
  translations: DocumentTypeTranslationConnection!
  documents(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentConnection
  documentBaseConfigs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigConnection
  documentBaseConfigSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigSalesChannelConnection
}

"""Contains the information for one Edge"""
type DocumentTypeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: DocumentType

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type DocumentTypeTranslation {
  __typename: String
  name: String!
  documentTypeId: ID!
  languageId: ID!
  documentType: DocumentType
  language: Language
}

"""The Result for a search that returns multiple Items"""
type DocumentTypeTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [DocumentTypeTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  documentTypeId: ID!
  languageId: ID!
  documentType: DocumentType
  language: Language
}

"""Contains the information for one Edge"""
type DocumentTypeTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: DocumentTypeTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type EventAction {
  __typename: String
  id: ID!
  eventName: String!
  actionName: String!
  active: Boolean
  title: String
  rules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): EventActionRuleConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): EventActionSalesChannelConnection
}

"""The Result for a search that returns multiple Items"""
type EventActionConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [EventActionEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  eventName: String!
  actionName: String!
  active: Boolean
  title: String
  rules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): EventActionRuleConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): EventActionSalesChannelConnection
}

"""Contains the information for one Edge"""
type EventActionEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: EventAction

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type EventActionRule {
  __typename: String
  eventActionId: ID!
  ruleId: ID!
  eventAction: EventAction
  rule: Rule
}

"""The Result for a search that returns multiple Items"""
type EventActionRuleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [EventActionRuleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  eventActionId: ID!
  ruleId: ID!
  eventAction: EventAction
  rule: Rule
}

"""Contains the information for one Edge"""
type EventActionRuleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: EventActionRule

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type EventActionSalesChannel {
  __typename: String
  eventActionId: ID!
  salesChannelId: ID!
  eventAction: EventAction
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type EventActionSalesChannelConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [EventActionSalesChannelEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  eventActionId: ID!
  salesChannelId: ID!
  eventAction: EventAction
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type EventActionSalesChannelEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: EventActionSalesChannel

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ExtendedProduct {
  __typename: String
  id: ID!
  name: String
  productId: ID
  languageId: ID
  language: Language
  toOne: Product
  manyToOne: Product
}

"""The Result for a search that returns multiple Items"""
type ExtendedProductConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ExtendedProductEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String
  productId: ID
  languageId: ID
  language: Language
  toOne: Product
  manyToOne: Product
}

"""Contains the information for one Edge"""
type ExtendedProductEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ExtendedProduct

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Flow {
  __typename: String
  id: ID!
  name: String!
  eventName: String!
  priority: Int
  invalid: Boolean
  active: Boolean
  description: String
  sequences(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): FlowSequenceConnection
}

"""The Result for a search that returns multiple Items"""
type FlowConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [FlowEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  eventName: String!
  priority: Int
  invalid: Boolean
  active: Boolean
  description: String
  sequences(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): FlowSequenceConnection
}

"""Contains the information for one Edge"""
type FlowEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Flow

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type FlowSequence {
  __typename: String
  id: ID!
  flowId: ID!
  ruleId: ID
  actionName: String
  position: Int
  displayGroup: Int
  trueCase: Boolean
  flow: Flow
  rule: Rule
  parent: FlowSequence
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): FlowSequenceConnection
  parentId: ID
}

"""The Result for a search that returns multiple Items"""
type FlowSequenceConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [FlowSequenceEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  flowId: ID!
  ruleId: ID
  actionName: String
  position: Int
  displayGroup: Int
  trueCase: Boolean
  flow: Flow
  rule: Rule
  parent: FlowSequence
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): FlowSequenceConnection
  parentId: ID
}

"""Contains the information for one Edge"""
type FlowSequenceEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: FlowSequence

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ImportExportFile {
  __typename: String
  id: ID!
  originalName: String!
  path: String!
  size: Int
  log: ImportExportLog
  accessToken: String
}

"""The Result for a search that returns multiple Items"""
type ImportExportFileConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ImportExportFileEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  originalName: String!
  path: String!
  size: Int
  log: ImportExportLog
  accessToken: String
}

"""Contains the information for one Edge"""
type ImportExportFileEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ImportExportFile

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ImportExportLog {
  __typename: String
  id: ID!
  activity: String!
  state: String!
  records: Int!
  userId: ID
  profileId: ID
  fileId: ID
  invalidRecordsLogId: ID
  username: String
  profileName: String
  user: User
  profile: ImportExportProfile
  file: ImportExportFile
  invalidRecordsLog: ImportExportLog
  failedImportLog: ImportExportLog
}

"""The Result for a search that returns multiple Items"""
type ImportExportLogConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ImportExportLogEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  activity: String!
  state: String!
  records: Int!
  userId: ID
  profileId: ID
  fileId: ID
  invalidRecordsLogId: ID
  username: String
  profileName: String
  user: User
  profile: ImportExportProfile
  file: ImportExportFile
  invalidRecordsLog: ImportExportLog
  failedImportLog: ImportExportLog
}

"""Contains the information for one Edge"""
type ImportExportLogEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ImportExportLog

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ImportExportProfile {
  __typename: String
  id: ID!
  name: String
  label: String!
  systemDefault: Boolean
  sourceEntity: String!
  fileType: String!
  delimiter: String!
  enclosure: String!
  importExportLogs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ImportExportLogConnection
  translations: ImportExportProfileTranslationConnection!
}

"""The Result for a search that returns multiple Items"""
type ImportExportProfileConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ImportExportProfileEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String
  label: String!
  systemDefault: Boolean
  sourceEntity: String!
  fileType: String!
  delimiter: String!
  enclosure: String!
  importExportLogs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ImportExportLogConnection
  translations: ImportExportProfileTranslationConnection!
}

"""Contains the information for one Edge"""
type ImportExportProfileEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ImportExportProfile

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ImportExportProfileTranslation {
  __typename: String
  label: String
  importExportProfileId: ID!
  languageId: ID!
  importExportProfile: ImportExportProfile
  language: Language
}

"""The Result for a search that returns multiple Items"""
type ImportExportProfileTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ImportExportProfileTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  label: String
  importExportProfileId: ID!
  languageId: ID!
  importExportProfile: ImportExportProfile
  language: Language
}

"""Contains the information for one Edge"""
type ImportExportProfileTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ImportExportProfileTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

input InputAclRole {
  __typename: String
  id: ID
  name: String
  description: String
  users: [InputAclUserRole]
  app: InputApp
  integrations: [InputIntegrationRole]
}

input InputAclUserRole {
  __typename: String
  userId: ID
  aclRoleId: ID
  user: InputUser
  aclRole: InputAclRole
}

input InputApp {
  __typename: String
  id: ID
  name: String
  path: String
  author: String
  copyright: String
  license: String
  active: Boolean
  configurable: Boolean
  privacy: String
  version: String
  icon: String
  appSecret: String
  translations: [InputAppTranslation]
  label: String
  description: String
  privacyPolicyExtensions: String
  customFields: String
  integrationId: ID
  integration: InputIntegration
  aclRoleId: ID
  aclRole: InputAclRole
  customFieldSets: [InputCustomFieldSet]
  actionButtons: [InputAppActionButton]
  templates: [InputAppTemplate]
  scripts: [InputScript]
  webhooks: [InputWebhook]
  paymentMethods: [InputAppPaymentMethod]
  cmsBlocks: [InputAppCmsBlock]
}

input InputAppActionButton {
  __typename: String
  id: ID
  entity: String
  view: String
  url: String
  action: String
  openNewTab: Boolean
  label: String
  translations: [InputAppActionButtonTranslation]
  appId: ID
  app: InputApp
}

input InputAppActionButtonTranslation {
  __typename: String
  label: String
  appActionButtonId: ID
  languageId: ID
  appActionButton: InputAppActionButton
  language: InputLanguage
}

input InputAppCmsBlock {
  __typename: String
  id: ID
  name: String
  template: String
  styles: String
  label: String
  translations: [InputAppCmsBlockTranslation]
  appId: ID
  app: InputApp
}

input InputAppCmsBlockTranslation {
  __typename: String
  label: String
  appCmsBlockId: ID
  languageId: ID
  appCmsBlock: InputAppCmsBlock
  language: InputLanguage
}

input InputAppPaymentMethod {
  __typename: String
  id: ID
  appName: String
  identifier: String
  payUrl: String
  finalizeUrl: String
  appId: ID
  app: InputApp
  originalMediaId: ID
  originalMedia: InputMedia
  paymentMethodId: ID
  paymentMethod: InputPaymentMethod
}

input InputAppTemplate {
  __typename: String
  id: ID
  template: String
  path: String
  active: Boolean
  appId: ID
  app: InputApp
}

input InputAppTranslation {
  __typename: String
  label: String
  description: String
  privacyPolicyExtensions: String
  appId: ID
  languageId: ID
  app: InputApp
  language: InputLanguage
}

input InputAttributeTest {
  __typename: String
  id: ID
  parentId: ID
  name: String
  customTranslated: String
  translations: [InputAttributeTestTranslation]
  parent: InputAttributeTest
  children: [InputAttributeTest]
}

input InputAttributeTestTranslation {
  __typename: String
  attributeTestId: ID
  languageId: ID
  attributeTest: InputAttributeTest
  language: InputLanguage
}

input InputCategory {
  __typename: String
  id: ID
  versionId: ID
  parentId: ID
  parentVersionId: ID
  afterCategoryId: ID
  afterCategoryVersionId: ID
  mediaId: ID
  displayNestedProducts: Boolean
  autoIncrement: Int
  breadcrumb: String
  level: Int
  path: String
  childCount: Int
  type: String
  productAssignmentType: String
  visible: Boolean
  active: Boolean
  name: String
  customFields: String
  slotConfig: String
  linkType: String
  internalLink: String
  externalLink: String
  linkNewTab: String
  description: String
  metaTitle: String
  metaDescription: String
  keywords: String
  parent: InputCategory
  children: [InputCategory]
  media: InputMedia
  translations: [InputCategoryTranslation]
  products: [InputProductCategory]
  nestedProducts: [InputProductCategoryTree]
  tags: [InputCategoryTag]
  cmsPageId: ID
  cmsPageVersionId: ID
  cmsPage: InputCmsPage
  productStreamId: ID
  productStream: InputProductStream
  navigationSalesChannels: [InputSalesChannel]
  footerSalesChannels: [InputSalesChannel]
  serviceSalesChannels: [InputSalesChannel]
  mainCategories: [InputMainCategory]
  seoUrls: [InputSeoUrl]
}

input InputCategoryTag {
  __typename: String
  categoryId: ID
  categoryVersionId: ID
  tagId: ID
  category: InputCategory
  tag: InputTag
}

input InputCategoryTranslation {
  __typename: String
  name: String
  linkType: String
  internalLink: ID
  externalLink: String
  linkNewTab: Boolean
  description: String
  metaTitle: String
  metaDescription: String
  keywords: String
  categoryId: ID
  languageId: ID
  category: InputCategory
  language: InputLanguage
  categoryVersionId: ID
}

input InputCmsBlock {
  __typename: String
  id: ID
  position: Int
  type: String
  locked: Boolean
  name: String
  sectionPosition: String
  marginTop: String
  marginBottom: String
  marginLeft: String
  marginRight: String
  backgroundColor: String
  backgroundMediaId: ID
  backgroundMediaMode: String
  cssClass: String
  sectionId: ID
  section: InputCmsSection
  backgroundMedia: InputMedia
  slots: [InputCmsSlot]
  versionId: ID
  cmsSectionVersionId: ID
}

input InputCmsPage {
  __typename: String
  id: ID
  versionId: ID
  name: String
  type: String
  entity: String
  previewMediaId: ID
  customFields: String
  locked: Boolean
  sections: [InputCmsSection]
  translations: [InputCmsPageTranslation]
  previewMedia: InputMedia
  categories: [InputCategory]
  landingPages: [InputLandingPage]
  homeSalesChannels: [InputSalesChannel]
  products: [InputProduct]
}

input InputCmsPageTranslation {
  __typename: String
  name: String
  cmsPageId: ID
  languageId: ID
  cmsPage: InputCmsPage
  language: InputLanguage
  cmsPageVersionId: ID
}

input InputCmsSection {
  __typename: String
  id: ID
  position: Int
  type: String
  locked: Boolean
  name: String
  sizingMode: String
  mobileBehavior: String
  backgroundColor: String
  backgroundMediaId: ID
  backgroundMediaMode: String
  cssClass: String
  pageId: ID
  page: InputCmsPage
  backgroundMedia: InputMedia
  blocks: [InputCmsBlock]
  versionId: ID
  cmsPageVersionId: ID
}

input InputCmsSlot {
  __typename: String
  id: ID
  versionId: ID
  type: String
  slot: String
  locked: Boolean
  config: String
  customFields: String
  blockId: ID
  block: InputCmsBlock
  translations: [InputCmsSlotTranslation]
  cmsBlockVersionId: ID
}

input InputCmsSlotTranslation {
  __typename: String
  cmsSlotId: ID
  languageId: ID
  cmsSlot: InputCmsSlot
  language: InputLanguage
  cmsSlotVersionId: ID
}

input InputCountry {
  __typename: String
  id: ID
  name: String
  iso: String
  position: Int
  taxFree: Boolean
  active: Boolean
  shippingAvailable: Boolean
  iso3: String
  displayStateInRegistration: Boolean
  forceStateInRegistration: Boolean
  companyTaxFree: Boolean
  checkVatIdPattern: Boolean
  vatIdRequired: Boolean
  vatIdPattern: String
  customFields: String
  states: [InputCountryState]
  translations: [InputCountryTranslation]
  customerAddresses: [InputCustomerAddress]
  orderAddresses: [InputOrderAddress]
  salesChannelDefaultAssignments: [InputSalesChannel]
  salesChannels: [InputSalesChannelCountry]
  taxRules: [InputTaxRule]
  currencyCountryRoundings: [InputCurrencyCountryRounding]
}

input InputCountryState {
  __typename: String
  id: ID
  countryId: ID
  shortCode: String
  name: String
  position: Int
  active: Boolean
  customFields: String
  country: InputCountry
  translations: [InputCountryStateTranslation]
  customerAddresses: [InputCustomerAddress]
  orderAddresses: [InputOrderAddress]
}

input InputCountryStateTranslation {
  __typename: String
  name: String
  countryStateId: ID
  languageId: ID
  countryState: InputCountryState
  language: InputLanguage
}

input InputCountryTranslation {
  __typename: String
  name: String
  countryId: ID
  languageId: ID
  country: InputCountry
  language: InputLanguage
}

input InputCurrency {
  __typename: String
  id: ID
  factor: Float
  symbol: String
  isoCode: String
  shortName: String
  name: String
  position: Int
  isSystemDefault: Boolean
  customFields: String
  translations: [InputCurrencyTranslation]
  salesChannelDefaultAssignments: [InputSalesChannel]
  orders: [InputOrder]
  salesChannels: [InputSalesChannelCurrency]
  salesChannelDomains: [InputSalesChannelDomain]
  promotionDiscountPrices: [InputPromotionDiscountPrices]
  productExports: [InputProductExport]
  countryRoundings: [InputCurrencyCountryRounding]
  taxFreeFrom: Float
}

input InputCurrencyCountryRounding {
  __typename: String
  id: ID
  currencyId: ID
  countryId: ID
  currency: InputCurrency
  country: InputCountry
}

input InputCurrencyTranslation {
  __typename: String
  shortName: String
  name: String
  currencyId: ID
  languageId: ID
  currency: InputCurrency
  language: InputLanguage
}

input InputCustomField {
  __typename: String
  id: ID
  name: String
  type: String
  active: Boolean
  customFieldSetId: ID
  customFieldSet: InputCustomFieldSet
  productSearchConfigFields: [InputProductSearchConfigField]
}

input InputCustomFieldSet {
  __typename: String
  id: ID
  name: String
  active: Boolean
  global: Boolean
  position: Int
  appId: ID
  customFields: [InputCustomField]
  relations: [InputCustomFieldSetRelation]
  products: [InputProductCustomFieldSet]
  app: InputApp
}

input InputCustomFieldSetRelation {
  __typename: String
  id: ID
  customFieldSetId: ID
  entityName: String
  customFieldSet: InputCustomFieldSet
}

input InputCustomer {
  __typename: String
  id: ID
  groupId: ID
  defaultPaymentMethodId: ID
  salesChannelId: ID
  languageId: ID
  lastPaymentMethodId: ID
  defaultBillingAddressId: ID
  defaultShippingAddressId: ID
  autoIncrement: Int
  customerNumber: String
  salutationId: ID
  firstName: String
  lastName: String
  company: String
  email: String
  title: String
  affiliateCode: String
  campaignCode: String
  active: Boolean
  doubleOptInRegistration: Boolean
  hash: String
  guest: Boolean
  newsletter: Boolean
  birthday: Date
  orderCount: Int
  orderTotalAmount: Float
  legacyPassword: String
  legacyEncoder: String
  group: InputCustomerGroup
  defaultPaymentMethod: InputPaymentMethod
  salesChannel: InputSalesChannel
  language: InputLanguage
  lastPaymentMethod: InputPaymentMethod
  defaultBillingAddress: InputCustomerAddress
  defaultShippingAddress: InputCustomerAddress
  salutation: InputSalutation
  addresses: [InputCustomerAddress]
  orderCustomers: [InputOrderCustomer]
  tags: [InputCustomerTag]
  promotions: [InputPromotionPersonaCustomer]
  productReviews: [InputProductReview]
  recoveryCustomer: InputCustomerRecovery
  requestedGroupId: ID
  requestedGroup: InputCustomerGroup
  boundSalesChannelId: ID
  boundSalesChannel: InputSalesChannel
  wishlists: [InputCustomerWishlist]
}

input InputCustomerAddress {
  __typename: String
  id: ID
  customerId: ID
  countryId: ID
  countryStateId: ID
  salutationId: ID
  firstName: String
  lastName: String
  zipcode: String
  city: String
  company: String
  street: String
  department: String
  title: String
  phoneNumber: String
  additionalAddressLine1: String
  additionalAddressLine2: String
  customer: InputCustomer
  country: InputCountry
  countryState: InputCountryState
  salutation: InputSalutation
}

input InputCustomerGroup {
  __typename: String
  id: ID
  name: String
  displayGross: Boolean
  customFields: String
  registrationActive: Boolean
  registrationTitle: String
  registrationIntroduction: String
  registrationOnlyCompanyRegistration: String
  registrationSeoMetaDescription: String
  customers: [InputCustomer]
  salesChannels: [InputSalesChannel]
  translations: [InputCustomerGroupTranslation]
  registrationSalesChannels: [InputCustomerGroupRegistrationSalesChannels]
}

input InputCustomerGroupRegistrationSalesChannels {
  __typename: String
  customerGroupId: ID
  salesChannelId: ID
  customerGroup: InputCustomerGroup
  salesChannel: InputSalesChannel
}

input InputCustomerGroupTranslation {
  __typename: String
  name: String
  registrationTitle: String
  registrationIntroduction: String
  registrationOnlyCompanyRegistration: Boolean
  registrationSeoMetaDescription: String
  customerGroupId: ID
  languageId: ID
  customerGroup: InputCustomerGroup
  language: InputLanguage
}

input InputCustomerRecovery {
  __typename: String
  id: ID
  hash: String
  customerId: ID
  customer: InputCustomer
}

input InputCustomerTag {
  __typename: String
  customerId: ID
  tagId: ID
  customer: InputCustomer
  tag: InputTag
}

input InputCustomerWishlist {
  __typename: String
  id: ID
  customerId: ID
  salesChannelId: ID
  products: [InputCustomerWishlistProduct]
  customer: InputCustomer
  salesChannel: InputSalesChannel
}

input InputCustomerWishlistProduct {
  __typename: String
  id: ID
  productId: ID
  productVersionId: ID
  wishlistId: ID
  wishlist: InputCustomerWishlist
  product: InputProduct
}

input InputDeadMessage {
  __typename: String
  id: ID
  originalMessageClass: String
  handlerClass: String
  encrypted: Boolean
  errorCount: Int
  exception: String
  exceptionMessage: String
  exceptionFile: String
  exceptionLine: Int
  scheduledTaskId: ID
  scheduledTask: InputScheduledTask
}

input InputDeliveryTime {
  __typename: String
  id: ID
  name: String
  min: Int
  max: Int
  unit: String
  customFields: String
  shippingMethods: [InputShippingMethod]
  products: [InputProduct]
  translations: [InputDeliveryTimeTranslation]
}

input InputDeliveryTimeTranslation {
  __typename: String
  name: String
  deliveryTimeId: ID
  languageId: ID
  deliveryTime: InputDeliveryTime
  language: InputLanguage
}

input InputDocument {
  __typename: String
  id: ID
  documentTypeId: ID
  fileType: String
  referencedDocumentId: ID
  orderId: ID
  documentMediaFileId: ID
  orderVersionId: ID
  sent: Boolean
  static: Boolean
  deepLinkCode: String
  documentType: InputDocumentType
  order: InputOrder
  referencedDocument: InputDocument
  dependentDocuments: [InputDocument]
  documentMediaFile: InputMedia
}

input InputDocumentBaseConfig {
  __typename: String
  id: ID
  documentTypeId: ID
  logoId: ID
  name: String
  filenamePrefix: String
  filenameSuffix: String
  global: Boolean
  documentNumber: String
  documentType: InputDocumentType
  logo: InputMedia
  salesChannels: [InputDocumentBaseConfigSalesChannel]
}

input InputDocumentBaseConfigSalesChannel {
  __typename: String
  id: ID
  documentBaseConfigId: ID
  salesChannelId: ID
  documentTypeId: ID
  documentType: InputDocumentType
  documentBaseConfig: InputDocumentBaseConfig
  salesChannel: InputSalesChannel
}

input InputDocumentType {
  __typename: String
  id: ID
  name: String
  technicalName: String
  customFields: String
  translations: [InputDocumentTypeTranslation]
  documents: [InputDocument]
  documentBaseConfigs: [InputDocumentBaseConfig]
  documentBaseConfigSalesChannels: [InputDocumentBaseConfigSalesChannel]
}

input InputDocumentTypeTranslation {
  __typename: String
  name: String
  documentTypeId: ID
  languageId: ID
  documentType: InputDocumentType
  language: InputLanguage
}

input InputEventAction {
  __typename: String
  id: ID
  eventName: String
  actionName: String
  active: Boolean
  title: String
  rules: [InputEventActionRule]
  salesChannels: [InputEventActionSalesChannel]
}

input InputEventActionRule {
  __typename: String
  eventActionId: ID
  ruleId: ID
  eventAction: InputEventAction
  rule: InputRule
}

input InputEventActionSalesChannel {
  __typename: String
  eventActionId: ID
  salesChannelId: ID
  eventAction: InputEventAction
  salesChannel: InputSalesChannel
}

input InputFlow {
  __typename: String
  id: ID
  name: String
  eventName: String
  priority: Int
  invalid: Boolean
  active: Boolean
  description: String
  sequences: [InputFlowSequence]
}

input InputFlowSequence {
  __typename: String
  id: ID
  flowId: ID
  ruleId: ID
  actionName: String
  position: Int
  displayGroup: Int
  trueCase: Boolean
  flow: InputFlow
  rule: InputRule
  parent: InputFlowSequence
  children: [InputFlowSequence]
  parentId: ID
}

input InputImportExportFile {
  __typename: String
  id: ID
  originalName: String
  path: String
  size: Int
  log: InputImportExportLog
  accessToken: String
}

input InputImportExportLog {
  __typename: String
  id: ID
  activity: String
  state: String
  records: Int
  userId: ID
  profileId: ID
  fileId: ID
  invalidRecordsLogId: ID
  username: String
  profileName: String
  user: InputUser
  profile: InputImportExportProfile
  file: InputImportExportFile
  invalidRecordsLog: InputImportExportLog
  failedImportLog: InputImportExportLog
}

input InputImportExportProfile {
  __typename: String
  id: ID
  name: String
  label: String
  systemDefault: Boolean
  sourceEntity: String
  fileType: String
  delimiter: String
  enclosure: String
  importExportLogs: [InputImportExportLog]
  translations: [InputImportExportProfileTranslation]
}

input InputImportExportProfileTranslation {
  __typename: String
  label: String
  importExportProfileId: ID
  languageId: ID
  importExportProfile: InputImportExportProfile
  language: InputLanguage
}

input InputIntegration {
  __typename: String
  id: ID
  label: String
  accessKey: String
  writeAccess: Boolean
  admin: Boolean
  app: InputApp
  aclRoles: [InputIntegrationRole]
}

input InputIntegrationRole {
  __typename: String
  integrationId: ID
  aclRoleId: ID
  integration: InputIntegration
  role: InputAclRole
}

input InputLandingPage {
  __typename: String
  id: ID
  versionId: ID
  active: Boolean
  name: String
  customFields: String
  slotConfig: String
  metaTitle: String
  metaDescription: String
  keywords: String
  url: String
  translations: [InputLandingPageTranslation]
  tags: [InputLandingPageTag]
  cmsPageId: ID
  cmsPage: InputCmsPage
  salesChannels: [InputLandingPageSalesChannel]
  seoUrls: [InputSeoUrl]
  cmsPageVersionId: ID
}

input InputLandingPageSalesChannel {
  __typename: String
  landingPageId: ID
  landingPageVersionId: ID
  salesChannelId: ID
  landingPage: InputLandingPage
  salesChannel: InputSalesChannel
}

input InputLandingPageTag {
  __typename: String
  landingPageId: ID
  landingPageVersionId: ID
  tagId: ID
  landingPage: InputLandingPage
  tag: InputTag
}

input InputLandingPageTranslation {
  __typename: String
  name: String
  url: String
  metaTitle: String
  metaDescription: String
  keywords: String
  landingPageId: ID
  languageId: ID
  landingPage: InputLandingPage
  language: InputLanguage
  landingPageVersionId: ID
}

input InputLanguage {
  __typename: String
  id: ID
  parentId: ID
  localeId: ID
  translationCodeId: ID
  name: String
  parent: InputLanguage
  locale: InputLocale
  translationCode: InputLocale
  children: [InputLanguage]
  salesChannels: [InputSalesChannelLanguage]
  salesChannelDefaultAssignments: [InputSalesChannel]
  salesChannelDomains: [InputSalesChannelDomain]
  customers: [InputCustomer]
  newsletterRecipients: [InputNewsletterRecipient]
  orders: [InputOrder]
  categoryTranslations: [InputCategoryTranslation]
  countryStateTranslations: [InputCountryStateTranslation]
  countryTranslations: [InputCountryTranslation]
  currencyTranslations: [InputCurrencyTranslation]
  customerGroupTranslations: [InputCustomerGroupTranslation]
  localeTranslations: [InputLocaleTranslation]
  mediaTranslations: [InputMediaTranslation]
  paymentMethodTranslations: [InputPaymentMethodTranslation]
  productManufacturerTranslations: [InputProductManufacturerTranslation]
  productTranslations: [InputProductTranslation]
  shippingMethodTranslations: [InputShippingMethodTranslation]
  unitTranslations: [InputUnitTranslation]
  propertyGroupTranslations: [InputPropertyGroupTranslation]
  propertyGroupOptionTranslations: [InputPropertyGroupOptionTranslation]
  salesChannelTranslations: [InputSalesChannelTranslation]
  salesChannelTypeTranslations: [InputSalesChannelTypeTranslation]
  salutationTranslations: [InputSalutationTranslation]
  pluginTranslations: [InputPluginTranslation]
  productStreamTranslations: [InputProductStreamTranslation]
  stateMachineTranslations: [InputStateMachineTranslation]
  stateMachineStateTranslations: [InputStateMachineStateTranslation]
  cmsPageTranslations: [InputCmsPageTranslation]
  cmsSlotTranslations: [InputCmsSlotTranslation]
  mailTemplateTranslations: [InputMailTemplateTranslation]
  mailHeaderFooterTranslations: [InputMailHeaderFooterTranslation]
  documentTypeTranslations: [InputDocumentTypeTranslation]
  numberRangeTypeTranslations: [InputNumberRangeTypeTranslation]
  deliveryTimeTranslations: [InputDeliveryTimeTranslation]
  productSearchKeywords: [InputProductSearchKeyword]
  productKeywordDictionaries: [InputProductKeywordDictionary]
  mailTemplateTypeTranslations: [InputMailTemplateTypeTranslation]
  promotionTranslations: [InputPromotionTranslation]
  numberRangeTranslations: [InputNumberRangeTranslation]
  productReviews: [InputProductReview]
  seoUrlTranslations: [InputSeoUrl]
  taxRuleTypeTranslations: [InputTaxRuleTypeTranslation]
  productCrossSellingTranslations: [InputProductCrossSellingTranslation]
  importExportProfileTranslations: [InputImportExportProfileTranslation]
  productSortingTranslations: [InputProductSortingTranslation]
  productFeatureSetTranslations: [InputProductFeatureSetTranslation]
  appTranslations: [InputAppTranslation]
  actionButtonTranslations: [InputAppActionButtonTranslation]
  landingPageTranslations: [InputLandingPageTranslation]
  appCmsBlockTranslations: [InputAppCmsBlockTranslation]
  productSearchConfig: InputProductSearchConfig
  themeTranslations: [InputThemeTranslation]
}

input InputLocale {
  __typename: String
  id: ID
  code: String
  name: String
  territory: String
  customFields: String
  languages: [InputLanguage]
  translations: [InputLocaleTranslation]
  users: [InputUser]
}

input InputLocaleTranslation {
  __typename: String
  name: String
  territory: String
  localeId: ID
  languageId: ID
  locale: InputLocale
  language: InputLanguage
}

input InputMailHeaderFooter {
  __typename: String
  id: ID
  systemDefault: Boolean
  name: String
  description: String
  headerHtml: String
  headerPlain: String
  footerHtml: String
  footerPlain: String
  translations: [InputMailHeaderFooterTranslation]
  salesChannels: [InputSalesChannel]
}

input InputMailHeaderFooterTranslation {
  __typename: String
  name: String
  description: String
  headerHtml: String
  headerPlain: String
  footerHtml: String
  footerPlain: String
  mailHeaderFooterId: ID
  languageId: ID
  mailHeaderFooter: InputMailHeaderFooter
  language: InputLanguage
}

input InputMailTemplate {
  __typename: String
  id: ID
  mailTemplateTypeId: ID
  systemDefault: Boolean
  senderName: String
  description: String
  subject: String
  contentHtml: String
  contentPlain: String
  customFields: String
  translations: [InputMailTemplateTranslation]
  mailTemplateType: InputMailTemplateType
  media: [InputMailTemplateMedia]
}

input InputMailTemplateMedia {
  __typename: String
  id: ID
  mailTemplateId: ID
  languageId: ID
  mediaId: ID
  position: Int
  mailTemplate: InputMailTemplate
  media: InputMedia
}

input InputMailTemplateTranslation {
  __typename: String
  senderName: String
  description: String
  subject: String
  contentHtml: String
  contentPlain: String
  mailTemplateId: ID
  languageId: ID
  mailTemplate: InputMailTemplate
  language: InputLanguage
}

input InputMailTemplateType {
  __typename: String
  id: ID
  name: String
  technicalName: String
  customFields: String
  translations: [InputMailTemplateTypeTranslation]
  mailTemplates: [InputMailTemplate]
}

input InputMailTemplateTypeTranslation {
  __typename: String
  name: String
  mailTemplateTypeId: ID
  languageId: ID
  mailTemplateType: InputMailTemplateType
  language: InputLanguage
}

input InputMainCategory {
  __typename: String
  id: ID
  productId: ID
  productVersionId: ID
  categoryId: ID
  categoryVersionId: ID
  salesChannelId: ID
  product: InputProduct
  category: InputCategory
  salesChannel: InputSalesChannel
}

input InputMedia {
  __typename: String
  id: ID
  userId: ID
  mediaFolderId: ID
  mimeType: String
  fileExtension: String
  fileName: String
  fileSize: Int
  alt: String
  title: String
  url: String
  hasFile: Boolean
  private: Boolean
  customFields: String
  translations: [InputMediaTranslation]
  tags: [InputMediaTag]
  thumbnails: [InputMediaThumbnail]
  user: InputUser
  categories: [InputCategory]
  productManufacturers: [InputProductManufacturer]
  productMedia: [InputProductMedia]
  avatarUser: InputUser
  mediaFolder: InputMediaFolder
  propertyGroupOptions: [InputPropertyGroupOption]
  mailTemplateMedia: [InputMailTemplateMedia]
  documentBaseConfigs: [InputDocumentBaseConfig]
  shippingMethods: [InputShippingMethod]
  paymentMethods: [InputPaymentMethod]
  productConfiguratorSettings: [InputProductConfiguratorSetting]
  orderLineItems: [InputOrderLineItem]
  cmsBlocks: [InputCmsBlock]
  cmsSections: [InputCmsSection]
  cmsPages: [InputCmsPage]
  documents: [InputDocument]
  appPaymentMethods: [InputAppPaymentMethod]
  themes: [InputTheme]
  themeMedia: [InputThemeMedia]
}

input InputMediaDefaultFolder {
  __typename: String
  id: ID
  entity: String
  folder: InputMediaFolder
}

input InputMediaFolder {
  __typename: String
  id: ID
  useParentConfiguration: Boolean
  configurationId: ID
  defaultFolderId: ID
  parentId: ID
  parent: InputMediaFolder
  children: [InputMediaFolder]
  childCount: Int
  media: [InputMedia]
  defaultFolder: InputMediaDefaultFolder
  configuration: InputMediaFolderConfiguration
  name: String
}

input InputMediaFolderConfiguration {
  __typename: String
  id: ID
  createThumbnails: Boolean
  keepAspectRatio: Boolean
  thumbnailQuality: Int
  private: Boolean
  noAssociation: Boolean
  mediaFolders: [InputMediaFolder]
  mediaThumbnailSizes: [InputMediaFolderConfigurationMediaThumbnailSize]
}

input InputMediaFolderConfigurationMediaThumbnailSize {
  __typename: String
  mediaFolderConfigurationId: ID
  mediaThumbnailSizeId: ID
  mediaFolderConfiguration: InputMediaFolderConfiguration
  mediaThumbnailSize: InputMediaThumbnailSize
}

input InputMediaTag {
  __typename: String
  mediaId: ID
  tagId: ID
  media: InputMedia
  tag: InputTag
}

input InputMediaThumbnail {
  __typename: String
  id: ID
  mediaId: ID
  width: Int
  height: Int
  url: String
  media: InputMedia
}

input InputMediaThumbnailSize {
  __typename: String
  id: ID
  width: Int
  height: Int
  mediaFolderConfigurations: [InputMediaFolderConfigurationMediaThumbnailSize]
}

input InputMediaTranslation {
  __typename: String
  title: String
  alt: String
  mediaId: ID
  languageId: ID
  media: InputMedia
  language: InputLanguage
}

input InputNamed {
  __typename: String
  id: ID
  name: String
  optionalGroupId: ID
  optionalGroup: InputNamedOptionalGroup
}

input InputNamedOptionalGroup {
  __typename: String
  id: ID
  name: String
  nameds: [InputNamed]
}

input InputNewsletterRecipient {
  __typename: String
  id: ID
  email: String
  title: String
  firstName: String
  lastName: String
  zipCode: String
  city: String
  street: String
  status: String
  hash: String
  tags: [InputNewsletterRecipientTag]
  salutationId: ID
  salutation: InputSalutation
  languageId: ID
  language: InputLanguage
  salesChannelId: ID
  salesChannel: InputSalesChannel
}

input InputNewsletterRecipientTag {
  __typename: String
  newsletterRecipientId: ID
  tagId: ID
  newsletterRecipient: InputNewsletterRecipient
  tag: InputTag
}

input InputNumberRange {
  __typename: String
  id: ID
  typeId: ID
  global: Boolean
  name: String
  description: String
  pattern: String
  start: Int
  customFields: String
  type: InputNumberRangeType
  numberRangeSalesChannels: [InputNumberRangeSalesChannel]
  state: InputNumberRangeState
  translations: [InputNumberRangeTranslation]
}

input InputNumberRangeSalesChannel {
  __typename: String
  id: ID
  numberRangeId: ID
  salesChannelId: ID
  numberRangeTypeId: ID
  numberRange: InputNumberRange
  salesChannel: InputSalesChannel
  numberRangeType: InputNumberRangeType
}

input InputNumberRangeState {
  __typename: String
  id: ID
  numberRangeId: ID
  lastValue: Int
  numberRange: InputNumberRange
}

input InputNumberRangeTranslation {
  __typename: String
  name: String
  description: String
  numberRangeId: ID
  languageId: ID
  numberRange: InputNumberRange
  language: InputLanguage
}

input InputNumberRangeType {
  __typename: String
  id: ID
  technicalName: String
  typeName: String
  global: Boolean
  customFields: String
  numberRanges: [InputNumberRange]
  numberRangeSalesChannels: [InputNumberRangeSalesChannel]
  translations: [InputNumberRangeTypeTranslation]
}

input InputNumberRangeTypeTranslation {
  __typename: String
  typeName: String
  numberRangeTypeId: ID
  languageId: ID
  numberRangeType: InputNumberRangeType
  language: InputLanguage
}

input InputOrder {
  __typename: String
  id: ID
  versionId: ID
  autoIncrement: Int
  orderNumber: String
  billingAddressId: ID
  billingAddressVersionId: ID
  currencyId: ID
  languageId: ID
  salesChannelId: ID
  orderDate: Date
  amountTotal: Float
  amountNet: Float
  positionPrice: Float
  taxStatus: String
  shippingTotal: Float
  currencyFactor: Float
  deepLinkCode: String
  affiliateCode: String
  campaignCode: String
  customerComment: String
  stateId: ID
  stateMachineState: InputStateMachineState
  createdById: ID
  updatedById: ID
  orderCustomer: InputOrderCustomer
  currency: InputCurrency
  language: InputLanguage
  salesChannel: InputSalesChannel
  addresses: [InputOrderAddress]
  billingAddress: InputOrderAddress
  deliveries: [InputOrderDelivery]
  lineItems: [InputOrderLineItem]
  transactions: [InputOrderTransaction]
  documents: [InputDocument]
  tags: [InputOrderTag]
  createdBy: InputUser
  updatedBy: InputUser
}

input InputOrderAddress {
  __typename: String
  id: ID
  versionId: ID
  countryId: ID
  countryStateId: ID
  orderId: ID
  orderVersionId: ID
  salutationId: ID
  firstName: String
  lastName: String
  street: String
  zipcode: String
  city: String
  company: String
  department: String
  title: String
  vatId: String
  phoneNumber: String
  additionalAddressLine1: String
  additionalAddressLine2: String
  country: InputCountry
  countryState: InputCountryState
  order: InputOrder
  orderDeliveries: [InputOrderDelivery]
  salutation: InputSalutation
}

input InputOrderCustomer {
  __typename: String
  id: ID
  versionId: ID
  customerId: ID
  orderId: ID
  orderVersionId: ID
  email: String
  salutationId: ID
  firstName: String
  lastName: String
  company: String
  title: String
  customerNumber: String
  order: InputOrder
  customer: InputCustomer
  salutation: InputSalutation
}

input InputOrderDelivery {
  __typename: String
  id: ID
  versionId: ID
  orderId: ID
  orderVersionId: ID
  shippingOrderAddressId: ID
  shippingOrderAddressVersionId: ID
  shippingMethodId: ID
  stateId: ID
  stateMachineState: InputStateMachineState
  order: InputOrder
  shippingOrderAddress: InputOrderAddress
  shippingMethod: InputShippingMethod
  positions: [InputOrderDeliveryPosition]
}

input InputOrderDeliveryPosition {
  __typename: String
  id: ID
  versionId: ID
  orderDeliveryId: ID
  orderDeliveryVersionId: ID
  orderLineItemId: ID
  orderLineItemVersionId: ID
  unitPrice: Float
  totalPrice: Float
  quantity: Int
  orderDelivery: InputOrderDelivery
  orderLineItem: InputOrderLineItem
}

input InputOrderLineItem {
  __typename: String
  id: ID
  versionId: ID
  orderId: ID
  orderVersionId: ID
  productId: ID
  productVersionId: ID
  parentId: ID
  parentVersionId: ID
  coverId: ID
  cover: InputMedia
  identifier: String
  referencedId: String
  quantity: Int
  label: String
  good: Boolean
  removable: Boolean
  stackable: Boolean
  position: Int
  unitPrice: Float
  totalPrice: Float
  description: String
  type: String
  order: InputOrder
  product: InputProduct
  orderDeliveryPositions: [InputOrderDeliveryPosition]
  parent: InputOrderLineItem
  children: [InputOrderLineItem]
}

input InputOrderTag {
  __typename: String
  orderId: ID
  orderVersionId: ID
  tagId: ID
  order: InputOrder
  tag: InputTag
}

input InputOrderTransaction {
  __typename: String
  id: ID
  versionId: ID
  orderId: ID
  orderVersionId: ID
  paymentMethodId: ID
  stateId: ID
  stateMachineState: InputStateMachineState
  order: InputOrder
  paymentMethod: InputPaymentMethod
}

input InputPaymentMethod {
  __typename: String
  id: ID
  pluginId: ID
  handlerIdentifier: String
  name: String
  distinguishableName: String
  description: String
  position: Int
  active: Boolean
  afterOrderEnabled: Boolean
  customFields: String
  availabilityRuleId: ID
  mediaId: ID
  formattedHandlerIdentifier: String
  synchronous: Boolean
  asynchronous: Boolean
  prepared: Boolean
  translations: [InputPaymentMethodTranslation]
  media: InputMedia
  availabilityRule: InputRule
  salesChannelDefaultAssignments: [InputSalesChannel]
  plugin: InputPlugin
  customers: [InputCustomer]
  orderTransactions: [InputOrderTransaction]
  salesChannels: [InputSalesChannelPaymentMethod]
  appPaymentMethod: InputAppPaymentMethod
}

input InputPaymentMethodTranslation {
  __typename: String
  name: String
  distinguishableName: String
  description: String
  paymentMethodId: ID
  languageId: ID
  paymentMethod: InputPaymentMethod
  language: InputLanguage
}

input InputPlugin {
  __typename: String
  id: ID
  baseClass: String
  name: String
  composerName: String
  active: Boolean
  managedByComposer: Boolean
  path: String
  author: String
  copyright: String
  license: String
  version: String
  upgradeVersion: String
  icon: String
  label: String
  description: String
  manufacturerLink: String
  supportLink: String
  changelog: String
  customFields: String
  translations: [InputPluginTranslation]
  paymentMethods: [InputPaymentMethod]
}

input InputPluginTranslation {
  __typename: String
  label: String
  description: String
  manufacturerLink: String
  supportLink: String
  pluginId: ID
  languageId: ID
  plugin: InputPlugin
  language: InputLanguage
}

input InputProduct {
  __typename: String
  id: ID
  versionId: ID
  parentId: ID
  parentVersionId: ID
  manufacturerId: ID
  productManufacturerVersionId: ID
  unitId: ID
  taxId: ID
  coverId: ID
  productMediaVersionId: ID
  deliveryTimeId: ID
  featureSetId: ID
  canonicalProductId: ID
  cmsPageId: ID
  cmsPageVersionId: ID
  productNumber: String
  stock: Int
  restockTime: Int
  autoIncrement: Int
  active: Boolean
  availableStock: Int
  available: Boolean
  isCloseout: Boolean
  displayGroup: String
  mainVariantId: ID
  manufacturerNumber: String
  ean: String
  purchaseSteps: Int
  maxPurchase: Int
  minPurchase: Int
  purchaseUnit: Float
  referenceUnit: Float
  shippingFree: Boolean
  markAsTopseller: Boolean
  weight: Float
  width: Float
  height: Float
  length: Float
  ratingAverage: Float
  childCount: Int
  customFieldSetSelectionActive: Boolean
  sales: Int
  metaDescription: String
  name: String
  keywords: String
  description: String
  metaTitle: String
  packUnit: String
  packUnitPlural: String
  customFields: String
  slotConfig: String
  customSearchKeywords: String
  parent: InputProduct
  children: [InputProduct]
  deliveryTime: InputDeliveryTime
  tax: InputTax
  manufacturer: InputProductManufacturer
  unit: InputUnit
  cover: InputProductMedia
  featureSet: InputProductFeatureSet
  cmsPage: InputCmsPage
  canonicalProduct: InputProduct
  prices: [InputProductPrice]
  media: [InputProductMedia]
  crossSellings: [InputProductCrossSelling]
  crossSellingAssignedProducts: [InputProductCrossSellingAssignedProducts]
  configuratorSettings: [InputProductConfiguratorSetting]
  visibilities: [InputProductVisibility]
  searchKeywords: [InputProductSearchKeyword]
  productReviews: [InputProductReview]
  mainCategories: [InputMainCategory]
  seoUrls: [InputSeoUrl]
  orderLineItems: [InputOrderLineItem]
  wishlists: [InputCustomerWishlistProduct]
  options: [InputProductOption]
  properties: [InputProductProperty]
  categories: [InputProductCategory]
  streams: [InputProductStreamMapping]
  categoriesRo: [InputProductCategoryTree]
  tags: [InputProductTag]
  customFieldSets: [InputProductCustomFieldSet]
  translations: [InputProductTranslation]
}

input InputProductCategory {
  __typename: String
  productId: ID
  productVersionId: ID
  categoryId: ID
  categoryVersionId: ID
  product: InputProduct
  category: InputCategory
}

input InputProductCategoryTree {
  __typename: String
  productId: ID
  productVersionId: ID
  categoryId: ID
  categoryVersionId: ID
  product: InputProduct
  category: InputCategory
}

input InputProductConfiguratorSetting {
  __typename: String
  id: ID
  versionId: ID
  productId: ID
  productVersionId: ID
  mediaId: ID
  optionId: ID
  position: Int
  product: InputProduct
  media: InputMedia
  option: InputPropertyGroupOption
}

input InputProductCrossSelling {
  __typename: String
  id: ID
  name: String
  position: Int
  sortBy: String
  sortDirection: String
  type: String
  active: Boolean
  limit: Int
  productId: ID
  productVersionId: ID
  product: InputProduct
  productStreamId: ID
  productStream: InputProductStream
  assignedProducts: [InputProductCrossSellingAssignedProducts]
  translations: [InputProductCrossSellingTranslation]
}

input InputProductCrossSellingAssignedProducts {
  __typename: String
  id: ID
  crossSellingId: ID
  productId: ID
  productVersionId: ID
  product: InputProduct
  crossSelling: InputProductCrossSelling
  position: Int
}

input InputProductCrossSellingTranslation {
  __typename: String
  name: String
  productCrossSellingId: ID
  languageId: ID
  productCrossSelling: InputProductCrossSelling
  language: InputLanguage
}

input InputProductCustomFieldSet {
  __typename: String
  productId: ID
  customFieldSetId: ID
  productVersionId: ID
  product: InputProduct
  customFieldSet: InputCustomFieldSet
}

input InputProductExport {
  __typename: String
  id: ID
  productStreamId: ID
  storefrontSalesChannelId: ID
  salesChannelId: ID
  salesChannelDomainId: ID
  currencyId: ID
  fileName: String
  accessKey: String
  encoding: String
  fileFormat: String
  includeVariants: Boolean
  generateByCronjob: Boolean
  interval: Int
  headerTemplate: String
  bodyTemplate: String
  footerTemplate: String
  pausedSchedule: Boolean
  productStream: InputProductStream
  storefrontSalesChannel: InputSalesChannel
  salesChannel: InputSalesChannel
  salesChannelDomain: InputSalesChannelDomain
  currency: InputCurrency
}

input InputProductFeatureSet {
  __typename: String
  id: ID
  name: String
  description: String
  products: [InputProduct]
  translations: [InputProductFeatureSetTranslation]
}

input InputProductFeatureSetTranslation {
  __typename: String
  name: String
  description: String
  productFeatureSetId: ID
  languageId: ID
  productFeatureSet: InputProductFeatureSet
  language: InputLanguage
}

input InputProductKeywordDictionary {
  __typename: String
  id: ID
  languageId: ID
  keyword: String
  reversed: String
  language: InputLanguage
}

input InputProductManufacturer {
  __typename: String
  id: ID
  versionId: ID
  mediaId: ID
  link: String
  name: String
  description: String
  customFields: String
  media: InputMedia
  products: [InputProduct]
  translations: [InputProductManufacturerTranslation]
}

input InputProductManufacturerTranslation {
  __typename: String
  name: String
  description: String
  productManufacturerId: ID
  languageId: ID
  productManufacturer: InputProductManufacturer
  language: InputLanguage
  productManufacturerVersionId: ID
}

input InputProductMedia {
  __typename: String
  id: ID
  versionId: ID
  productId: ID
  productVersionId: ID
  mediaId: ID
  position: Int
  product: InputProduct
  media: InputMedia
}

input InputProductOption {
  __typename: String
  productId: ID
  productVersionId: ID
  optionId: ID
  product: InputProduct
  option: InputPropertyGroupOption
}

input InputProductPrice {
  __typename: String
  id: ID
  versionId: ID
  productId: ID
  productVersionId: ID
  ruleId: ID
  quantityStart: Int
  quantityEnd: Int
  product: InputProduct
  rule: InputRule
}

input InputProductProperty {
  __typename: String
  productId: ID
  productVersionId: ID
  optionId: ID
  product: InputProduct
  option: InputPropertyGroupOption
}

input InputProductReview {
  __typename: String
  id: ID
  productId: ID
  productVersionId: ID
  customerId: ID
  salesChannelId: ID
  languageId: ID
  externalUser: String
  externalEmail: String
  title: String
  content: String
  points: Float
  status: Boolean
  comment: String
  product: InputProduct
  customer: InputCustomer
  salesChannel: InputSalesChannel
  language: InputLanguage
}

input InputProductSearchConfig {
  __typename: String
  id: ID
  languageId: ID
  andLogic: Boolean
  minSearchLength: Int
  language: InputLanguage
  configFields: [InputProductSearchConfigField]
}

input InputProductSearchConfigField {
  __typename: String
  id: ID
  searchConfigId: ID
  customFieldId: ID
  field: String
  tokenize: Boolean
  searchable: Boolean
  ranking: Int
  searchConfig: InputProductSearchConfig
  customField: InputCustomField
}

input InputProductSearchKeyword {
  __typename: String
  id: ID
  versionId: ID
  languageId: ID
  productId: ID
  productVersionId: ID
  keyword: String
  ranking: Float
  product: InputProduct
  language: InputLanguage
}

input InputProductSorting {
  __typename: String
  id: ID
  locked: Boolean
  key: String
  priority: Int
  active: Boolean
  label: String
  translations: [InputProductSortingTranslation]
}

input InputProductSortingTranslation {
  __typename: String
  label: String
  productSortingId: ID
  languageId: ID
  productSorting: InputProductSorting
  language: InputLanguage
}

input InputProductStream {
  __typename: String
  id: ID
  invalid: Boolean
  name: String
  description: String
  customFields: String
  translations: [InputProductStreamTranslation]
  filters: [InputProductStreamFilter]
  productCrossSellings: [InputProductCrossSelling]
  productExports: [InputProductExport]
  categories: [InputCategory]
}

input InputProductStreamFilter {
  __typename: String
  id: ID
  productStreamId: ID
  parentId: ID
  type: String
  field: String
  operator: String
  value: String
  position: Int
  productStream: InputProductStream
  parent: InputProductStreamFilter
  queries: [InputProductStreamFilter]
}

input InputProductStreamMapping {
  __typename: String
  productId: ID
  productVersionId: ID
  productStreamId: ID
  product: InputProduct
  productStream: InputProductStream
}

input InputProductStreamTranslation {
  __typename: String
  name: String
  description: String
  productStreamId: ID
  languageId: ID
  productStream: InputProductStream
  language: InputLanguage
}

input InputProductTag {
  __typename: String
  productId: ID
  productVersionId: ID
  tagId: ID
  product: InputProduct
  tag: InputTag
}

input InputProductTranslation {
  __typename: String
  metaDescription: String
  name: String
  keywords: String
  description: String
  metaTitle: String
  packUnit: String
  packUnitPlural: String
  productId: ID
  languageId: ID
  product: InputProduct
  language: InputLanguage
  productVersionId: ID
}

input InputProductVisibility {
  __typename: String
  id: ID
  productId: ID
  productVersionId: ID
  salesChannelId: ID
  visibility: Int
  salesChannel: InputSalesChannel
  product: InputProduct
}

input InputPromotion {
  __typename: String
  id: ID
  name: String
  active: Boolean
  maxRedemptionsGlobal: Int
  maxRedemptionsPerCustomer: Int
  exclusive: Boolean
  code: String
  useCodes: Boolean
  useIndividualCodes: Boolean
  individualCodePattern: String
  useSetGroups: Boolean
  customerRestriction: Boolean
  preventCombination: Boolean
  orderCount: Int
  setgroups: [InputPromotionSetgroup]
  salesChannels: [InputPromotionSalesChannel]
  discounts: [InputPromotionDiscount]
  individualCodes: [InputPromotionIndividualCode]
  personaRules: [InputPromotionPersonaRule]
  personaCustomers: [InputPromotionPersonaCustomer]
  orderRules: [InputPromotionOrderRule]
  cartRules: [InputPromotionCartRule]
  translations: [InputPromotionTranslation]
  customFields: String
}

input InputPromotionCartRule {
  __typename: String
  promotionId: ID
  ruleId: ID
  promotion: InputPromotion
  rule: InputRule
}

input InputPromotionDiscount {
  __typename: String
  id: ID
  promotionId: ID
  scope: String
  type: String
  value: Float
  considerAdvancedRules: Boolean
  maxValue: Float
  sorterKey: String
  applierKey: String
  usageKey: String
  pickerKey: String
  promotion: InputPromotion
  discountRules: [InputPromotionDiscountRule]
  promotionDiscountPrices: [InputPromotionDiscountPrices]
}

input InputPromotionDiscountPrices {
  __typename: String
  id: ID
  discountId: ID
  currencyId: ID
  price: Float
  promotionDiscount: InputPromotionDiscount
  currency: InputCurrency
}

input InputPromotionDiscountRule {
  __typename: String
  discountId: ID
  ruleId: ID
  discount: InputPromotionDiscount
  rule: InputRule
}

input InputPromotionIndividualCode {
  __typename: String
  id: ID
  promotionId: ID
  code: String
  promotion: InputPromotion
}

input InputPromotionOrderRule {
  __typename: String
  promotionId: ID
  ruleId: ID
  promotion: InputPromotion
  rule: InputRule
}

input InputPromotionPersonaCustomer {
  __typename: String
  promotionId: ID
  customerId: ID
  promotion: InputPromotion
  customer: InputCustomer
}

input InputPromotionPersonaRule {
  __typename: String
  promotionId: ID
  ruleId: ID
  promotion: InputPromotion
  rule: InputRule
}

input InputPromotionSalesChannel {
  __typename: String
  id: ID
  promotionId: ID
  salesChannelId: ID
  priority: Int
  promotion: InputPromotion
  salesChannel: InputSalesChannel
}

input InputPromotionSetgroup {
  __typename: String
  id: ID
  promotionId: ID
  packagerKey: String
  sorterKey: String
  value: Float
  promotion: InputPromotion
  setGroupRules: [InputPromotionSetgroupRule]
}

input InputPromotionSetgroupRule {
  __typename: String
  setgroupId: ID
  ruleId: ID
  setgroup: InputPromotionSetgroup
  rule: InputRule
}

input InputPromotionTranslation {
  __typename: String
  name: String
  promotionId: ID
  languageId: ID
  promotion: InputPromotion
  language: InputLanguage
}

input InputPropertyGroup {
  __typename: String
  id: ID
  name: String
  description: String
  displayType: String
  sortingType: String
  filterable: Boolean
  visibleOnProductDetailPage: Boolean
  position: String
  customFields: String
  options: [InputPropertyGroupOption]
  translations: [InputPropertyGroupTranslation]
}

input InputPropertyGroupOption {
  __typename: String
  id: ID
  groupId: ID
  name: String
  position: String
  colorHexCode: String
  mediaId: ID
  customFields: String
  media: InputMedia
  group: InputPropertyGroup
  translations: [InputPropertyGroupOptionTranslation]
  productConfiguratorSettings: [InputProductConfiguratorSetting]
  productProperties: [InputProductProperty]
  productOptions: [InputProductOption]
}

input InputPropertyGroupOptionTranslation {
  __typename: String
  name: String
  position: Int
  propertyGroupOptionId: ID
  languageId: ID
  propertyGroupOption: InputPropertyGroupOption
  language: InputLanguage
}

input InputPropertyGroupTranslation {
  __typename: String
  name: String
  description: String
  position: Int
  propertyGroupId: ID
  languageId: ID
  propertyGroup: InputPropertyGroup
  language: InputLanguage
}

input InputRoot {
  __typename: String
  id: ID
  versionId: ID
  name: String
  sub: InputRootSub
  subCascade: InputRootSubCascade
}

input InputRootSub {
  __typename: String
  id: ID
  versionId: ID
  name: String
  stock: Int
  rootId: ID
  rootVersionId: ID
  root: InputRoot
  manies: [InputRootSubMany]
}

input InputRootSubCascade {
  __typename: String
  id: ID
  versionId: ID
  name: String
  stock: Int
  rootId: ID
  rootVersionId: ID
  root: InputRoot
}

input InputRootSubMany {
  __typename: String
  id: ID
  versionId: ID
  name: String
  subId: ID
  rootSubVersionId: ID
  sub: InputRootSub
}

input InputRule {
  __typename: String
  id: ID
  name: String
  priority: Int
  description: String
  invalid: Boolean
  conditions: [InputRuleCondition]
  productPrices: [InputProductPrice]
  shippingMethodPrices: [InputShippingMethodPrice]
  shippingMethodPriceCalculations: [InputShippingMethodPrice]
  shippingMethods: [InputShippingMethod]
  paymentMethods: [InputPaymentMethod]
  personaPromotions: [InputPromotionPersonaRule]
  flowSequences: [InputFlowSequence]
  orderPromotions: [InputPromotionOrderRule]
  cartPromotions: [InputPromotionCartRule]
  promotionDiscounts: [InputPromotionDiscountRule]
  promotionSetGroups: [InputPromotionSetgroupRule]
  eventActions: [InputEventActionRule]
}

input InputRuleCondition {
  __typename: String
  id: ID
  type: String
  ruleId: ID
  parentId: ID
  position: Int
  rule: InputRule
  parent: InputRuleCondition
  children: [InputRuleCondition]
}

input InputSalesChannel {
  __typename: String
  id: ID
  typeId: ID
  languageId: ID
  customerGroupId: ID
  currencyId: ID
  paymentMethodId: ID
  shippingMethodId: ID
  countryId: ID
  analyticsId: ID
  navigationCategoryId: ID
  navigationCategoryVersionId: ID
  navigationCategoryDepth: Int
  footerCategoryId: ID
  footerCategoryVersionId: ID
  serviceCategoryId: ID
  serviceCategoryVersionId: ID
  mailHeaderFooterId: ID
  hreflangDefaultDomainId: ID
  name: String
  shortName: String
  taxCalculationType: String
  accessKey: String
  active: Boolean
  hreflangActive: Boolean
  maintenance: Boolean
  customFields: String
  translations: [InputSalesChannelTranslation]
  currencies: [InputSalesChannelCurrency]
  languages: [InputSalesChannelLanguage]
  countries: [InputSalesChannelCountry]
  paymentMethods: [InputSalesChannelPaymentMethod]
  shippingMethods: [InputSalesChannelShippingMethod]
  type: InputSalesChannelType
  language: InputLanguage
  customerGroup: InputCustomerGroup
  currency: InputCurrency
  paymentMethod: InputPaymentMethod
  shippingMethod: InputShippingMethod
  country: InputCountry
  orders: [InputOrder]
  customers: [InputCustomer]
  homeCmsPageId: ID
  homeCmsPageVersionId: ID
  homeCmsPage: InputCmsPage
  homeSlotConfig: String
  homeEnabled: String
  homeName: String
  homeMetaTitle: String
  homeMetaDescription: String
  homeKeywords: String
  domains: [InputSalesChannelDomain]
  systemConfigs: [InputSystemConfig]
  navigationCategory: InputCategory
  footerCategory: InputCategory
  serviceCategory: InputCategory
  productVisibilities: [InputProductVisibility]
  hreflangDefaultDomain: InputSalesChannelDomain
  mailHeaderFooter: InputMailHeaderFooter
  newsletterRecipients: [InputNewsletterRecipient]
  numberRangeSalesChannels: [InputNumberRangeSalesChannel]
  promotionSalesChannels: [InputPromotionSalesChannel]
  documentBaseConfigSalesChannels: [InputDocumentBaseConfigSalesChannel]
  productReviews: [InputProductReview]
  seoUrls: [InputSeoUrl]
  seoUrlTemplates: [InputSeoUrlTemplate]
  mainCategories: [InputMainCategory]
  productExports: [InputProductExport]
  analytics: InputSalesChannelAnalytics
  customerGroupsRegistrations: [InputCustomerGroupRegistrationSalesChannels]
  eventActions: [InputEventActionSalesChannel]
  landingPages: [InputLandingPageSalesChannel]
  boundCustomers: [InputCustomer]
  wishlists: [InputCustomerWishlist]
  themes: [InputThemeSalesChannel]
}

input InputSalesChannelAnalytics {
  __typename: String
  id: ID
  trackingId: String
  active: Boolean
  trackOrders: Boolean
  anonymizeIp: Boolean
  salesChannel: InputSalesChannel
}

input InputSalesChannelCountry {
  __typename: String
  salesChannelId: ID
  countryId: ID
  salesChannel: InputSalesChannel
  country: InputCountry
}

input InputSalesChannelCurrency {
  __typename: String
  salesChannelId: ID
  currencyId: ID
  salesChannel: InputSalesChannel
  currency: InputCurrency
}

input InputSalesChannelDomain {
  __typename: String
  id: ID
  url: String
  salesChannelId: ID
  languageId: ID
  currencyId: ID
  snippetSetId: ID
  salesChannel: InputSalesChannel
  language: InputLanguage
  currency: InputCurrency
  snippetSet: InputSnippetSet
  salesChannelDefaultHreflang: InputSalesChannel
  productExports: [InputProductExport]
  hreflangUseOnlyLocale: Boolean
}

input InputSalesChannelLanguage {
  __typename: String
  salesChannelId: ID
  languageId: ID
  salesChannel: InputSalesChannel
  language: InputLanguage
}

input InputSalesChannelPaymentMethod {
  __typename: String
  salesChannelId: ID
  paymentMethodId: ID
  salesChannel: InputSalesChannel
  paymentMethod: InputPaymentMethod
}

input InputSalesChannelShippingMethod {
  __typename: String
  salesChannelId: ID
  shippingMethodId: ID
  salesChannel: InputSalesChannel
  shippingMethod: InputShippingMethod
}

input InputSalesChannelTranslation {
  __typename: String
  name: String
  homeEnabled: Boolean
  homeName: String
  homeMetaTitle: String
  homeMetaDescription: String
  homeKeywords: String
  salesChannelId: ID
  languageId: ID
  salesChannel: InputSalesChannel
  language: InputLanguage
}

input InputSalesChannelType {
  __typename: String
  id: ID
  coverUrl: String
  iconName: String
  name: String
  manufacturer: String
  description: String
  descriptionLong: String
  customFields: String
  translations: [InputSalesChannelTypeTranslation]
  salesChannels: [InputSalesChannel]
}

input InputSalesChannelTypeTranslation {
  __typename: String
  name: String
  manufacturer: String
  description: String
  descriptionLong: String
  salesChannelTypeId: ID
  languageId: ID
  salesChannelType: InputSalesChannelType
  language: InputLanguage
}

input InputSalutation {
  __typename: String
  id: ID
  salutationKey: String
  displayName: String
  letterName: String
  customFields: String
  translations: [InputSalutationTranslation]
  customers: [InputCustomer]
  customerAddresses: [InputCustomerAddress]
  orderCustomers: [InputOrderCustomer]
  orderAddresses: [InputOrderAddress]
  newsletterRecipients: [InputNewsletterRecipient]
}

input InputSalutationTranslation {
  __typename: String
  displayName: String
  letterName: String
  salutationId: ID
  languageId: ID
  salutation: InputSalutation
  language: InputLanguage
}

input InputScheduledTask {
  __typename: String
  id: ID
  name: String
  scheduledTaskClass: String
  runInterval: Int
  status: String
  deadMessages: [InputDeadMessage]
}

input InputScript {
  __typename: String
  id: ID
  script: String
  hook: String
  name: String
  active: Boolean
  appId: ID
  app: InputApp
}

input InputSeoUrl {
  __typename: String
  id: ID
  salesChannelId: ID
  languageId: ID
  foreignKey: ID
  routeName: String
  pathInfo: String
  seoPathInfo: String
  isCanonical: Boolean
  isModified: Boolean
  isDeleted: Boolean
  url: String
  language: InputLanguage
  salesChannel: InputSalesChannel
}

input InputSeoUrlTemplate {
  __typename: String
  id: ID
  salesChannelId: ID
  entityName: String
  routeName: String
  template: String
  isValid: Boolean
  salesChannel: InputSalesChannel
}

input InputShippingMethod {
  __typename: String
  id: ID
  name: String
  active: Boolean
  customFields: String
  availabilityRuleId: ID
  mediaId: ID
  deliveryTimeId: ID
  taxType: String
  taxId: ID
  deliveryTime: InputDeliveryTime
  description: String
  trackingUrl: String
  translations: [InputShippingMethodTranslation]
  availabilityRule: InputRule
  prices: [InputShippingMethodPrice]
  media: InputMedia
  tags: [InputShippingMethodTag]
  orderDeliveries: [InputOrderDelivery]
  salesChannels: [InputSalesChannelShippingMethod]
  salesChannelDefaultAssignments: [InputSalesChannel]
  tax: InputTax
}

input InputShippingMethodPrice {
  __typename: String
  id: ID
  shippingMethodId: ID
  ruleId: ID
  calculation: Int
  calculationRuleId: ID
  quantityStart: Float
  quantityEnd: Float
  shippingMethod: InputShippingMethod
  rule: InputRule
  calculationRule: InputRule
}

input InputShippingMethodTag {
  __typename: String
  shippingMethodId: ID
  tagId: ID
  shippingMethod: InputShippingMethod
  tag: InputTag
}

input InputShippingMethodTranslation {
  __typename: String
  name: String
  description: String
  trackingUrl: String
  shippingMethodId: ID
  languageId: ID
  shippingMethod: InputShippingMethod
  language: InputLanguage
}

input InputSnippet {
  __typename: String
  id: ID
  setId: ID
  translationKey: String
  value: String
  author: String
  set: InputSnippetSet
}

input InputSnippetSet {
  __typename: String
  id: ID
  name: String
  baseFile: String
  iso: String
  snippets: [InputSnippet]
  salesChannelDomains: [InputSalesChannelDomain]
}

input InputStateMachine {
  __typename: String
  id: ID
  technicalName: String
  name: String
  customFields: String
  states: [InputStateMachineState]
  transitions: [InputStateMachineTransition]
  initialStateId: ID
  translations: [InputStateMachineTranslation]
  historyEntries: [InputStateMachineHistory]
}

input InputStateMachineHistory {
  __typename: String
  id: ID
  stateMachineId: ID
  stateMachine: InputStateMachine
  entityName: String
  fromStateId: ID
  fromStateMachineState: InputStateMachineState
  toStateId: ID
  toStateMachineState: InputStateMachineState
  transitionActionName: String
  userId: ID
  user: InputUser
}

input InputStateMachineState {
  __typename: String
  id: ID
  technicalName: String
  name: String
  stateMachineId: ID
  stateMachine: InputStateMachine
  fromStateMachineTransitions: [InputStateMachineTransition]
  toStateMachineTransitions: [InputStateMachineTransition]
  translations: [InputStateMachineStateTranslation]
  orderTransactions: [InputOrderTransaction]
  orderDeliveries: [InputOrderDelivery]
  orders: [InputOrder]
  customFields: String
  toStateMachineHistoryEntries: [InputStateMachineHistory]
  fromStateMachineHistoryEntries: [InputStateMachineHistory]
}

input InputStateMachineStateTranslation {
  __typename: String
  name: String
  stateMachineStateId: ID
  languageId: ID
  stateMachineState: InputStateMachineState
  language: InputLanguage
}

input InputStateMachineTransition {
  __typename: String
  id: ID
  actionName: String
  stateMachineId: ID
  stateMachine: InputStateMachine
  fromStateId: ID
  fromStateMachineState: InputStateMachineState
  toStateId: ID
  toStateMachineState: InputStateMachineState
}

input InputStateMachineTranslation {
  __typename: String
  name: String
  stateMachineId: ID
  languageId: ID
  stateMachine: InputStateMachine
  language: InputLanguage
}

input InputSystemConfig {
  __typename: String
  id: ID
  configurationKey: String
  salesChannelId: ID
  salesChannel: InputSalesChannel
}

input InputTag {
  __typename: String
  id: ID
  name: String
  products: [InputProductTag]
  media: [InputMediaTag]
  categories: [InputCategoryTag]
  customers: [InputCustomerTag]
  orders: [InputOrderTag]
  shippingMethods: [InputShippingMethodTag]
  newsletterRecipients: [InputNewsletterRecipientTag]
  landingPages: [InputLandingPageTag]
}

input InputTax {
  __typename: String
  id: ID
  taxRate: Float
  name: String
  position: Int
  products: [InputProduct]
  rules: [InputTaxRule]
  shippingMethods: [InputShippingMethod]
}

input InputTaxRule {
  __typename: String
  id: ID
  taxRuleTypeId: ID
  countryId: ID
  taxRate: Float
  taxId: ID
  type: InputTaxRuleType
  country: InputCountry
  tax: InputTax
}

input InputTaxRuleType {
  __typename: String
  id: ID
  technicalName: String
  position: Int
  typeName: String
  rules: [InputTaxRule]
  translations: [InputTaxRuleTypeTranslation]
}

input InputTaxRuleTypeTranslation {
  __typename: String
  typeName: String
  taxRuleTypeId: ID
  languageId: ID
  taxRuleType: InputTaxRuleType
  language: InputLanguage
}

input InputTestLock {
  __typename: String
  id: ID
  description: String
  name: String
  translations: [InputTestLockTranslation]
  locked: Boolean
}

input InputTestLockTranslation {
  __typename: String
  name: String
  testLockId: ID
  languageId: ID
  testLock: InputTestLock
  language: InputLanguage
}

input InputTestNullable {
  __typename: String
  id: ID
  protected: String
  systemProtected: String
  relationId: ID
  relation: InputTestRelation
  relations: [InputTestNullableReference]
  systemRelationId: ID
  systemRelation: InputTestRelation
  systemRelations: [InputTestNullableReference]
}

input InputTestNullableReference {
  __typename: String
  wpId: ID
  relationId: ID
  wp: InputTestNullable
  relation: InputTestRelation
}

input InputTestRelation {
  __typename: String
  id: ID
  wp: [InputTestNullable]
  wps: [InputTestNullableReference]
  systemWp: [InputTestNullable]
  systemWps: [InputTestNullableReference]
}

input InputTheme {
  __typename: String
  id: ID
  technicalName: String
  name: String
  author: String
  description: String
  labels: String
  helpTexts: String
  customFields: String
  previewMediaId: ID
  parentThemeId: ID
  active: Boolean
  translations: [InputThemeTranslation]
  salesChannels: [InputThemeSalesChannel]
  media: [InputThemeMedia]
  previewMedia: InputMedia
  childThemes: [InputTheme]
}

input InputThemeMedia {
  __typename: String
  themeId: ID
  mediaId: ID
  theme: InputTheme
  media: InputMedia
}

input InputThemeSalesChannel {
  __typename: String
  salesChannelId: ID
  themeId: ID
  theme: InputTheme
  salesChannel: InputSalesChannel
}

input InputThemeTranslation {
  __typename: String
  description: String
  themeId: ID
  languageId: ID
  theme: InputTheme
  language: InputLanguage
}

input InputUnit {
  __typename: String
  id: ID
  shortCode: String
  name: String
  customFields: String
  products: [InputProduct]
  translations: [InputUnitTranslation]
}

input InputUnitTranslation {
  __typename: String
  shortCode: String
  name: String
  unitId: ID
  languageId: ID
  unit: InputUnit
  language: InputLanguage
}

input InputUser {
  __typename: String
  id: ID
  localeId: ID
  avatarId: ID
  username: String
  firstName: String
  lastName: String
  title: String
  email: String
  active: Boolean
  admin: Boolean
  timeZone: String
  locale: InputLocale
  avatarMedia: InputMedia
  media: [InputMedia]
  accessKeys: [InputUserAccessKey]
  configs: [InputUserConfig]
  stateMachineHistoryEntries: [InputStateMachineHistory]
  importExportLogEntries: [InputImportExportLog]
  aclRoles: [InputAclUserRole]
  recoveryUser: InputUserRecovery
  storeToken: String
  createdOrders: [InputOrder]
  updatedOrders: [InputOrder]
}

input InputUserAccessKey {
  __typename: String
  id: ID
  userId: ID
  accessKey: String
  writeAccess: Boolean
  user: InputUser
}

input InputUserConfig {
  __typename: String
  id: ID
  userId: ID
  key: String
  user: InputUser
}

input InputUserRecovery {
  __typename: String
  id: ID
  hash: String
  userId: ID
  user: InputUser
}

input InputVersion {
  __typename: String
  id: ID
  name: String
  commits: [InputVersionCommit]
}

input InputVersionCommit {
  __typename: String
  id: ID
  versionId: ID
  userId: ID
  integrationId: ID
  autoIncrement: Int
  isMerge: Boolean
  message: String
  data: [InputVersionCommitData]
  version: InputVersion
}

input InputVersionCommitData {
  __typename: String
  id: ID
  versionCommitId: ID
  commit: InputVersionCommit
  userId: ID
  integrationId: ID
  autoIncrement: Int
  entityName: String
  action: String
}

input InputWebhook {
  __typename: String
  id: ID
  name: String
  eventName: String
  url: String
  errorCount: Int
  active: Boolean
  appId: ID
  app: InputApp
}

type Integration {
  __typename: String
  id: ID!
  label: String!
  accessKey: String!
  writeAccess: Boolean
  admin: Boolean
  app: App
  aclRoles(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): IntegrationRoleConnection
}

type IntegrationAccessKey {
  accessKey: ID!
  secretAccessKey: ID!
}

"""The Result for a search that returns multiple Items"""
type IntegrationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [IntegrationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  label: String!
  accessKey: String!
  writeAccess: Boolean
  admin: Boolean
  app: App
  aclRoles(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): IntegrationRoleConnection
}

"""Contains the information for one Edge"""
type IntegrationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Integration

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type IntegrationRole {
  __typename: String
  integrationId: ID!
  aclRoleId: ID!
  integration: Integration
  role: AclRole
}

"""The Result for a search that returns multiple Items"""
type IntegrationRoleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [IntegrationRoleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  integrationId: ID!
  aclRoleId: ID!
  integration: Integration
  role: AclRole
}

"""Contains the information for one Edge"""
type IntegrationRoleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: IntegrationRole

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type KeyPair {
  accessKey: ID!
  secretAccessKey: ID!
}

type LandingPage {
  __typename: String
  id: ID!
  versionId: ID!
  active: Boolean
  name: String
  customFields: String
  slotConfig: String
  metaTitle: String
  metaDescription: String
  keywords: String
  url: String
  translations: LandingPageTranslationConnection!
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageTagConnection
  cmsPageId: ID
  cmsPage: CmsPage
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageSalesChannelConnection
  seoUrls(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
  cmsPageVersionId: ID!
}

"""The Result for a search that returns multiple Items"""
type LandingPageConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [LandingPageEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  active: Boolean
  name: String
  customFields: String
  slotConfig: String
  metaTitle: String
  metaDescription: String
  keywords: String
  url: String
  translations: LandingPageTranslationConnection!
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageTagConnection
  cmsPageId: ID
  cmsPage: CmsPage
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageSalesChannelConnection
  seoUrls(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
  cmsPageVersionId: ID!
}

"""Contains the information for one Edge"""
type LandingPageEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: LandingPage

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type LandingPageSalesChannel {
  __typename: String
  landingPageId: ID!
  landingPageVersionId: ID!
  salesChannelId: ID!
  landingPage: LandingPage
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type LandingPageSalesChannelConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [LandingPageSalesChannelEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  landingPageId: ID!
  landingPageVersionId: ID!
  salesChannelId: ID!
  landingPage: LandingPage
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type LandingPageSalesChannelEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: LandingPageSalesChannel

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type LandingPageTag {
  __typename: String
  landingPageId: ID!
  landingPageVersionId: ID!
  tagId: ID!
  landingPage: LandingPage
  tag: Tag
}

"""The Result for a search that returns multiple Items"""
type LandingPageTagConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [LandingPageTagEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  landingPageId: ID!
  landingPageVersionId: ID!
  tagId: ID!
  landingPage: LandingPage
  tag: Tag
}

"""Contains the information for one Edge"""
type LandingPageTagEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: LandingPageTag

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type LandingPageTranslation {
  __typename: String
  name: String!
  url: String!
  metaTitle: String
  metaDescription: String
  keywords: String
  landingPageId: ID!
  languageId: ID!
  landingPage: LandingPage
  language: Language
  landingPageVersionId: ID!
}

"""The Result for a search that returns multiple Items"""
type LandingPageTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [LandingPageTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  url: String!
  metaTitle: String
  metaDescription: String
  keywords: String
  landingPageId: ID!
  languageId: ID!
  landingPage: LandingPage
  language: Language
  landingPageVersionId: ID!
}

"""Contains the information for one Edge"""
type LandingPageTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: LandingPageTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Language {
  __typename: String
  id: ID!
  parentId: ID
  localeId: ID!
  translationCodeId: ID
  name: String!
  parent: Language
  locale: Locale
  translationCode: Locale
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LanguageConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelLanguageConnection
  salesChannelDefaultAssignments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  salesChannelDomains(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelDomainConnection
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  newsletterRecipients(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientConnection
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  categoryTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryTranslationConnection
  countryStateTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CountryStateTranslationConnection
  countryTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CountryTranslationConnection
  currencyTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CurrencyTranslationConnection
  customerGroupTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerGroupTranslationConnection
  localeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LocaleTranslationConnection
  mediaTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaTranslationConnection
  paymentMethodTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PaymentMethodTranslationConnection
  productManufacturerTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductManufacturerTranslationConnection
  productTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductTranslationConnection
  shippingMethodTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodTranslationConnection
  unitTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UnitTranslationConnection
  propertyGroupTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PropertyGroupTranslationConnection
  propertyGroupOptionTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PropertyGroupOptionTranslationConnection
  salesChannelTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelTranslationConnection
  salesChannelTypeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelTypeTranslationConnection
  salutationTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalutationTranslationConnection
  pluginTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PluginTranslationConnection
  productStreamTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductStreamTranslationConnection
  stateMachineTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineTranslationConnection
  stateMachineStateTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineStateTranslationConnection
  cmsPageTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsPageTranslationConnection
  cmsSlotTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSlotTranslationConnection
  mailTemplateTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateTranslationConnection
  mailHeaderFooterTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailHeaderFooterTranslationConnection
  documentTypeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentTypeTranslationConnection
  numberRangeTypeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeTypeTranslationConnection
  deliveryTimeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DeliveryTimeTranslationConnection
  productSearchKeywords(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchKeywordConnection
  productKeywordDictionaries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductKeywordDictionaryConnection
  mailTemplateTypeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateTypeTranslationConnection
  promotionTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionTranslationConnection
  numberRangeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeTranslationConnection
  productReviews(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductReviewConnection
  seoUrlTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
  taxRuleTypeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxRuleTypeTranslationConnection
  productCrossSellingTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingTranslationConnection
  importExportProfileTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ImportExportProfileTranslationConnection
  productSortingTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSortingTranslationConnection
  productFeatureSetTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductFeatureSetTranslationConnection
  appTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppTranslationConnection
  actionButtonTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppActionButtonTranslationConnection
  landingPageTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageTranslationConnection
  appCmsBlockTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppCmsBlockTranslationConnection
  productSearchConfig: ProductSearchConfig
}

"""The Result for a search that returns multiple Items"""
type LanguageConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [LanguageEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  parentId: ID
  localeId: ID!
  translationCodeId: ID
  name: String!
  parent: Language
  locale: Locale
  translationCode: Locale
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LanguageConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelLanguageConnection
  salesChannelDefaultAssignments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  salesChannelDomains(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelDomainConnection
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  newsletterRecipients(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientConnection
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  categoryTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryTranslationConnection
  countryStateTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CountryStateTranslationConnection
  countryTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CountryTranslationConnection
  currencyTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CurrencyTranslationConnection
  customerGroupTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerGroupTranslationConnection
  localeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LocaleTranslationConnection
  mediaTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaTranslationConnection
  paymentMethodTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PaymentMethodTranslationConnection
  productManufacturerTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductManufacturerTranslationConnection
  productTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductTranslationConnection
  shippingMethodTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodTranslationConnection
  unitTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UnitTranslationConnection
  propertyGroupTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PropertyGroupTranslationConnection
  propertyGroupOptionTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PropertyGroupOptionTranslationConnection
  salesChannelTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelTranslationConnection
  salesChannelTypeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelTypeTranslationConnection
  salutationTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalutationTranslationConnection
  pluginTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PluginTranslationConnection
  productStreamTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductStreamTranslationConnection
  stateMachineTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineTranslationConnection
  stateMachineStateTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineStateTranslationConnection
  cmsPageTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsPageTranslationConnection
  cmsSlotTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSlotTranslationConnection
  mailTemplateTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateTranslationConnection
  mailHeaderFooterTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailHeaderFooterTranslationConnection
  documentTypeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentTypeTranslationConnection
  numberRangeTypeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeTypeTranslationConnection
  deliveryTimeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DeliveryTimeTranslationConnection
  productSearchKeywords(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchKeywordConnection
  productKeywordDictionaries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductKeywordDictionaryConnection
  mailTemplateTypeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateTypeTranslationConnection
  promotionTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionTranslationConnection
  numberRangeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeTranslationConnection
  productReviews(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductReviewConnection
  seoUrlTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
  taxRuleTypeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxRuleTypeTranslationConnection
  productCrossSellingTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingTranslationConnection
  importExportProfileTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ImportExportProfileTranslationConnection
  productSortingTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSortingTranslationConnection
  productFeatureSetTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductFeatureSetTranslationConnection
  appTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppTranslationConnection
  actionButtonTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppActionButtonTranslationConnection
  landingPageTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageTranslationConnection
  appCmsBlockTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppCmsBlockTranslationConnection
  productSearchConfig: ProductSearchConfig
  themeTranslations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeTranslationConnection
}

"""Contains the information for one Edge"""
type LanguageEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Language

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Locale {
  __typename: String
  id: ID!
  code: String!
  name: String
  territory: String
  customFields: String
  languages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LanguageConnection
  translations: LocaleTranslationConnection!
  users(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UserConnection
}

"""The Result for a search that returns multiple Items"""
type LocaleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [LocaleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  code: String!
  name: String
  territory: String
  customFields: String
  languages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LanguageConnection
  translations: LocaleTranslationConnection!
  users(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UserConnection
}

"""Contains the information for one Edge"""
type LocaleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Locale

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type LocaleTranslation {
  __typename: String
  name: String!
  territory: String!
  localeId: ID!
  languageId: ID!
  locale: Locale
  language: Language
}

"""The Result for a search that returns multiple Items"""
type LocaleTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [LocaleTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  territory: String!
  localeId: ID!
  languageId: ID!
  locale: Locale
  language: Language
}

"""Contains the information for one Edge"""
type LocaleTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: LocaleTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type LogEntry {
  __typename: String
  id: ID!
  message: String
  level: Int
  channel: String
}

"""The Result for a search that returns multiple Items"""
type LogEntryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [LogEntryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  message: String
  level: Int
  channel: String
}

"""Contains the information for one Edge"""
type LogEntryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: LogEntry

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MailHeaderFooter {
  __typename: String
  id: ID!
  systemDefault: Boolean
  name: String
  description: String
  headerHtml: String
  headerPlain: String
  footerHtml: String
  footerPlain: String
  translations: MailHeaderFooterTranslationConnection!
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
}

"""The Result for a search that returns multiple Items"""
type MailHeaderFooterConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MailHeaderFooterEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  systemDefault: Boolean
  name: String
  description: String
  headerHtml: String
  headerPlain: String
  footerHtml: String
  footerPlain: String
  translations: MailHeaderFooterTranslationConnection!
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
}

"""Contains the information for one Edge"""
type MailHeaderFooterEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MailHeaderFooter

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MailHeaderFooterTranslation {
  __typename: String
  name: String!
  description: String
  headerHtml: String
  headerPlain: String
  footerHtml: String
  footerPlain: String
  mailHeaderFooterId: ID!
  languageId: ID!
  mailHeaderFooter: MailHeaderFooter
  language: Language
}

"""The Result for a search that returns multiple Items"""
type MailHeaderFooterTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MailHeaderFooterTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  description: String
  headerHtml: String
  headerPlain: String
  footerHtml: String
  footerPlain: String
  mailHeaderFooterId: ID!
  languageId: ID!
  mailHeaderFooter: MailHeaderFooter
  language: Language
}

"""Contains the information for one Edge"""
type MailHeaderFooterTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MailHeaderFooterTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MailTemplate {
  __typename: String
  id: ID!
  mailTemplateTypeId: ID!
  systemDefault: Boolean
  senderName: String
  description: String
  subject: String
  contentHtml: String
  contentPlain: String
  customFields: String
  translations: MailTemplateTranslationConnection!
  mailTemplateType: MailTemplateType
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateMediaConnection
}

"""The Result for a search that returns multiple Items"""
type MailTemplateConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MailTemplateEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  mailTemplateTypeId: ID!
  systemDefault: Boolean
  senderName: String
  description: String
  subject: String
  contentHtml: String
  contentPlain: String
  customFields: String
  translations: MailTemplateTranslationConnection!
  mailTemplateType: MailTemplateType
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateMediaConnection
}

"""Contains the information for one Edge"""
type MailTemplateEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MailTemplate

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MailTemplateMedia {
  __typename: String
  id: ID!
  mailTemplateId: ID!
  languageId: ID!
  mediaId: ID!
  position: Int
  mailTemplate: MailTemplate
  media: Media
}

"""The Result for a search that returns multiple Items"""
type MailTemplateMediaConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MailTemplateMediaEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  mailTemplateId: ID!
  languageId: ID!
  mediaId: ID!
  position: Int
  mailTemplate: MailTemplate
  media: Media
}

"""Contains the information for one Edge"""
type MailTemplateMediaEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MailTemplateMedia

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MailTemplateTranslation {
  __typename: String
  senderName: String
  description: String
  subject: String!
  contentHtml: String!
  contentPlain: String!
  mailTemplateId: ID!
  languageId: ID!
  mailTemplate: MailTemplate
  language: Language
}

"""The Result for a search that returns multiple Items"""
type MailTemplateTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MailTemplateTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  senderName: String
  description: String
  subject: String!
  contentHtml: String!
  contentPlain: String!
  mailTemplateId: ID!
  languageId: ID!
  mailTemplate: MailTemplate
  language: Language
}

"""Contains the information for one Edge"""
type MailTemplateTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MailTemplateTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MailTemplateType {
  __typename: String
  id: ID!
  name: String
  technicalName: String!
  customFields: String
  translations: MailTemplateTypeTranslationConnection!
  mailTemplates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateConnection
}

"""The Result for a search that returns multiple Items"""
type MailTemplateTypeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MailTemplateTypeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String
  technicalName: String!
  customFields: String
  translations: MailTemplateTypeTranslationConnection!
  mailTemplates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateConnection
}

"""Contains the information for one Edge"""
type MailTemplateTypeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MailTemplateType

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MailTemplateTypeTranslation {
  __typename: String
  name: String!
  mailTemplateTypeId: ID!
  languageId: ID!
  mailTemplateType: MailTemplateType
  language: Language
}

"""The Result for a search that returns multiple Items"""
type MailTemplateTypeTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MailTemplateTypeTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  mailTemplateTypeId: ID!
  languageId: ID!
  mailTemplateType: MailTemplateType
  language: Language
}

"""Contains the information for one Edge"""
type MailTemplateTypeTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MailTemplateTypeTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MainCategory {
  __typename: String
  id: ID!
  productId: ID!
  productVersionId: ID!
  categoryId: ID!
  categoryVersionId: ID!
  salesChannelId: ID!
  product: Product
  category: Category
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type MainCategoryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MainCategoryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  productId: ID!
  productVersionId: ID!
  categoryId: ID!
  categoryVersionId: ID!
  salesChannelId: ID!
  product: Product
  category: Category
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type MainCategoryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MainCategory

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Media {
  __typename: String
  id: ID!
  userId: ID
  mediaFolderId: ID
  mimeType: String
  fileExtension: String
  fileName: String
  fileSize: Int
  alt: String
  title: String
  url: String
  hasFile: Boolean
  private: Boolean
  customFields: String
  translations: MediaTranslationConnection!
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaTagConnection
  thumbnails(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaThumbnailConnection
  user: User
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryConnection
  productManufacturers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductManufacturerConnection
  productMedia(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductMediaConnection
  avatarUser: User
  mediaFolder: MediaFolder
  propertyGroupOptions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PropertyGroupOptionConnection
  mailTemplateMedia(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateMediaConnection
  documentBaseConfigs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigConnection
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodConnection
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PaymentMethodConnection
  productConfiguratorSettings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConfiguratorSettingConnection
  orderLineItems(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderLineItemConnection
  cmsBlocks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsBlockConnection
  cmsSections(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSectionConnection
  cmsPages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsPageConnection
  documents(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentConnection
  appPaymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppPaymentMethodConnection
}

"""The Result for a search that returns multiple Items"""
type MediaConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MediaEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  userId: ID
  mediaFolderId: ID
  mimeType: String
  fileExtension: String
  fileName: String
  fileSize: Int
  alt: String
  title: String
  url: String
  hasFile: Boolean
  private: Boolean
  customFields: String
  translations: MediaTranslationConnection!
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaTagConnection
  thumbnails(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaThumbnailConnection
  user: User
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryConnection
  productManufacturers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductManufacturerConnection
  productMedia(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductMediaConnection
  avatarUser: User
  mediaFolder: MediaFolder
  propertyGroupOptions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PropertyGroupOptionConnection
  mailTemplateMedia(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateMediaConnection
  documentBaseConfigs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigConnection
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodConnection
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PaymentMethodConnection
  productConfiguratorSettings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConfiguratorSettingConnection
  orderLineItems(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderLineItemConnection
  cmsBlocks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsBlockConnection
  cmsSections(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSectionConnection
  cmsPages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsPageConnection
  documents(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentConnection
  appPaymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppPaymentMethodConnection
  themes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeConnection
  themeMedia(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeMediaConnection
}

type MediaDefaultFolder {
  __typename: String
  id: ID!
  entity: String!
  folder: MediaFolder
}

"""The Result for a search that returns multiple Items"""
type MediaDefaultFolderConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MediaDefaultFolderEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  entity: String!
  folder: MediaFolder
}

"""Contains the information for one Edge"""
type MediaDefaultFolderEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MediaDefaultFolder

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""Contains the information for one Edge"""
type MediaEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Media

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MediaFolder {
  __typename: String
  id: ID!
  useParentConfiguration: Boolean
  configurationId: ID!
  defaultFolderId: ID
  parentId: ID
  parent: MediaFolder
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaFolderConnection
  childCount: Int
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaConnection
  defaultFolder: MediaDefaultFolder
  configuration: MediaFolderConfiguration
  name: String!
}

type MediaFolderConfiguration {
  __typename: String
  id: ID!
  createThumbnails: Boolean
  keepAspectRatio: Boolean
  thumbnailQuality: Int
  private: Boolean
  noAssociation: Boolean
  mediaFolders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaFolderConnection
  mediaThumbnailSizes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaFolderConfigurationMediaThumbnailSizeConnection
}

"""The Result for a search that returns multiple Items"""
type MediaFolderConfigurationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MediaFolderConfigurationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  createThumbnails: Boolean
  keepAspectRatio: Boolean
  thumbnailQuality: Int
  private: Boolean
  noAssociation: Boolean
  mediaFolders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaFolderConnection
  mediaThumbnailSizes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaFolderConfigurationMediaThumbnailSizeConnection
}

"""Contains the information for one Edge"""
type MediaFolderConfigurationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MediaFolderConfiguration

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MediaFolderConfigurationMediaThumbnailSize {
  __typename: String
  mediaFolderConfigurationId: ID!
  mediaThumbnailSizeId: ID!
  mediaFolderConfiguration: MediaFolderConfiguration
  mediaThumbnailSize: MediaThumbnailSize
}

"""The Result for a search that returns multiple Items"""
type MediaFolderConfigurationMediaThumbnailSizeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MediaFolderConfigurationMediaThumbnailSizeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  mediaFolderConfigurationId: ID!
  mediaThumbnailSizeId: ID!
  mediaFolderConfiguration: MediaFolderConfiguration
  mediaThumbnailSize: MediaThumbnailSize
}

"""Contains the information for one Edge"""
type MediaFolderConfigurationMediaThumbnailSizeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MediaFolderConfigurationMediaThumbnailSize

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type MediaFolderConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MediaFolderEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  useParentConfiguration: Boolean
  configurationId: ID!
  defaultFolderId: ID
  parentId: ID
  parent: MediaFolder
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaFolderConnection
  childCount: Int
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaConnection
  defaultFolder: MediaDefaultFolder
  configuration: MediaFolderConfiguration
  name: String!
}

"""Contains the information for one Edge"""
type MediaFolderEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MediaFolder

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MediaTag {
  __typename: String
  mediaId: ID!
  tagId: ID!
  media: Media
  tag: Tag
}

"""The Result for a search that returns multiple Items"""
type MediaTagConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MediaTagEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  mediaId: ID!
  tagId: ID!
  media: Media
  tag: Tag
}

"""Contains the information for one Edge"""
type MediaTagEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MediaTag

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MediaThumbnail {
  __typename: String
  id: ID!
  mediaId: ID!
  width: Int!
  height: Int!
  url: String
  media: Media
}

"""The Result for a search that returns multiple Items"""
type MediaThumbnailConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MediaThumbnailEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  mediaId: ID!
  width: Int!
  height: Int!
  url: String
  media: Media
}

"""Contains the information for one Edge"""
type MediaThumbnailEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MediaThumbnail

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MediaThumbnailSize {
  __typename: String
  id: ID!
  width: Int!
  height: Int!
  mediaFolderConfigurations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaFolderConfigurationMediaThumbnailSizeConnection
}

"""The Result for a search that returns multiple Items"""
type MediaThumbnailSizeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MediaThumbnailSizeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  width: Int!
  height: Int!
  mediaFolderConfigurations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaFolderConfigurationMediaThumbnailSizeConnection
}

"""Contains the information for one Edge"""
type MediaThumbnailSizeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MediaThumbnailSize

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MediaTranslation {
  __typename: String
  title: String
  alt: String
  mediaId: ID!
  languageId: ID!
  media: Media
  language: Language
}

"""The Result for a search that returns multiple Items"""
type MediaTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MediaTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  title: String
  alt: String
  mediaId: ID!
  languageId: ID!
  media: Media
  language: Language
}

"""Contains the information for one Edge"""
type MediaTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MediaTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type MessageQueueStats {
  __typename: String
  id: ID!
  name: String!
  size: Int!
}

"""The Result for a search that returns multiple Items"""
type MessageQueueStatsConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [MessageQueueStatsEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  size: Int!
}

"""Contains the information for one Edge"""
type MessageQueueStatsEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: MessageQueueStats

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Mutation {
  __typename: String
  createLogEntry(id: ID, message: String, level: Int, channel: String): LogEntry
  updateLogEntry(id: ID!, message: String, level: Int, channel: String): LogEntry
  deleteLogEntry(id: ID!): ID
  createAclRole(id: ID, name: String!, description: String, users: [InputAclUserRole], app: InputApp, integrations: [InputIntegrationRole]): AclRole
  updateAclRole(id: ID!, name: String, description: String, users: [InputAclUserRole], app: InputApp, integrations: [InputIntegrationRole]): AclRole
  deleteAclRole(id: ID!): ID
  createApp(id: ID, name: String!, path: String!, author: String, copyright: String, license: String, active: Boolean! = false, configurable: Boolean! = false, privacy: String, version: String!, icon: String, appSecret: String, translations: [InputAppTranslation], label: String, description: String, privacyPolicyExtensions: String, customFields: String, integrationId: ID, integration: InputIntegration, aclRoleId: ID, aclRole: InputAclRole, customFieldSets: [InputCustomFieldSet], actionButtons: [InputAppActionButton], templates: [InputAppTemplate], scripts: [InputScript], webhooks: [InputWebhook], paymentMethods: [InputAppPaymentMethod], cmsBlocks: [InputAppCmsBlock]): App
  updateApp(id: ID!, name: String, path: String, author: String, copyright: String, license: String, active: Boolean, configurable: Boolean, privacy: String, version: String, icon: String, appSecret: String, translations: [InputAppTranslation], label: String, description: String, privacyPolicyExtensions: String, customFields: String, integrationId: ID, integration: InputIntegration, aclRoleId: ID, aclRole: InputAclRole, customFieldSets: [InputCustomFieldSet], actionButtons: [InputAppActionButton], templates: [InputAppTemplate], scripts: [InputScript], webhooks: [InputWebhook], paymentMethods: [InputAppPaymentMethod], cmsBlocks: [InputAppCmsBlock]): App
  deleteApp(id: ID!): ID
  createAppActionButton(id: ID, entity: String!, view: String!, url: String!, action: String!, openNewTab: Boolean! = false, label: String, translations: [InputAppActionButtonTranslation], appId: ID, app: InputApp): AppActionButton
  updateAppActionButton(id: ID!, entity: String, view: String, url: String, action: String, openNewTab: Boolean, label: String, translations: [InputAppActionButtonTranslation], appId: ID, app: InputApp): AppActionButton
  deleteAppActionButton(id: ID!): ID
  createAppTemplate(id: ID, template: String!, path: String!, active: Boolean!, appId: ID, app: InputApp): AppTemplate
  updateAppTemplate(id: ID!, template: String, path: String, active: Boolean, appId: ID, app: InputApp): AppTemplate
  deleteAppTemplate(id: ID!): ID
  createAppPaymentMethod(id: ID, appName: String!, identifier: String!, payUrl: String, finalizeUrl: String, appId: ID, app: InputApp, originalMediaId: ID, originalMedia: InputMedia, paymentMethodId: ID, paymentMethod: InputPaymentMethod): AppPaymentMethod
  updateAppPaymentMethod(id: ID!, appName: String, identifier: String, payUrl: String, finalizeUrl: String, appId: ID, app: InputApp, originalMediaId: ID, originalMedia: InputMedia, paymentMethodId: ID, paymentMethod: InputPaymentMethod): AppPaymentMethod
  deleteAppPaymentMethod(id: ID!): ID
  createAppCmsBlock(id: ID, name: String!, template: String!, styles: String!, label: String, translations: [InputAppCmsBlockTranslation], appId: ID, app: InputApp): AppCmsBlock
  updateAppCmsBlock(id: ID!, name: String, template: String, styles: String, label: String, translations: [InputAppCmsBlockTranslation], appId: ID, app: InputApp): AppCmsBlock
  deleteAppCmsBlock(id: ID!): ID
  createCustomField(id: ID, name: String!, type: String!, active: Boolean, customFieldSetId: ID, customFieldSet: InputCustomFieldSet, productSearchConfigFields: [InputProductSearchConfigField]): CustomField
  updateCustomField(id: ID!, name: String, type: String, active: Boolean, customFieldSetId: ID, customFieldSet: InputCustomFieldSet, productSearchConfigFields: [InputProductSearchConfigField]): CustomField
  deleteCustomField(id: ID!): ID
  createCustomFieldSet(id: ID, name: String!, active: Boolean, global: Boolean, position: Int = 1, appId: ID, customFields: [InputCustomField], relations: [InputCustomFieldSetRelation], products: [InputProductCustomFieldSet], app: InputApp): CustomFieldSet
  updateCustomFieldSet(id: ID!, name: String, active: Boolean, global: Boolean, position: Int, appId: ID, customFields: [InputCustomField], relations: [InputCustomFieldSetRelation], products: [InputProductCustomFieldSet], app: InputApp): CustomFieldSet
  deleteCustomFieldSet(id: ID!): ID
  createCustomFieldSetRelation(id: ID, customFieldSetId: ID, entityName: String!, customFieldSet: InputCustomFieldSet): CustomFieldSetRelation
  updateCustomFieldSetRelation(id: ID!, customFieldSetId: ID, entityName: String, customFieldSet: InputCustomFieldSet): CustomFieldSetRelation
  deleteCustomFieldSetRelation(id: ID!): ID
  createVersion(id: ID, name: String! = "Draft 2022-01-08 10:07:01.303", commits: [InputVersionCommit]): Version
  updateVersion(id: ID!, name: String, commits: [InputVersionCommit]): Version
  deleteVersion(id: ID!): ID
  createVersionCommit(id: ID, versionId: ID, userId: ID, integrationId: ID, autoIncrement: Int, isMerge: Boolean, message: String, data: [InputVersionCommitData], version: InputVersion): VersionCommit
  updateVersionCommit(id: ID!, versionId: ID, userId: ID, integrationId: ID, autoIncrement: Int, isMerge: Boolean, message: String, data: [InputVersionCommitData], version: InputVersion): VersionCommit
  deleteVersionCommit(id: ID!): ID
  createVersionCommitData(id: ID, versionCommitId: ID, commit: InputVersionCommit, userId: ID, integrationId: ID, autoIncrement: Int, entityName: String!, action: String!): VersionCommitData
  updateVersionCommitData(id: ID!, versionCommitId: ID, commit: InputVersionCommit, userId: ID, integrationId: ID, autoIncrement: Int, entityName: String, action: String): VersionCommitData
  deleteVersionCommitData(id: ID!): ID
  createEventAction(id: ID, eventName: String!, actionName: String!, active: Boolean = true, title: String, rules: [InputEventActionRule], salesChannels: [InputEventActionSalesChannel]): EventAction
  updateEventAction(id: ID!, eventName: String, actionName: String, active: Boolean, title: String, rules: [InputEventActionRule], salesChannels: [InputEventActionSalesChannel]): EventAction
  deleteEventAction(id: ID!): ID
  createDeadMessage(id: ID, originalMessageClass: String!, handlerClass: String!, encrypted: Boolean! = false, errorCount: Int! = 1, exception: String!, exceptionMessage: String!, exceptionFile: String!, exceptionLine: Int!, scheduledTaskId: ID, scheduledTask: InputScheduledTask): DeadMessage
  updateDeadMessage(id: ID!, originalMessageClass: String, handlerClass: String, encrypted: Boolean, errorCount: Int, exception: String, exceptionMessage: String, exceptionFile: String, exceptionLine: Int, scheduledTaskId: ID, scheduledTask: InputScheduledTask): DeadMessage
  deleteDeadMessage(id: ID!): ID
  createMessageQueueStats(id: ID, name: String!, size: Int! = 0): MessageQueueStats
  updateMessageQueueStats(id: ID!, name: String, size: Int): MessageQueueStats
  deleteMessageQueueStats(id: ID!): ID
  createPlugin(id: ID, baseClass: String!, name: String!, composerName: String, active: Boolean, managedByComposer: Boolean, path: String, author: String, copyright: String, license: String, version: String!, upgradeVersion: String, icon: String, label: String, description: String, manufacturerLink: String, supportLink: String, changelog: String, customFields: String, translations: [InputPluginTranslation], paymentMethods: [InputPaymentMethod]): Plugin
  updatePlugin(id: ID!, baseClass: String, name: String, composerName: String, active: Boolean, managedByComposer: Boolean, path: String, author: String, copyright: String, license: String, version: String, upgradeVersion: String, icon: String, label: String, description: String, manufacturerLink: String, supportLink: String, changelog: String, customFields: String, translations: [InputPluginTranslation], paymentMethods: [InputPaymentMethod]): Plugin
  deletePlugin(id: ID!): ID
  createScheduledTask(id: ID, name: String!, scheduledTaskClass: String!, runInterval: Int!, status: String!, deadMessages: [InputDeadMessage]): ScheduledTask
  updateScheduledTask(id: ID!, name: String, scheduledTaskClass: String, runInterval: Int, status: String, deadMessages: [InputDeadMessage]): ScheduledTask
  deleteScheduledTask(id: ID!): ID
  createScript(id: ID, script: String!, hook: String!, name: String!, active: Boolean!, appId: ID, app: InputApp): Script
  updateScript(id: ID!, script: String, hook: String, name: String, active: Boolean, appId: ID, app: InputApp): Script
  deleteScript(id: ID!): ID
  createLanguage(id: ID, parentId: ID, localeId: ID, translationCodeId: ID, name: String!, parent: InputLanguage, locale: InputLocale, translationCode: InputLocale, children: [InputLanguage], salesChannels: [InputSalesChannelLanguage], salesChannelDefaultAssignments: [InputSalesChannel], salesChannelDomains: [InputSalesChannelDomain], customers: [InputCustomer], newsletterRecipients: [InputNewsletterRecipient], orders: [InputOrder], categoryTranslations: [InputCategoryTranslation], countryStateTranslations: [InputCountryStateTranslation], countryTranslations: [InputCountryTranslation], currencyTranslations: [InputCurrencyTranslation], customerGroupTranslations: [InputCustomerGroupTranslation], localeTranslations: [InputLocaleTranslation], mediaTranslations: [InputMediaTranslation], paymentMethodTranslations: [InputPaymentMethodTranslation], productManufacturerTranslations: [InputProductManufacturerTranslation], productTranslations: [InputProductTranslation], shippingMethodTranslations: [InputShippingMethodTranslation], unitTranslations: [InputUnitTranslation], propertyGroupTranslations: [InputPropertyGroupTranslation], propertyGroupOptionTranslations: [InputPropertyGroupOptionTranslation], salesChannelTranslations: [InputSalesChannelTranslation], salesChannelTypeTranslations: [InputSalesChannelTypeTranslation], salutationTranslations: [InputSalutationTranslation], pluginTranslations: [InputPluginTranslation], productStreamTranslations: [InputProductStreamTranslation], stateMachineTranslations: [InputStateMachineTranslation], stateMachineStateTranslations: [InputStateMachineStateTranslation], cmsPageTranslations: [InputCmsPageTranslation], cmsSlotTranslations: [InputCmsSlotTranslation], mailTemplateTranslations: [InputMailTemplateTranslation], mailHeaderFooterTranslations: [InputMailHeaderFooterTranslation], documentTypeTranslations: [InputDocumentTypeTranslation], numberRangeTypeTranslations: [InputNumberRangeTypeTranslation], deliveryTimeTranslations: [InputDeliveryTimeTranslation], productSearchKeywords: [InputProductSearchKeyword], productKeywordDictionaries: [InputProductKeywordDictionary], mailTemplateTypeTranslations: [InputMailTemplateTypeTranslation], promotionTranslations: [InputPromotionTranslation], numberRangeTranslations: [InputNumberRangeTranslation], productReviews: [InputProductReview], seoUrlTranslations: [InputSeoUrl], taxRuleTypeTranslations: [InputTaxRuleTypeTranslation], productCrossSellingTranslations: [InputProductCrossSellingTranslation], importExportProfileTranslations: [InputImportExportProfileTranslation], productSortingTranslations: [InputProductSortingTranslation], productFeatureSetTranslations: [InputProductFeatureSetTranslation], appTranslations: [InputAppTranslation], actionButtonTranslations: [InputAppActionButtonTranslation], landingPageTranslations: [InputLandingPageTranslation], appCmsBlockTranslations: [InputAppCmsBlockTranslation], productSearchConfig: InputProductSearchConfig, themeTranslations: [InputThemeTranslation]): Language
  updateLanguage(id: ID!, parentId: ID, localeId: ID, translationCodeId: ID, name: String, parent: InputLanguage, locale: InputLocale, translationCode: InputLocale, children: [InputLanguage], salesChannels: [InputSalesChannelLanguage], salesChannelDefaultAssignments: [InputSalesChannel], salesChannelDomains: [InputSalesChannelDomain], customers: [InputCustomer], newsletterRecipients: [InputNewsletterRecipient], orders: [InputOrder], categoryTranslations: [InputCategoryTranslation], countryStateTranslations: [InputCountryStateTranslation], countryTranslations: [InputCountryTranslation], currencyTranslations: [InputCurrencyTranslation], customerGroupTranslations: [InputCustomerGroupTranslation], localeTranslations: [InputLocaleTranslation], mediaTranslations: [InputMediaTranslation], paymentMethodTranslations: [InputPaymentMethodTranslation], productManufacturerTranslations: [InputProductManufacturerTranslation], productTranslations: [InputProductTranslation], shippingMethodTranslations: [InputShippingMethodTranslation], unitTranslations: [InputUnitTranslation], propertyGroupTranslations: [InputPropertyGroupTranslation], propertyGroupOptionTranslations: [InputPropertyGroupOptionTranslation], salesChannelTranslations: [InputSalesChannelTranslation], salesChannelTypeTranslations: [InputSalesChannelTypeTranslation], salutationTranslations: [InputSalutationTranslation], pluginTranslations: [InputPluginTranslation], productStreamTranslations: [InputProductStreamTranslation], stateMachineTranslations: [InputStateMachineTranslation], stateMachineStateTranslations: [InputStateMachineStateTranslation], cmsPageTranslations: [InputCmsPageTranslation], cmsSlotTranslations: [InputCmsSlotTranslation], mailTemplateTranslations: [InputMailTemplateTranslation], mailHeaderFooterTranslations: [InputMailHeaderFooterTranslation], documentTypeTranslations: [InputDocumentTypeTranslation], numberRangeTypeTranslations: [InputNumberRangeTypeTranslation], deliveryTimeTranslations: [InputDeliveryTimeTranslation], productSearchKeywords: [InputProductSearchKeyword], productKeywordDictionaries: [InputProductKeywordDictionary], mailTemplateTypeTranslations: [InputMailTemplateTypeTranslation], promotionTranslations: [InputPromotionTranslation], numberRangeTranslations: [InputNumberRangeTranslation], productReviews: [InputProductReview], seoUrlTranslations: [InputSeoUrl], taxRuleTypeTranslations: [InputTaxRuleTypeTranslation], productCrossSellingTranslations: [InputProductCrossSellingTranslation], importExportProfileTranslations: [InputImportExportProfileTranslation], productSortingTranslations: [InputProductSortingTranslation], productFeatureSetTranslations: [InputProductFeatureSetTranslation], appTranslations: [InputAppTranslation], actionButtonTranslations: [InputAppActionButtonTranslation], landingPageTranslations: [InputLandingPageTranslation], appCmsBlockTranslations: [InputAppCmsBlockTranslation], productSearchConfig: InputProductSearchConfig, themeTranslations: [InputThemeTranslation]): Language
  deleteLanguage(id: ID!): ID
  createSeoUrl(id: ID, salesChannelId: ID, languageId: ID, foreignKey: ID, routeName: String!, pathInfo: String!, seoPathInfo: String!, isCanonical: Boolean, isModified: Boolean, isDeleted: Boolean, url: String, language: InputLanguage, salesChannel: InputSalesChannel): SeoUrl
  updateSeoUrl(id: ID!, salesChannelId: ID, languageId: ID, foreignKey: ID, routeName: String, pathInfo: String, seoPathInfo: String, isCanonical: Boolean, isModified: Boolean, isDeleted: Boolean, url: String, language: InputLanguage, salesChannel: InputSalesChannel): SeoUrl
  deleteSeoUrl(id: ID!): ID
  createSeoUrlTemplate(id: ID, salesChannelId: ID, entityName: String!, routeName: String!, template: String, isValid: Boolean, salesChannel: InputSalesChannel): SeoUrlTemplate
  updateSeoUrlTemplate(id: ID!, salesChannelId: ID, entityName: String, routeName: String, template: String, isValid: Boolean, salesChannel: InputSalesChannel): SeoUrlTemplate
  deleteSeoUrlTemplate(id: ID!): ID
  createMainCategory(id: ID, productId: ID, productVersionId: ID, categoryId: ID, categoryVersionId: ID, salesChannelId: ID, product: InputProduct, category: InputCategory, salesChannel: InputSalesChannel): MainCategory
  updateMainCategory(id: ID!, productId: ID, productVersionId: ID, categoryId: ID, categoryVersionId: ID, salesChannelId: ID, product: InputProduct, category: InputCategory, salesChannel: InputSalesChannel): MainCategory
  deleteMainCategory(id: ID!): ID
  createWebhook(id: ID, name: String!, eventName: String!, url: String!, errorCount: Int! = 0, active: Boolean = true, appId: ID, app: InputApp): Webhook
  updateWebhook(id: ID!, name: String, eventName: String, url: String, errorCount: Int, active: Boolean, appId: ID, app: InputApp): Webhook
  deleteWebhook(id: ID!): ID
  createWebhookEventLog(id: ID, appName: String, webhookName: String!, eventName: String!, deliveryStatus: String!, timestamp: Int, processingTime: Int, appVersion: String, responseStatusCode: Int, responseReasonPhrase: String, url: String!): WebhookEventLog
  updateWebhookEventLog(id: ID!, appName: String, webhookName: String, eventName: String, deliveryStatus: String, timestamp: Int, processingTime: Int, appVersion: String, responseStatusCode: Int, responseReasonPhrase: String, url: String): WebhookEventLog
  deleteWebhookEventLog(id: ID!): ID
  createNamed(id: ID, name: String!, optionalGroupId: ID, optionalGroup: InputNamedOptionalGroup): Named
  updateNamed(id: ID!, name: String, optionalGroupId: ID, optionalGroup: InputNamedOptionalGroup): Named
  deleteNamed(id: ID!): ID
  createNamedOptionalGroup(id: ID, name: String!, nameds: [InputNamed]): NamedOptionalGroup
  updateNamedOptionalGroup(id: ID!, name: String, nameds: [InputNamed]): NamedOptionalGroup
  deleteNamedOptionalGroup(id: ID!): ID
  createCalculatedPriceFieldTest(id: ID, versionId: ID): CalculatedPriceFieldTest
  updateCalculatedPriceFieldTest(id: ID!, versionId: ID): CalculatedPriceFieldTest
  deleteCalculatedPriceFieldTest(id: ID!, versionId: ID): ID
  createRoot(id: ID, versionId: ID, name: String, sub: InputRootSub, subCascade: InputRootSubCascade): Root
  updateRoot(id: ID!, versionId: ID, name: String, sub: InputRootSub, subCascade: InputRootSubCascade): Root
  deleteRoot(id: ID!, versionId: ID): ID
  createRootSub(id: ID, versionId: ID, name: String, stock: Int, rootId: ID, rootVersionId: ID, root: InputRoot, manies: [InputRootSubMany]): RootSub
  updateRootSub(id: ID!, versionId: ID, name: String, stock: Int, rootId: ID, rootVersionId: ID, root: InputRoot, manies: [InputRootSubMany]): RootSub
  deleteRootSub(id: ID!, versionId: ID): ID
  createRootSubCascade(id: ID, versionId: ID, name: String, stock: Int, rootId: ID, rootVersionId: ID, root: InputRoot): RootSubCascade
  updateRootSubCascade(id: ID!, versionId: ID, name: String, stock: Int, rootId: ID, rootVersionId: ID, root: InputRoot): RootSubCascade
  deleteRootSubCascade(id: ID!, versionId: ID): ID
  createRootSubMany(id: ID, versionId: ID, name: String, subId: ID, rootSubVersionId: ID, sub: InputRootSub): RootSubMany
  updateRootSubMany(id: ID!, versionId: ID, name: String, subId: ID, rootSubVersionId: ID, sub: InputRootSub): RootSubMany
  deleteRootSubMany(id: ID!, versionId: ID): ID
  createTestLock(id: ID, description: String, name: String, translations: [InputTestLockTranslation], locked: Boolean): TestLock
  updateTestLock(id: ID!, description: String, name: String, translations: [InputTestLockTranslation], locked: Boolean): TestLock
  deleteTestLock(id: ID!): ID
  createAttributeTest(id: ID, parentId: ID, name: String, customTranslated: String, translations: [InputAttributeTestTranslation], parent: InputAttributeTest, children: [InputAttributeTest]): AttributeTest
  updateAttributeTest(id: ID!, parentId: ID, name: String, customTranslated: String, translations: [InputAttributeTestTranslation], parent: InputAttributeTest, children: [InputAttributeTest]): AttributeTest
  deleteAttributeTest(id: ID!): ID
  createTestNullable(id: ID, protected: String, systemProtected: String, relationId: ID, relation: InputTestRelation, relations: [InputTestNullableReference], systemRelationId: ID, systemRelation: InputTestRelation, systemRelations: [InputTestNullableReference]): TestNullable
  updateTestNullable(id: ID!, protected: String, systemProtected: String, relationId: ID, relation: InputTestRelation, relations: [InputTestNullableReference], systemRelationId: ID, systemRelation: InputTestRelation, systemRelations: [InputTestNullableReference]): TestNullable
  deleteTestNullable(id: ID!): ID
  createTestRelation(id: ID, wp: [InputTestNullable], wps: [InputTestNullableReference], systemWp: [InputTestNullable], systemWps: [InputTestNullableReference]): TestRelation
  updateTestRelation(id: ID!, wp: [InputTestNullable], wps: [InputTestNullableReference], systemWp: [InputTestNullable], systemWps: [InputTestNullableReference]): TestRelation
  deleteTestRelation(id: ID!): ID
  createExtendedProduct(id: ID, name: String, productId: ID, languageId: ID, language: InputLanguage, toOne: InputProduct, manyToOne: InputProduct): ExtendedProduct
  updateExtendedProduct(id: ID!, name: String, productId: ID, languageId: ID, language: InputLanguage, toOne: InputProduct, manyToOne: InputProduct): ExtendedProduct
  deleteExtendedProduct(id: ID!): ID
  createDateTimeTest(id: ID, name: String): DateTimeTest
  updateDateTimeTest(id: ID!, name: String): DateTimeTest
  deleteDateTimeTest(id: ID!): ID
  createSalesChannel(id: ID, typeId: ID, languageId: ID, customerGroupId: ID, currencyId: ID, paymentMethodId: ID, shippingMethodId: ID, countryId: ID, analyticsId: ID, navigationCategoryId: ID, navigationCategoryVersionId: ID, navigationCategoryDepth: Int, footerCategoryId: ID, footerCategoryVersionId: ID, serviceCategoryId: ID, serviceCategoryVersionId: ID, mailHeaderFooterId: ID, hreflangDefaultDomainId: ID, name: String, shortName: String, taxCalculationType: String = "horizontal", accessKey: String!, active: Boolean, hreflangActive: Boolean, maintenance: Boolean, customFields: String, translations: [InputSalesChannelTranslation], currencies: [InputSalesChannelCurrency], languages: [InputSalesChannelLanguage], countries: [InputSalesChannelCountry], paymentMethods: [InputSalesChannelPaymentMethod], shippingMethods: [InputSalesChannelShippingMethod], type: InputSalesChannelType, language: InputLanguage, customerGroup: InputCustomerGroup, currency: InputCurrency, paymentMethod: InputPaymentMethod, shippingMethod: InputShippingMethod, country: InputCountry, orders: [InputOrder], customers: [InputCustomer], homeCmsPageId: ID, homeCmsPageVersionId: ID, homeCmsPage: InputCmsPage, homeSlotConfig: String, homeEnabled: String = "1", homeName: String, homeMetaTitle: String, homeMetaDescription: String, homeKeywords: String, domains: [InputSalesChannelDomain], systemConfigs: [InputSystemConfig], navigationCategory: InputCategory, footerCategory: InputCategory, serviceCategory: InputCategory, productVisibilities: [InputProductVisibility], hreflangDefaultDomain: InputSalesChannelDomain, mailHeaderFooter: InputMailHeaderFooter, newsletterRecipients: [InputNewsletterRecipient], numberRangeSalesChannels: [InputNumberRangeSalesChannel], promotionSalesChannels: [InputPromotionSalesChannel], documentBaseConfigSalesChannels: [InputDocumentBaseConfigSalesChannel], productReviews: [InputProductReview], seoUrls: [InputSeoUrl], seoUrlTemplates: [InputSeoUrlTemplate], mainCategories: [InputMainCategory], productExports: [InputProductExport], analytics: InputSalesChannelAnalytics, customerGroupsRegistrations: [InputCustomerGroupRegistrationSalesChannels], eventActions: [InputEventActionSalesChannel], landingPages: [InputLandingPageSalesChannel], boundCustomers: [InputCustomer], wishlists: [InputCustomerWishlist], themes: [InputThemeSalesChannel]): SalesChannel
  updateSalesChannel(id: ID!, typeId: ID, languageId: ID, customerGroupId: ID, currencyId: ID, paymentMethodId: ID, shippingMethodId: ID, countryId: ID, analyticsId: ID, navigationCategoryId: ID, navigationCategoryVersionId: ID, navigationCategoryDepth: Int, footerCategoryId: ID, footerCategoryVersionId: ID, serviceCategoryId: ID, serviceCategoryVersionId: ID, mailHeaderFooterId: ID, hreflangDefaultDomainId: ID, name: String, shortName: String, taxCalculationType: String, accessKey: String, active: Boolean, hreflangActive: Boolean, maintenance: Boolean, customFields: String, translations: [InputSalesChannelTranslation], currencies: [InputSalesChannelCurrency], languages: [InputSalesChannelLanguage], countries: [InputSalesChannelCountry], paymentMethods: [InputSalesChannelPaymentMethod], shippingMethods: [InputSalesChannelShippingMethod], type: InputSalesChannelType, language: InputLanguage, customerGroup: InputCustomerGroup, currency: InputCurrency, paymentMethod: InputPaymentMethod, shippingMethod: InputShippingMethod, country: InputCountry, orders: [InputOrder], customers: [InputCustomer], homeCmsPageId: ID, homeCmsPageVersionId: ID, homeCmsPage: InputCmsPage, homeSlotConfig: String, homeEnabled: String, homeName: String, homeMetaTitle: String, homeMetaDescription: String, homeKeywords: String, domains: [InputSalesChannelDomain], systemConfigs: [InputSystemConfig], navigationCategory: InputCategory, footerCategory: InputCategory, serviceCategory: InputCategory, productVisibilities: [InputProductVisibility], hreflangDefaultDomain: InputSalesChannelDomain, mailHeaderFooter: InputMailHeaderFooter, newsletterRecipients: [InputNewsletterRecipient], numberRangeSalesChannels: [InputNumberRangeSalesChannel], promotionSalesChannels: [InputPromotionSalesChannel], documentBaseConfigSalesChannels: [InputDocumentBaseConfigSalesChannel], productReviews: [InputProductReview], seoUrls: [InputSeoUrl], seoUrlTemplates: [InputSeoUrlTemplate], mainCategories: [InputMainCategory], productExports: [InputProductExport], analytics: InputSalesChannelAnalytics, customerGroupsRegistrations: [InputCustomerGroupRegistrationSalesChannels], eventActions: [InputEventActionSalesChannel], landingPages: [InputLandingPageSalesChannel], boundCustomers: [InputCustomer], wishlists: [InputCustomerWishlist], themes: [InputThemeSalesChannel]): SalesChannel
  deleteSalesChannel(id: ID!): ID
  createSalesChannelDomain(id: ID, url: String!, salesChannelId: ID, languageId: ID, currencyId: ID, snippetSetId: ID, salesChannel: InputSalesChannel, language: InputLanguage, currency: InputCurrency, snippetSet: InputSnippetSet, salesChannelDefaultHreflang: InputSalesChannel, productExports: [InputProductExport], hreflangUseOnlyLocale: Boolean): SalesChannelDomain
  updateSalesChannelDomain(id: ID!, url: String, salesChannelId: ID, languageId: ID, currencyId: ID, snippetSetId: ID, salesChannel: InputSalesChannel, language: InputLanguage, currency: InputCurrency, snippetSet: InputSnippetSet, salesChannelDefaultHreflang: InputSalesChannel, productExports: [InputProductExport], hreflangUseOnlyLocale: Boolean): SalesChannelDomain
  deleteSalesChannelDomain(id: ID!): ID
  createSalesChannelType(id: ID, coverUrl: String, iconName: String, name: String, manufacturer: String, description: String, descriptionLong: String, customFields: String, translations: [InputSalesChannelTypeTranslation], salesChannels: [InputSalesChannel]): SalesChannelType
  updateSalesChannelType(id: ID!, coverUrl: String, iconName: String, name: String, manufacturer: String, description: String, descriptionLong: String, customFields: String, translations: [InputSalesChannelTypeTranslation], salesChannels: [InputSalesChannel]): SalesChannelType
  deleteSalesChannelType(id: ID!): ID
  createSalesChannelAnalytics(id: ID, trackingId: String, active: Boolean, trackOrders: Boolean, anonymizeIp: Boolean, salesChannel: InputSalesChannel): SalesChannelAnalytics
  updateSalesChannelAnalytics(id: ID!, trackingId: String, active: Boolean, trackOrders: Boolean, anonymizeIp: Boolean, salesChannel: InputSalesChannel): SalesChannelAnalytics
  deleteSalesChannelAnalytics(id: ID!): ID
  createCountry(id: ID, name: String, iso: String, position: Int, taxFree: Boolean, active: Boolean, shippingAvailable: Boolean, iso3: String, displayStateInRegistration: Boolean, forceStateInRegistration: Boolean, companyTaxFree: Boolean, checkVatIdPattern: Boolean, vatIdRequired: Boolean = false, vatIdPattern: String, customFields: String, states: [InputCountryState], translations: [InputCountryTranslation], customerAddresses: [InputCustomerAddress], orderAddresses: [InputOrderAddress], salesChannelDefaultAssignments: [InputSalesChannel], salesChannels: [InputSalesChannelCountry], taxRules: [InputTaxRule], currencyCountryRoundings: [InputCurrencyCountryRounding]): Country
  updateCountry(id: ID!, name: String, iso: String, position: Int, taxFree: Boolean, active: Boolean, shippingAvailable: Boolean, iso3: String, displayStateInRegistration: Boolean, forceStateInRegistration: Boolean, companyTaxFree: Boolean, checkVatIdPattern: Boolean, vatIdRequired: Boolean, vatIdPattern: String, customFields: String, states: [InputCountryState], translations: [InputCountryTranslation], customerAddresses: [InputCustomerAddress], orderAddresses: [InputOrderAddress], salesChannelDefaultAssignments: [InputSalesChannel], salesChannels: [InputSalesChannelCountry], taxRules: [InputTaxRule], currencyCountryRoundings: [InputCurrencyCountryRounding]): Country
  deleteCountry(id: ID!): ID
  createCountryState(id: ID, countryId: ID, shortCode: String!, name: String, position: Int, active: Boolean, customFields: String, country: InputCountry, translations: [InputCountryStateTranslation], customerAddresses: [InputCustomerAddress], orderAddresses: [InputOrderAddress]): CountryState
  updateCountryState(id: ID!, countryId: ID, shortCode: String, name: String, position: Int, active: Boolean, customFields: String, country: InputCountry, translations: [InputCountryStateTranslation], customerAddresses: [InputCustomerAddress], orderAddresses: [InputOrderAddress]): CountryState
  deleteCountryState(id: ID!): ID
  createCurrency(id: ID, factor: Float!, symbol: String!, isoCode: String!, shortName: String, name: String, position: Int, isSystemDefault: Boolean, customFields: String, translations: [InputCurrencyTranslation], salesChannelDefaultAssignments: [InputSalesChannel], orders: [InputOrder], salesChannels: [InputSalesChannelCurrency], salesChannelDomains: [InputSalesChannelDomain], promotionDiscountPrices: [InputPromotionDiscountPrices], productExports: [InputProductExport], countryRoundings: [InputCurrencyCountryRounding], taxFreeFrom: Float): Currency
  updateCurrency(id: ID!, factor: Float, symbol: String, isoCode: String, shortName: String, name: String, position: Int, isSystemDefault: Boolean, customFields: String, translations: [InputCurrencyTranslation], salesChannelDefaultAssignments: [InputSalesChannel], orders: [InputOrder], salesChannels: [InputSalesChannelCurrency], salesChannelDomains: [InputSalesChannelDomain], promotionDiscountPrices: [InputPromotionDiscountPrices], productExports: [InputProductExport], countryRoundings: [InputCurrencyCountryRounding], taxFreeFrom: Float): Currency
  deleteCurrency(id: ID!): ID
  createCurrencyCountryRounding(id: ID, currencyId: ID, countryId: ID, currency: InputCurrency, country: InputCountry): CurrencyCountryRounding
  updateCurrencyCountryRounding(id: ID!, currencyId: ID, countryId: ID, currency: InputCurrency, country: InputCountry): CurrencyCountryRounding
  deleteCurrencyCountryRounding(id: ID!): ID
  createLocale(id: ID, code: String!, name: String, territory: String, customFields: String, languages: [InputLanguage], translations: [InputLocaleTranslation], users: [InputUser]): Locale
  updateLocale(id: ID!, code: String, name: String, territory: String, customFields: String, languages: [InputLanguage], translations: [InputLocaleTranslation], users: [InputUser]): Locale
  deleteLocale(id: ID!): ID
  createSnippetSet(id: ID, name: String!, baseFile: String!, iso: String!, snippets: [InputSnippet], salesChannelDomains: [InputSalesChannelDomain]): SnippetSet
  updateSnippetSet(id: ID!, name: String, baseFile: String, iso: String, snippets: [InputSnippet], salesChannelDomains: [InputSalesChannelDomain]): SnippetSet
  deleteSnippetSet(id: ID!): ID
  createSnippet(id: ID, setId: ID, translationKey: String!, value: String!, author: String!, set: InputSnippetSet): Snippet
  updateSnippet(id: ID!, setId: ID, translationKey: String, value: String, author: String, set: InputSnippetSet): Snippet
  deleteSnippet(id: ID!): ID
  createSalutation(id: ID, salutationKey: String!, displayName: String, letterName: String, customFields: String, translations: [InputSalutationTranslation], customers: [InputCustomer], customerAddresses: [InputCustomerAddress], orderCustomers: [InputOrderCustomer], orderAddresses: [InputOrderAddress], newsletterRecipients: [InputNewsletterRecipient]): Salutation
  updateSalutation(id: ID!, salutationKey: String, displayName: String, letterName: String, customFields: String, translations: [InputSalutationTranslation], customers: [InputCustomer], customerAddresses: [InputCustomerAddress], orderCustomers: [InputOrderCustomer], orderAddresses: [InputOrderAddress], newsletterRecipients: [InputNewsletterRecipient]): Salutation
  deleteSalutation(id: ID!): ID
  createTax(id: ID, taxRate: Float!, name: String!, position: Int! = 0, products: [InputProduct], rules: [InputTaxRule], shippingMethods: [InputShippingMethod]): Tax
  updateTax(id: ID!, taxRate: Float, name: String, position: Int, products: [InputProduct], rules: [InputTaxRule], shippingMethods: [InputShippingMethod]): Tax
  deleteTax(id: ID!): ID
  createTaxRule(id: ID, taxRuleTypeId: ID, countryId: ID, taxRate: Float!, taxId: ID, type: InputTaxRuleType, country: InputCountry, tax: InputTax): TaxRule
  updateTaxRule(id: ID!, taxRuleTypeId: ID, countryId: ID, taxRate: Float, taxId: ID, type: InputTaxRuleType, country: InputCountry, tax: InputTax): TaxRule
  deleteTaxRule(id: ID!): ID
  createTaxRuleType(id: ID, technicalName: String!, position: Int!, typeName: String, rules: [InputTaxRule], translations: [InputTaxRuleTypeTranslation]): TaxRuleType
  updateTaxRuleType(id: ID!, technicalName: String, position: Int, typeName: String, rules: [InputTaxRule], translations: [InputTaxRuleTypeTranslation]): TaxRuleType
  deleteTaxRuleType(id: ID!): ID
  createUnit(id: ID, shortCode: String, name: String, customFields: String, products: [InputProduct], translations: [InputUnitTranslation]): Unit
  updateUnit(id: ID!, shortCode: String, name: String, customFields: String, products: [InputProduct], translations: [InputUnitTranslation]): Unit
  deleteUnit(id: ID!): ID
  createUser(id: ID, localeId: ID, avatarId: ID, username: String!, firstName: String!, lastName: String!, title: String, email: String!, active: Boolean, admin: Boolean, timeZone: String! = "UTC", locale: InputLocale, avatarMedia: InputMedia, media: [InputMedia], accessKeys: [InputUserAccessKey], configs: [InputUserConfig], stateMachineHistoryEntries: [InputStateMachineHistory], importExportLogEntries: [InputImportExportLog], aclRoles: [InputAclUserRole], recoveryUser: InputUserRecovery, storeToken: String, createdOrders: [InputOrder], updatedOrders: [InputOrder]): User
  updateUser(id: ID!, localeId: ID, avatarId: ID, username: String, firstName: String, lastName: String, title: String, email: String, active: Boolean, admin: Boolean, timeZone: String, locale: InputLocale, avatarMedia: InputMedia, media: [InputMedia], accessKeys: [InputUserAccessKey], configs: [InputUserConfig], stateMachineHistoryEntries: [InputStateMachineHistory], importExportLogEntries: [InputImportExportLog], aclRoles: [InputAclUserRole], recoveryUser: InputUserRecovery, storeToken: String, createdOrders: [InputOrder], updatedOrders: [InputOrder]): User
  deleteUser(id: ID!): ID
  createUserConfig(id: ID, userId: ID, key: String!, user: InputUser): UserConfig
  updateUserConfig(id: ID!, userId: ID, key: String, user: InputUser): UserConfig
  deleteUserConfig(id: ID!): ID
  createUserAccessKey(id: ID, userId: ID, accessKey: String!, writeAccess: Boolean = false, user: InputUser): UserAccessKey
  updateUserAccessKey(id: ID!, userId: ID, accessKey: String, writeAccess: Boolean, user: InputUser): UserAccessKey
  deleteUserAccessKey(id: ID!): ID
  createUserRecovery(id: ID, hash: String!, userId: ID, user: InputUser): UserRecovery
  updateUserRecovery(id: ID!, hash: String, userId: ID, user: InputUser): UserRecovery
  deleteUserRecovery(id: ID!): ID
  createIntegration(id: ID, label: String!, accessKey: String!, writeAccess: Boolean, admin: Boolean = false, app: InputApp, aclRoles: [InputIntegrationRole]): Integration
  updateIntegration(id: ID!, label: String, accessKey: String, writeAccess: Boolean, admin: Boolean, app: InputApp, aclRoles: [InputIntegrationRole]): Integration
  deleteIntegration(id: ID!): ID
  createStateMachine(id: ID, technicalName: String!, name: String, customFields: String, states: [InputStateMachineState], transitions: [InputStateMachineTransition], initialStateId: ID, translations: [InputStateMachineTranslation], historyEntries: [InputStateMachineHistory]): StateMachine
  updateStateMachine(id: ID!, technicalName: String, name: String, customFields: String, states: [InputStateMachineState], transitions: [InputStateMachineTransition], initialStateId: ID, translations: [InputStateMachineTranslation], historyEntries: [InputStateMachineHistory]): StateMachine
  deleteStateMachine(id: ID!): ID
  createStateMachineState(id: ID, technicalName: String!, name: String, stateMachineId: ID, stateMachine: InputStateMachine, fromStateMachineTransitions: [InputStateMachineTransition], toStateMachineTransitions: [InputStateMachineTransition], translations: [InputStateMachineStateTranslation], orderTransactions: [InputOrderTransaction], orderDeliveries: [InputOrderDelivery], orders: [InputOrder], customFields: String, toStateMachineHistoryEntries: [InputStateMachineHistory], fromStateMachineHistoryEntries: [InputStateMachineHistory]): StateMachineState
  updateStateMachineState(id: ID!, technicalName: String, name: String, stateMachineId: ID, stateMachine: InputStateMachine, fromStateMachineTransitions: [InputStateMachineTransition], toStateMachineTransitions: [InputStateMachineTransition], translations: [InputStateMachineStateTranslation], orderTransactions: [InputOrderTransaction], orderDeliveries: [InputOrderDelivery], orders: [InputOrder], customFields: String, toStateMachineHistoryEntries: [InputStateMachineHistory], fromStateMachineHistoryEntries: [InputStateMachineHistory]): StateMachineState
  deleteStateMachineState(id: ID!): ID
  createStateMachineTransition(id: ID, actionName: String!, stateMachineId: ID, stateMachine: InputStateMachine, fromStateId: ID, fromStateMachineState: InputStateMachineState, toStateId: ID, toStateMachineState: InputStateMachineState): StateMachineTransition
  updateStateMachineTransition(id: ID!, actionName: String, stateMachineId: ID, stateMachine: InputStateMachine, fromStateId: ID, fromStateMachineState: InputStateMachineState, toStateId: ID, toStateMachineState: InputStateMachineState): StateMachineTransition
  deleteStateMachineTransition(id: ID!): ID
  createStateMachineHistory(id: ID, stateMachineId: ID, stateMachine: InputStateMachine, entityName: String!, fromStateId: ID, fromStateMachineState: InputStateMachineState, toStateId: ID, toStateMachineState: InputStateMachineState, transitionActionName: String, userId: ID, user: InputUser): StateMachineHistory
  updateStateMachineHistory(id: ID!, stateMachineId: ID, stateMachine: InputStateMachine, entityName: String, fromStateId: ID, fromStateMachineState: InputStateMachineState, toStateId: ID, toStateMachineState: InputStateMachineState, transitionActionName: String, userId: ID, user: InputUser): StateMachineHistory
  deleteStateMachineHistory(id: ID!): ID
  createSystemConfig(id: ID, configurationKey: String!, salesChannelId: ID, salesChannel: InputSalesChannel): SystemConfig
  updateSystemConfig(id: ID!, configurationKey: String, salesChannelId: ID, salesChannel: InputSalesChannel): SystemConfig
  deleteSystemConfig(id: ID!): ID
  createNumberRange(id: ID, typeId: ID, global: Boolean!, name: String, description: String, pattern: String!, start: Int!, customFields: String, type: InputNumberRangeType, numberRangeSalesChannels: [InputNumberRangeSalesChannel], state: InputNumberRangeState, translations: [InputNumberRangeTranslation]): NumberRange
  updateNumberRange(id: ID!, typeId: ID, global: Boolean, name: String, description: String, pattern: String, start: Int, customFields: String, type: InputNumberRangeType, numberRangeSalesChannels: [InputNumberRangeSalesChannel], state: InputNumberRangeState, translations: [InputNumberRangeTranslation]): NumberRange
  deleteNumberRange(id: ID!): ID
  createNumberRangeSalesChannel(id: ID, numberRangeId: ID, salesChannelId: ID, numberRangeTypeId: ID, numberRange: InputNumberRange, salesChannel: InputSalesChannel, numberRangeType: InputNumberRangeType): NumberRangeSalesChannel
  updateNumberRangeSalesChannel(id: ID!, numberRangeId: ID, salesChannelId: ID, numberRangeTypeId: ID, numberRange: InputNumberRange, salesChannel: InputSalesChannel, numberRangeType: InputNumberRangeType): NumberRangeSalesChannel
  deleteNumberRangeSalesChannel(id: ID!): ID
  createNumberRangeState(id: ID, numberRangeId: ID, lastValue: Int!, numberRange: InputNumberRange): NumberRangeState
  updateNumberRangeState(id: ID!, numberRangeId: ID, lastValue: Int, numberRange: InputNumberRange): NumberRangeState
  deleteNumberRangeState(id: ID!): ID
  createNumberRangeType(id: ID, technicalName: String, typeName: String, global: Boolean!, customFields: String, numberRanges: [InputNumberRange], numberRangeSalesChannels: [InputNumberRangeSalesChannel], translations: [InputNumberRangeTypeTranslation]): NumberRangeType
  updateNumberRangeType(id: ID!, technicalName: String, typeName: String, global: Boolean, customFields: String, numberRanges: [InputNumberRange], numberRangeSalesChannels: [InputNumberRangeSalesChannel], translations: [InputNumberRangeTypeTranslation]): NumberRangeType
  deleteNumberRangeType(id: ID!): ID
  createTag(id: ID, name: String!, products: [InputProductTag], media: [InputMediaTag], categories: [InputCategoryTag], customers: [InputCustomerTag], orders: [InputOrderTag], shippingMethods: [InputShippingMethodTag], newsletterRecipients: [InputNewsletterRecipientTag], landingPages: [InputLandingPageTag]): Tag
  updateTag(id: ID!, name: String, products: [InputProductTag], media: [InputMediaTag], categories: [InputCategoryTag], customers: [InputCustomerTag], orders: [InputOrderTag], shippingMethods: [InputShippingMethodTag], newsletterRecipients: [InputNewsletterRecipientTag], landingPages: [InputLandingPageTag]): Tag
  deleteTag(id: ID!): ID
  createCategory(id: ID, versionId: ID, parentId: ID, parentVersionId: ID, afterCategoryId: ID, afterCategoryVersionId: ID, mediaId: ID, displayNestedProducts: Boolean! = true, autoIncrement: Int, breadcrumb: String, level: Int, path: String, childCount: Int, type: String! = "page", productAssignmentType: String! = "product", visible: Boolean, active: Boolean, name: String, customFields: String, slotConfig: String, linkType: String, internalLink: String, externalLink: String, linkNewTab: String, description: String, metaTitle: String, metaDescription: String, keywords: String, parent: InputCategory, children: [InputCategory], media: InputMedia, translations: [InputCategoryTranslation], products: [InputProductCategory], nestedProducts: [InputProductCategoryTree], tags: [InputCategoryTag], cmsPageId: ID, cmsPageVersionId: ID, cmsPage: InputCmsPage, productStreamId: ID, productStream: InputProductStream, navigationSalesChannels: [InputSalesChannel], footerSalesChannels: [InputSalesChannel], serviceSalesChannels: [InputSalesChannel], mainCategories: [InputMainCategory], seoUrls: [InputSeoUrl]): Category
  updateCategory(id: ID!, versionId: ID, parentId: ID, parentVersionId: ID, afterCategoryId: ID, afterCategoryVersionId: ID, mediaId: ID, displayNestedProducts: Boolean, autoIncrement: Int, breadcrumb: String, level: Int, path: String, childCount: Int, type: String, productAssignmentType: String, visible: Boolean, active: Boolean, name: String, customFields: String, slotConfig: String, linkType: String, internalLink: String, externalLink: String, linkNewTab: String, description: String, metaTitle: String, metaDescription: String, keywords: String, parent: InputCategory, children: [InputCategory], media: InputMedia, translations: [InputCategoryTranslation], products: [InputProductCategory], nestedProducts: [InputProductCategoryTree], tags: [InputCategoryTag], cmsPageId: ID, cmsPageVersionId: ID, cmsPage: InputCmsPage, productStreamId: ID, productStream: InputProductStream, navigationSalesChannels: [InputSalesChannel], footerSalesChannels: [InputSalesChannel], serviceSalesChannels: [InputSalesChannel], mainCategories: [InputMainCategory], seoUrls: [InputSeoUrl]): Category
  deleteCategory(id: ID!, versionId: ID): ID
  createMedia(id: ID, userId: ID, mediaFolderId: ID, mimeType: String, fileExtension: String, fileName: String, fileSize: Int, alt: String, title: String, url: String, hasFile: Boolean, private: Boolean, customFields: String, translations: [InputMediaTranslation], tags: [InputMediaTag], thumbnails: [InputMediaThumbnail], user: InputUser, categories: [InputCategory], productManufacturers: [InputProductManufacturer], productMedia: [InputProductMedia], avatarUser: InputUser, mediaFolder: InputMediaFolder, propertyGroupOptions: [InputPropertyGroupOption], mailTemplateMedia: [InputMailTemplateMedia], documentBaseConfigs: [InputDocumentBaseConfig], shippingMethods: [InputShippingMethod], paymentMethods: [InputPaymentMethod], productConfiguratorSettings: [InputProductConfiguratorSetting], orderLineItems: [InputOrderLineItem], cmsBlocks: [InputCmsBlock], cmsSections: [InputCmsSection], cmsPages: [InputCmsPage], documents: [InputDocument], appPaymentMethods: [InputAppPaymentMethod], themes: [InputTheme], themeMedia: [InputThemeMedia]): Media
  updateMedia(id: ID!, userId: ID, mediaFolderId: ID, mimeType: String, fileExtension: String, fileName: String, fileSize: Int, alt: String, title: String, url: String, hasFile: Boolean, private: Boolean, customFields: String, translations: [InputMediaTranslation], tags: [InputMediaTag], thumbnails: [InputMediaThumbnail], user: InputUser, categories: [InputCategory], productManufacturers: [InputProductManufacturer], productMedia: [InputProductMedia], avatarUser: InputUser, mediaFolder: InputMediaFolder, propertyGroupOptions: [InputPropertyGroupOption], mailTemplateMedia: [InputMailTemplateMedia], documentBaseConfigs: [InputDocumentBaseConfig], shippingMethods: [InputShippingMethod], paymentMethods: [InputPaymentMethod], productConfiguratorSettings: [InputProductConfiguratorSetting], orderLineItems: [InputOrderLineItem], cmsBlocks: [InputCmsBlock], cmsSections: [InputCmsSection], cmsPages: [InputCmsPage], documents: [InputDocument], appPaymentMethods: [InputAppPaymentMethod], themes: [InputTheme], themeMedia: [InputThemeMedia]): Media
  deleteMedia(id: ID!): ID
  createMediaDefaultFolder(id: ID, entity: String!, folder: InputMediaFolder): MediaDefaultFolder
  updateMediaDefaultFolder(id: ID!, entity: String, folder: InputMediaFolder): MediaDefaultFolder
  deleteMediaDefaultFolder(id: ID!): ID
  createMediaThumbnail(id: ID, mediaId: ID, width: Int!, height: Int!, url: String, media: InputMedia): MediaThumbnail
  updateMediaThumbnail(id: ID!, mediaId: ID, width: Int, height: Int, url: String, media: InputMedia): MediaThumbnail
  deleteMediaThumbnail(id: ID!): ID
  createMediaFolder(id: ID, useParentConfiguration: Boolean = true, configurationId: ID, defaultFolderId: ID, parentId: ID, parent: InputMediaFolder, children: [InputMediaFolder], childCount: Int, media: [InputMedia], defaultFolder: InputMediaDefaultFolder, configuration: InputMediaFolderConfiguration, name: String!): MediaFolder
  updateMediaFolder(id: ID!, useParentConfiguration: Boolean, configurationId: ID, defaultFolderId: ID, parentId: ID, parent: InputMediaFolder, children: [InputMediaFolder], childCount: Int, media: [InputMedia], defaultFolder: InputMediaDefaultFolder, configuration: InputMediaFolderConfiguration, name: String): MediaFolder
  deleteMediaFolder(id: ID!): ID
  createMediaThumbnailSize(id: ID, width: Int!, height: Int!, mediaFolderConfigurations: [InputMediaFolderConfigurationMediaThumbnailSize]): MediaThumbnailSize
  updateMediaThumbnailSize(id: ID!, width: Int, height: Int, mediaFolderConfigurations: [InputMediaFolderConfigurationMediaThumbnailSize]): MediaThumbnailSize
  deleteMediaThumbnailSize(id: ID!): ID
  createMediaFolderConfiguration(id: ID, createThumbnails: Boolean = true, keepAspectRatio: Boolean = true, thumbnailQuality: Int = 80, private: Boolean = false, noAssociation: Boolean = false, mediaFolders: [InputMediaFolder], mediaThumbnailSizes: [InputMediaFolderConfigurationMediaThumbnailSize]): MediaFolderConfiguration
  updateMediaFolderConfiguration(id: ID!, createThumbnails: Boolean, keepAspectRatio: Boolean, thumbnailQuality: Int, private: Boolean, noAssociation: Boolean, mediaFolders: [InputMediaFolder], mediaThumbnailSizes: [InputMediaFolderConfigurationMediaThumbnailSize]): MediaFolderConfiguration
  deleteMediaFolderConfiguration(id: ID!): ID
  createProduct(id: ID, versionId: ID, parentId: ID, parentVersionId: ID, manufacturerId: ID, productManufacturerVersionId: ID, unitId: ID, taxId: ID, coverId: ID, productMediaVersionId: ID, deliveryTimeId: ID, featureSetId: ID, canonicalProductId: ID, cmsPageId: ID, cmsPageVersionId: ID, productNumber: String!, stock: Int!, restockTime: Int = null, autoIncrement: Int, active: Boolean = true, availableStock: Int, available: Boolean, isCloseout: Boolean = false, displayGroup: String, mainVariantId: ID, manufacturerNumber: String, ean: String, purchaseSteps: Int = 1, maxPurchase: Int, minPurchase: Int = 1, purchaseUnit: Float, referenceUnit: Float, shippingFree: Boolean = false, markAsTopseller: Boolean, weight: Float, width: Float, height: Float, length: Float, ratingAverage: Float, childCount: Int, customFieldSetSelectionActive: Boolean, sales: Int, metaDescription: String, name: String, keywords: String, description: String, metaTitle: String, packUnit: String, packUnitPlural: String, customFields: String, slotConfig: String, customSearchKeywords: String, parent: InputProduct, children: [InputProduct], deliveryTime: InputDeliveryTime, tax: InputTax, manufacturer: InputProductManufacturer, unit: InputUnit, cover: InputProductMedia, featureSet: InputProductFeatureSet, cmsPage: InputCmsPage, canonicalProduct: InputProduct, prices: [InputProductPrice], media: [InputProductMedia], crossSellings: [InputProductCrossSelling], crossSellingAssignedProducts: [InputProductCrossSellingAssignedProducts], configuratorSettings: [InputProductConfiguratorSetting], visibilities: [InputProductVisibility], searchKeywords: [InputProductSearchKeyword], productReviews: [InputProductReview], mainCategories: [InputMainCategory], seoUrls: [InputSeoUrl], orderLineItems: [InputOrderLineItem], wishlists: [InputCustomerWishlistProduct], options: [InputProductOption], properties: [InputProductProperty], categories: [InputProductCategory], streams: [InputProductStreamMapping], categoriesRo: [InputProductCategoryTree], tags: [InputProductTag], customFieldSets: [InputProductCustomFieldSet], translations: [InputProductTranslation]): Product
  updateProduct(id: ID!, versionId: ID, parentId: ID, parentVersionId: ID, manufacturerId: ID, productManufacturerVersionId: ID, unitId: ID, taxId: ID, coverId: ID, productMediaVersionId: ID, deliveryTimeId: ID, featureSetId: ID, canonicalProductId: ID, cmsPageId: ID, cmsPageVersionId: ID, productNumber: String, stock: Int, restockTime: Int, autoIncrement: Int, active: Boolean, availableStock: Int, available: Boolean, isCloseout: Boolean, displayGroup: String, mainVariantId: ID, manufacturerNumber: String, ean: String, purchaseSteps: Int, maxPurchase: Int, minPurchase: Int, purchaseUnit: Float, referenceUnit: Float, shippingFree: Boolean, markAsTopseller: Boolean, weight: Float, width: Float, height: Float, length: Float, ratingAverage: Float, childCount: Int, customFieldSetSelectionActive: Boolean, sales: Int, metaDescription: String, name: String, keywords: String, description: String, metaTitle: String, packUnit: String, packUnitPlural: String, customFields: String, slotConfig: String, customSearchKeywords: String, parent: InputProduct, children: [InputProduct], deliveryTime: InputDeliveryTime, tax: InputTax, manufacturer: InputProductManufacturer, unit: InputUnit, cover: InputProductMedia, featureSet: InputProductFeatureSet, cmsPage: InputCmsPage, canonicalProduct: InputProduct, prices: [InputProductPrice], media: [InputProductMedia], crossSellings: [InputProductCrossSelling], crossSellingAssignedProducts: [InputProductCrossSellingAssignedProducts], configuratorSettings: [InputProductConfiguratorSetting], visibilities: [InputProductVisibility], searchKeywords: [InputProductSearchKeyword], productReviews: [InputProductReview], mainCategories: [InputMainCategory], seoUrls: [InputSeoUrl], orderLineItems: [InputOrderLineItem], wishlists: [InputCustomerWishlistProduct], options: [InputProductOption], properties: [InputProductProperty], categories: [InputProductCategory], streams: [InputProductStreamMapping], categoriesRo: [InputProductCategoryTree], tags: [InputProductTag], customFieldSets: [InputProductCustomFieldSet], translations: [InputProductTranslation]): Product
  deleteProduct(id: ID!, versionId: ID): ID
  createProductConfiguratorSetting(id: ID, versionId: ID, productId: ID, productVersionId: ID, mediaId: ID, optionId: ID, position: Int, product: InputProduct, media: InputMedia, option: InputPropertyGroupOption): ProductConfiguratorSetting
  updateProductConfiguratorSetting(id: ID!, versionId: ID, productId: ID, productVersionId: ID, mediaId: ID, optionId: ID, position: Int, product: InputProduct, media: InputMedia, option: InputPropertyGroupOption): ProductConfiguratorSetting
  deleteProductConfiguratorSetting(id: ID!, versionId: ID): ID
  createProductPrice(id: ID, versionId: ID, productId: ID, productVersionId: ID, ruleId: ID, quantityStart: Int!, quantityEnd: Int, product: InputProduct, rule: InputRule): ProductPrice
  updateProductPrice(id: ID!, versionId: ID, productId: ID, productVersionId: ID, ruleId: ID, quantityStart: Int, quantityEnd: Int, product: InputProduct, rule: InputRule): ProductPrice
  deleteProductPrice(id: ID!, versionId: ID): ID
  createProductSearchKeyword(id: ID, versionId: ID, languageId: ID, productId: ID, productVersionId: ID, keyword: String!, ranking: Float!, product: InputProduct, language: InputLanguage): ProductSearchKeyword
  updateProductSearchKeyword(id: ID!, versionId: ID, languageId: ID, productId: ID, productVersionId: ID, keyword: String, ranking: Float, product: InputProduct, language: InputLanguage): ProductSearchKeyword
  deleteProductSearchKeyword(id: ID!, versionId: ID): ID
  createProductKeywordDictionary(id: ID, languageId: ID, keyword: String!, reversed: String, language: InputLanguage): ProductKeywordDictionary
  updateProductKeywordDictionary(id: ID!, languageId: ID, keyword: String, reversed: String, language: InputLanguage): ProductKeywordDictionary
  deleteProductKeywordDictionary(id: ID!): ID
  createProductReview(id: ID, productId: ID, productVersionId: ID, customerId: ID, salesChannelId: ID, languageId: ID, externalUser: String, externalEmail: String, title: String!, content: String!, points: Float, status: Boolean, comment: String, product: InputProduct, customer: InputCustomer, salesChannel: InputSalesChannel, language: InputLanguage): ProductReview
  updateProductReview(id: ID!, productId: ID, productVersionId: ID, customerId: ID, salesChannelId: ID, languageId: ID, externalUser: String, externalEmail: String, title: String, content: String, points: Float, status: Boolean, comment: String, product: InputProduct, customer: InputCustomer, salesChannel: InputSalesChannel, language: InputLanguage): ProductReview
  deleteProductReview(id: ID!): ID
  createProductManufacturer(id: ID, versionId: ID, mediaId: ID, link: String, name: String, description: String, customFields: String, media: InputMedia, products: [InputProduct], translations: [InputProductManufacturerTranslation]): ProductManufacturer
  updateProductManufacturer(id: ID!, versionId: ID, mediaId: ID, link: String, name: String, description: String, customFields: String, media: InputMedia, products: [InputProduct], translations: [InputProductManufacturerTranslation]): ProductManufacturer
  deleteProductManufacturer(id: ID!, versionId: ID): ID
  createProductMedia(id: ID, versionId: ID, productId: ID, productVersionId: ID, mediaId: ID, position: Int, product: InputProduct, media: InputMedia): ProductMedia
  updateProductMedia(id: ID!, versionId: ID, productId: ID, productVersionId: ID, mediaId: ID, position: Int, product: InputProduct, media: InputMedia): ProductMedia
  deleteProductMedia(id: ID!, versionId: ID): ID
  createProductCrossSelling(id: ID, name: String!, position: Int! = 0, sortBy: String = "price", sortDirection: String = "ASC", type: String! = "productStream", active: Boolean = false, limit: Int = 24, productId: ID, productVersionId: ID, product: InputProduct, productStreamId: ID, productStream: InputProductStream, assignedProducts: [InputProductCrossSellingAssignedProducts], translations: [InputProductCrossSellingTranslation]): ProductCrossSelling
  updateProductCrossSelling(id: ID!, name: String, position: Int, sortBy: String, sortDirection: String, type: String, active: Boolean, limit: Int, productId: ID, productVersionId: ID, product: InputProduct, productStreamId: ID, productStream: InputProductStream, assignedProducts: [InputProductCrossSellingAssignedProducts], translations: [InputProductCrossSellingTranslation]): ProductCrossSelling
  deleteProductCrossSelling(id: ID!): ID
  createProductCrossSellingAssignedProducts(id: ID, crossSellingId: ID, productId: ID, productVersionId: ID, product: InputProduct, crossSelling: InputProductCrossSelling, position: Int): ProductCrossSellingAssignedProducts
  updateProductCrossSellingAssignedProducts(id: ID!, crossSellingId: ID, productId: ID, productVersionId: ID!, product: InputProduct, crossSelling: InputProductCrossSelling, position: Int): ProductCrossSellingAssignedProducts
  deleteProductCrossSellingAssignedProducts(id: ID!, productVersionId: ID!): ID
  createProductFeatureSet(id: ID, name: String, description: String, products: [InputProduct], translations: [InputProductFeatureSetTranslation]): ProductFeatureSet
  updateProductFeatureSet(id: ID!, name: String, description: String, products: [InputProduct], translations: [InputProductFeatureSetTranslation]): ProductFeatureSet
  deleteProductFeatureSet(id: ID!): ID
  createProductSorting(id: ID, locked: Boolean, key: String!, priority: Int!, active: Boolean!, label: String, translations: [InputProductSortingTranslation]): ProductSorting
  updateProductSorting(id: ID!, locked: Boolean, key: String, priority: Int, active: Boolean, label: String, translations: [InputProductSortingTranslation]): ProductSorting
  deleteProductSorting(id: ID!): ID
  createProductSearchConfig(id: ID, languageId: ID, andLogic: Boolean! = true, minSearchLength: Int! = 2, language: InputLanguage, configFields: [InputProductSearchConfigField]): ProductSearchConfig
  updateProductSearchConfig(id: ID!, languageId: ID, andLogic: Boolean, minSearchLength: Int, language: InputLanguage, configFields: [InputProductSearchConfigField]): ProductSearchConfig
  deleteProductSearchConfig(id: ID!): ID
  createProductSearchConfigField(id: ID, searchConfigId: ID, customFieldId: ID, field: String!, tokenize: Boolean! = false, searchable: Boolean! = false, ranking: Int! = 0, searchConfig: InputProductSearchConfig, customField: InputCustomField): ProductSearchConfigField
  updateProductSearchConfigField(id: ID!, searchConfigId: ID, customFieldId: ID, field: String, tokenize: Boolean, searchable: Boolean, ranking: Int, searchConfig: InputProductSearchConfig, customField: InputCustomField): ProductSearchConfigField
  deleteProductSearchConfigField(id: ID!): ID
  createProductVisibility(id: ID, productId: ID, productVersionId: ID, salesChannelId: ID, visibility: Int!, salesChannel: InputSalesChannel, product: InputProduct): ProductVisibility
  updateProductVisibility(id: ID!, productId: ID, productVersionId: ID, salesChannelId: ID, visibility: Int, salesChannel: InputSalesChannel, product: InputProduct): ProductVisibility
  deleteProductVisibility(id: ID!): ID
  createDeliveryTime(id: ID, name: String!, min: Int!, max: Int!, unit: String!, customFields: String, shippingMethods: [InputShippingMethod], products: [InputProduct], translations: [InputDeliveryTimeTranslation]): DeliveryTime
  updateDeliveryTime(id: ID!, name: String, min: Int, max: Int, unit: String, customFields: String, shippingMethods: [InputShippingMethod], products: [InputProduct], translations: [InputDeliveryTimeTranslation]): DeliveryTime
  deleteDeliveryTime(id: ID!): ID
  createNewsletterRecipient(id: ID, email: String!, title: String, firstName: String, lastName: String, zipCode: String, city: String, street: String, status: String!, hash: String!, tags: [InputNewsletterRecipientTag], salutationId: ID, salutation: InputSalutation, languageId: ID, language: InputLanguage, salesChannelId: ID, salesChannel: InputSalesChannel): NewsletterRecipient
  updateNewsletterRecipient(id: ID!, email: String, title: String, firstName: String, lastName: String, zipCode: String, city: String, street: String, status: String, hash: String, tags: [InputNewsletterRecipientTag], salutationId: ID, salutation: InputSalutation, languageId: ID, language: InputLanguage, salesChannelId: ID, salesChannel: InputSalesChannel): NewsletterRecipient
  deleteNewsletterRecipient(id: ID!): ID
  createRule(id: ID, name: String!, priority: Int!, description: String, invalid: Boolean, conditions: [InputRuleCondition], productPrices: [InputProductPrice], shippingMethodPrices: [InputShippingMethodPrice], shippingMethodPriceCalculations: [InputShippingMethodPrice], shippingMethods: [InputShippingMethod], paymentMethods: [InputPaymentMethod], personaPromotions: [InputPromotionPersonaRule], flowSequences: [InputFlowSequence], orderPromotions: [InputPromotionOrderRule], cartPromotions: [InputPromotionCartRule], promotionDiscounts: [InputPromotionDiscountRule], promotionSetGroups: [InputPromotionSetgroupRule], eventActions: [InputEventActionRule]): Rule
  updateRule(id: ID!, name: String, priority: Int, description: String, invalid: Boolean, conditions: [InputRuleCondition], productPrices: [InputProductPrice], shippingMethodPrices: [InputShippingMethodPrice], shippingMethodPriceCalculations: [InputShippingMethodPrice], shippingMethods: [InputShippingMethod], paymentMethods: [InputPaymentMethod], personaPromotions: [InputPromotionPersonaRule], flowSequences: [InputFlowSequence], orderPromotions: [InputPromotionOrderRule], cartPromotions: [InputPromotionCartRule], promotionDiscounts: [InputPromotionDiscountRule], promotionSetGroups: [InputPromotionSetgroupRule], eventActions: [InputEventActionRule]): Rule
  deleteRule(id: ID!): ID
  createRuleCondition(id: ID, type: String, ruleId: ID, parentId: ID, position: Int, rule: InputRule, parent: InputRuleCondition, children: [InputRuleCondition]): RuleCondition
  updateRuleCondition(id: ID!, type: String, ruleId: ID, parentId: ID, position: Int, rule: InputRule, parent: InputRuleCondition, children: [InputRuleCondition]): RuleCondition
  deleteRuleCondition(id: ID!): ID
  createProductStream(id: ID, invalid: Boolean, name: String, description: String, customFields: String, translations: [InputProductStreamTranslation], filters: [InputProductStreamFilter], productCrossSellings: [InputProductCrossSelling], productExports: [InputProductExport], categories: [InputCategory]): ProductStream
  updateProductStream(id: ID!, invalid: Boolean, name: String, description: String, customFields: String, translations: [InputProductStreamTranslation], filters: [InputProductStreamFilter], productCrossSellings: [InputProductCrossSelling], productExports: [InputProductExport], categories: [InputCategory]): ProductStream
  deleteProductStream(id: ID!): ID
  createProductStreamFilter(id: ID, productStreamId: ID, parentId: ID, type: String!, field: String, operator: String, value: String, position: Int, productStream: InputProductStream, parent: InputProductStreamFilter, queries: [InputProductStreamFilter]): ProductStreamFilter
  updateProductStreamFilter(id: ID!, productStreamId: ID, parentId: ID, type: String, field: String, operator: String, value: String, position: Int, productStream: InputProductStream, parent: InputProductStreamFilter, queries: [InputProductStreamFilter]): ProductStreamFilter
  deleteProductStreamFilter(id: ID!): ID
  createProductExport(id: ID, productStreamId: ID, storefrontSalesChannelId: ID, salesChannelId: ID, salesChannelDomainId: ID, currencyId: ID, fileName: String!, accessKey: String!, encoding: String!, fileFormat: String!, includeVariants: Boolean, generateByCronjob: Boolean!, interval: Int!, headerTemplate: String, bodyTemplate: String, footerTemplate: String, pausedSchedule: Boolean, productStream: InputProductStream, storefrontSalesChannel: InputSalesChannel, salesChannel: InputSalesChannel, salesChannelDomain: InputSalesChannelDomain, currency: InputCurrency): ProductExport
  updateProductExport(id: ID!, productStreamId: ID, storefrontSalesChannelId: ID, salesChannelId: ID, salesChannelDomainId: ID, currencyId: ID, fileName: String, accessKey: String, encoding: String, fileFormat: String, includeVariants: Boolean, generateByCronjob: Boolean, interval: Int, headerTemplate: String, bodyTemplate: String, footerTemplate: String, pausedSchedule: Boolean, productStream: InputProductStream, storefrontSalesChannel: InputSalesChannel, salesChannel: InputSalesChannel, salesChannelDomain: InputSalesChannelDomain, currency: InputCurrency): ProductExport
  deleteProductExport(id: ID!): ID
  createPropertyGroup(id: ID, name: String, description: String, displayType: String! = "text", sortingType: String! = "alphanumeric", filterable: Boolean = true, visibleOnProductDetailPage: Boolean = true, position: String, customFields: String, options: [InputPropertyGroupOption], translations: [InputPropertyGroupTranslation]): PropertyGroup
  updatePropertyGroup(id: ID!, name: String, description: String, displayType: String, sortingType: String, filterable: Boolean, visibleOnProductDetailPage: Boolean, position: String, customFields: String, options: [InputPropertyGroupOption], translations: [InputPropertyGroupTranslation]): PropertyGroup
  deletePropertyGroup(id: ID!): ID
  createPropertyGroupOption(id: ID, groupId: ID, name: String, position: String, colorHexCode: String, mediaId: ID, customFields: String, media: InputMedia, group: InputPropertyGroup, translations: [InputPropertyGroupOptionTranslation], productConfiguratorSettings: [InputProductConfiguratorSetting], productProperties: [InputProductProperty], productOptions: [InputProductOption]): PropertyGroupOption
  updatePropertyGroupOption(id: ID!, groupId: ID, name: String, position: String, colorHexCode: String, mediaId: ID, customFields: String, media: InputMedia, group: InputPropertyGroup, translations: [InputPropertyGroupOptionTranslation], productConfiguratorSettings: [InputProductConfiguratorSetting], productProperties: [InputProductProperty], productOptions: [InputProductOption]): PropertyGroupOption
  deletePropertyGroupOption(id: ID!): ID
  createCmsPage(id: ID, versionId: ID, name: String, type: String!, entity: String, previewMediaId: ID, customFields: String, locked: Boolean, sections: [InputCmsSection], translations: [InputCmsPageTranslation], previewMedia: InputMedia, categories: [InputCategory], landingPages: [InputLandingPage], homeSalesChannels: [InputSalesChannel], products: [InputProduct]): CmsPage
  updateCmsPage(id: ID!, versionId: ID, name: String, type: String, entity: String, previewMediaId: ID, customFields: String, locked: Boolean, sections: [InputCmsSection], translations: [InputCmsPageTranslation], previewMedia: InputMedia, categories: [InputCategory], landingPages: [InputLandingPage], homeSalesChannels: [InputSalesChannel], products: [InputProduct]): CmsPage
  deleteCmsPage(id: ID!, versionId: ID): ID
  createCmsSection(id: ID, position: Int!, type: String!, locked: Boolean, name: String, sizingMode: String, mobileBehavior: String, backgroundColor: String, backgroundMediaId: ID, backgroundMediaMode: String, cssClass: String, pageId: ID, page: InputCmsPage, backgroundMedia: InputMedia, blocks: [InputCmsBlock], versionId: ID, cmsPageVersionId: ID): CmsSection
  updateCmsSection(id: ID!, position: Int, type: String, locked: Boolean, name: String, sizingMode: String, mobileBehavior: String, backgroundColor: String, backgroundMediaId: ID, backgroundMediaMode: String, cssClass: String, pageId: ID, page: InputCmsPage, backgroundMedia: InputMedia, blocks: [InputCmsBlock], versionId: ID, cmsPageVersionId: ID): CmsSection
  deleteCmsSection(id: ID!, versionId: ID): ID
  createCmsBlock(id: ID, position: Int!, type: String!, locked: Boolean, name: String, sectionPosition: String, marginTop: String, marginBottom: String, marginLeft: String, marginRight: String, backgroundColor: String, backgroundMediaId: ID, backgroundMediaMode: String, cssClass: String, sectionId: ID, section: InputCmsSection, backgroundMedia: InputMedia, slots: [InputCmsSlot], versionId: ID, cmsSectionVersionId: ID): CmsBlock
  updateCmsBlock(id: ID!, position: Int, type: String, locked: Boolean, name: String, sectionPosition: String, marginTop: String, marginBottom: String, marginLeft: String, marginRight: String, backgroundColor: String, backgroundMediaId: ID, backgroundMediaMode: String, cssClass: String, sectionId: ID, section: InputCmsSection, backgroundMedia: InputMedia, slots: [InputCmsSlot], versionId: ID, cmsSectionVersionId: ID): CmsBlock
  deleteCmsBlock(id: ID!, versionId: ID): ID
  createCmsSlot(id: ID, versionId: ID, type: String!, slot: String!, locked: Boolean, config: String, customFields: String, blockId: ID, block: InputCmsBlock, translations: [InputCmsSlotTranslation], cmsBlockVersionId: ID): CmsSlot
  updateCmsSlot(id: ID!, versionId: ID, type: String, slot: String, locked: Boolean, config: String, customFields: String, blockId: ID, block: InputCmsBlock, translations: [InputCmsSlotTranslation], cmsBlockVersionId: ID): CmsSlot
  deleteCmsSlot(id: ID!, versionId: ID): ID
  createMailTemplate(id: ID, mailTemplateTypeId: ID, systemDefault: Boolean, senderName: String, description: String, subject: String, contentHtml: String, contentPlain: String, customFields: String, translations: [InputMailTemplateTranslation], mailTemplateType: InputMailTemplateType, media: [InputMailTemplateMedia]): MailTemplate
  updateMailTemplate(id: ID!, mailTemplateTypeId: ID, systemDefault: Boolean, senderName: String, description: String, subject: String, contentHtml: String, contentPlain: String, customFields: String, translations: [InputMailTemplateTranslation], mailTemplateType: InputMailTemplateType, media: [InputMailTemplateMedia]): MailTemplate
  deleteMailTemplate(id: ID!): ID
  createMailTemplateType(id: ID, name: String, technicalName: String!, customFields: String, translations: [InputMailTemplateTypeTranslation], mailTemplates: [InputMailTemplate]): MailTemplateType
  updateMailTemplateType(id: ID!, name: String, technicalName: String, customFields: String, translations: [InputMailTemplateTypeTranslation], mailTemplates: [InputMailTemplate]): MailTemplateType
  deleteMailTemplateType(id: ID!): ID
  createMailHeaderFooter(id: ID, systemDefault: Boolean, name: String, description: String, headerHtml: String, headerPlain: String, footerHtml: String, footerPlain: String, translations: [InputMailHeaderFooterTranslation], salesChannels: [InputSalesChannel]): MailHeaderFooter
  updateMailHeaderFooter(id: ID!, systemDefault: Boolean, name: String, description: String, headerHtml: String, headerPlain: String, footerHtml: String, footerPlain: String, translations: [InputMailHeaderFooterTranslation], salesChannels: [InputSalesChannel]): MailHeaderFooter
  deleteMailHeaderFooter(id: ID!): ID
  createImportExportProfile(id: ID, name: String, label: String!, systemDefault: Boolean, sourceEntity: String!, fileType: String!, delimiter: String!, enclosure: String!, importExportLogs: [InputImportExportLog], translations: [InputImportExportProfileTranslation]): ImportExportProfile
  updateImportExportProfile(id: ID!, name: String, label: String, systemDefault: Boolean, sourceEntity: String, fileType: String, delimiter: String, enclosure: String, importExportLogs: [InputImportExportLog], translations: [InputImportExportProfileTranslation]): ImportExportProfile
  deleteImportExportProfile(id: ID!): ID
  createImportExportLog(id: ID, activity: String!, state: String!, records: Int!, userId: ID, profileId: ID, fileId: ID, invalidRecordsLogId: ID, username: String, profileName: String, user: InputUser, profile: InputImportExportProfile, file: InputImportExportFile, invalidRecordsLog: InputImportExportLog, failedImportLog: InputImportExportLog): ImportExportLog
  updateImportExportLog(id: ID!, activity: String, state: String, records: Int, userId: ID, profileId: ID, fileId: ID, invalidRecordsLogId: ID, username: String, profileName: String, user: InputUser, profile: InputImportExportProfile, file: InputImportExportFile, invalidRecordsLog: InputImportExportLog, failedImportLog: InputImportExportLog): ImportExportLog
  deleteImportExportLog(id: ID!): ID
  createImportExportFile(id: ID, originalName: String!, path: String!, size: Int, log: InputImportExportLog, accessToken: String): ImportExportFile
  updateImportExportFile(id: ID!, originalName: String, path: String, size: Int, log: InputImportExportLog, accessToken: String): ImportExportFile
  deleteImportExportFile(id: ID!): ID
  createLandingPage(id: ID, versionId: ID, active: Boolean, name: String, customFields: String, slotConfig: String, metaTitle: String, metaDescription: String, keywords: String, url: String, translations: [InputLandingPageTranslation], tags: [InputLandingPageTag], cmsPageId: ID, cmsPage: InputCmsPage, salesChannels: [InputLandingPageSalesChannel], seoUrls: [InputSeoUrl], cmsPageVersionId: ID): LandingPage
  updateLandingPage(id: ID!, versionId: ID, active: Boolean, name: String, customFields: String, slotConfig: String, metaTitle: String, metaDescription: String, keywords: String, url: String, translations: [InputLandingPageTranslation], tags: [InputLandingPageTag], cmsPageId: ID, cmsPage: InputCmsPage, salesChannels: [InputLandingPageSalesChannel], seoUrls: [InputSeoUrl], cmsPageVersionId: ID): LandingPage
  deleteLandingPage(id: ID!, versionId: ID): ID
  createFlow(id: ID, name: String!, eventName: String!, priority: Int = 1, invalid: Boolean, active: Boolean = false, description: String, sequences: [InputFlowSequence]): Flow
  updateFlow(id: ID!, name: String, eventName: String, priority: Int, invalid: Boolean, active: Boolean, description: String, sequences: [InputFlowSequence]): Flow
  deleteFlow(id: ID!): ID
  createFlowSequence(id: ID, flowId: ID, ruleId: ID, actionName: String, position: Int = 1, displayGroup: Int, trueCase: Boolean = false, flow: InputFlow, rule: InputRule, parent: InputFlowSequence, children: [InputFlowSequence], parentId: ID): FlowSequence
  updateFlowSequence(id: ID!, flowId: ID, ruleId: ID, actionName: String, position: Int, displayGroup: Int, trueCase: Boolean, flow: InputFlow, rule: InputRule, parent: InputFlowSequence, children: [InputFlowSequence], parentId: ID): FlowSequence
  deleteFlowSequence(id: ID!): ID
  createCustomer(id: ID, groupId: ID, defaultPaymentMethodId: ID, salesChannelId: ID, languageId: ID, lastPaymentMethodId: ID, defaultBillingAddressId: ID, defaultShippingAddressId: ID, autoIncrement: Int, customerNumber: String!, salutationId: ID, firstName: String!, lastName: String!, company: String, email: String!, title: String, affiliateCode: String, campaignCode: String, active: Boolean, doubleOptInRegistration: Boolean, hash: String, guest: Boolean, newsletter: Boolean, birthday: Date, orderCount: Int, orderTotalAmount: Float, legacyPassword: String, legacyEncoder: String, group: InputCustomerGroup, defaultPaymentMethod: InputPaymentMethod, salesChannel: InputSalesChannel, language: InputLanguage, lastPaymentMethod: InputPaymentMethod, defaultBillingAddress: InputCustomerAddress, defaultShippingAddress: InputCustomerAddress, salutation: InputSalutation, addresses: [InputCustomerAddress], orderCustomers: [InputOrderCustomer], tags: [InputCustomerTag], promotions: [InputPromotionPersonaCustomer], productReviews: [InputProductReview], recoveryCustomer: InputCustomerRecovery, requestedGroupId: ID, requestedGroup: InputCustomerGroup, boundSalesChannelId: ID, boundSalesChannel: InputSalesChannel, wishlists: [InputCustomerWishlist]): Customer
  updateCustomer(id: ID!, groupId: ID, defaultPaymentMethodId: ID, salesChannelId: ID, languageId: ID, lastPaymentMethodId: ID, defaultBillingAddressId: ID, defaultShippingAddressId: ID, autoIncrement: Int, customerNumber: String, salutationId: ID, firstName: String, lastName: String, company: String, email: String, title: String, affiliateCode: String, campaignCode: String, active: Boolean, doubleOptInRegistration: Boolean, hash: String, guest: Boolean, newsletter: Boolean, birthday: Date, orderCount: Int, orderTotalAmount: Float, legacyPassword: String, legacyEncoder: String, group: InputCustomerGroup, defaultPaymentMethod: InputPaymentMethod, salesChannel: InputSalesChannel, language: InputLanguage, lastPaymentMethod: InputPaymentMethod, defaultBillingAddress: InputCustomerAddress, defaultShippingAddress: InputCustomerAddress, salutation: InputSalutation, addresses: [InputCustomerAddress], orderCustomers: [InputOrderCustomer], tags: [InputCustomerTag], promotions: [InputPromotionPersonaCustomer], productReviews: [InputProductReview], recoveryCustomer: InputCustomerRecovery, requestedGroupId: ID, requestedGroup: InputCustomerGroup, boundSalesChannelId: ID, boundSalesChannel: InputSalesChannel, wishlists: [InputCustomerWishlist]): Customer
  deleteCustomer(id: ID!): ID
  createCustomerAddress(id: ID, customerId: ID, countryId: ID, countryStateId: ID, salutationId: ID, firstName: String!, lastName: String!, zipcode: String!, city: String!, company: String, street: String!, department: String, title: String, phoneNumber: String, additionalAddressLine1: String, additionalAddressLine2: String, customer: InputCustomer, country: InputCountry, countryState: InputCountryState, salutation: InputSalutation): CustomerAddress
  updateCustomerAddress(id: ID!, customerId: ID, countryId: ID, countryStateId: ID, salutationId: ID, firstName: String, lastName: String, zipcode: String, city: String, company: String, street: String, department: String, title: String, phoneNumber: String, additionalAddressLine1: String, additionalAddressLine2: String, customer: InputCustomer, country: InputCountry, countryState: InputCountryState, salutation: InputSalutation): CustomerAddress
  deleteCustomerAddress(id: ID!): ID
  createCustomerRecovery(id: ID, hash: String!, customerId: ID, customer: InputCustomer): CustomerRecovery
  updateCustomerRecovery(id: ID!, hash: String, customerId: ID, customer: InputCustomer): CustomerRecovery
  deleteCustomerRecovery(id: ID!): ID
  createCustomerGroup(id: ID, name: String, displayGross: Boolean, customFields: String, registrationActive: Boolean, registrationTitle: String, registrationIntroduction: String, registrationOnlyCompanyRegistration: String, registrationSeoMetaDescription: String, customers: [InputCustomer], salesChannels: [InputSalesChannel], translations: [InputCustomerGroupTranslation], registrationSalesChannels: [InputCustomerGroupRegistrationSalesChannels]): CustomerGroup
  updateCustomerGroup(id: ID!, name: String, displayGross: Boolean, customFields: String, registrationActive: Boolean, registrationTitle: String, registrationIntroduction: String, registrationOnlyCompanyRegistration: String, registrationSeoMetaDescription: String, customers: [InputCustomer], salesChannels: [InputSalesChannel], translations: [InputCustomerGroupTranslation], registrationSalesChannels: [InputCustomerGroupRegistrationSalesChannels]): CustomerGroup
  deleteCustomerGroup(id: ID!): ID
  createCustomerWishlist(id: ID, customerId: ID, salesChannelId: ID, products: [InputCustomerWishlistProduct], customer: InputCustomer, salesChannel: InputSalesChannel): CustomerWishlist
  updateCustomerWishlist(id: ID!, customerId: ID, salesChannelId: ID, products: [InputCustomerWishlistProduct], customer: InputCustomer, salesChannel: InputSalesChannel): CustomerWishlist
  deleteCustomerWishlist(id: ID!): ID
  createCustomerWishlistProduct(id: ID, productId: ID, productVersionId: ID, wishlistId: ID, wishlist: InputCustomerWishlist, product: InputProduct): CustomerWishlistProduct
  updateCustomerWishlistProduct(id: ID!, productId: ID, productVersionId: ID, wishlistId: ID, wishlist: InputCustomerWishlist, product: InputProduct): CustomerWishlistProduct
  deleteCustomerWishlistProduct(id: ID!): ID
  createDocument(id: ID, documentTypeId: ID, fileType: String!, referencedDocumentId: ID, orderId: ID, documentMediaFileId: ID, orderVersionId: ID, sent: Boolean, static: Boolean, deepLinkCode: String!, documentType: InputDocumentType, order: InputOrder, referencedDocument: InputDocument, dependentDocuments: [InputDocument], documentMediaFile: InputMedia): Document
  updateDocument(id: ID!, documentTypeId: ID, fileType: String, referencedDocumentId: ID, orderId: ID, documentMediaFileId: ID, orderVersionId: ID, sent: Boolean, static: Boolean, deepLinkCode: String, documentType: InputDocumentType, order: InputOrder, referencedDocument: InputDocument, dependentDocuments: [InputDocument], documentMediaFile: InputMedia): Document
  deleteDocument(id: ID!): ID
  createDocumentType(id: ID, name: String, technicalName: String!, customFields: String, translations: [InputDocumentTypeTranslation], documents: [InputDocument], documentBaseConfigs: [InputDocumentBaseConfig], documentBaseConfigSalesChannels: [InputDocumentBaseConfigSalesChannel]): DocumentType
  updateDocumentType(id: ID!, name: String, technicalName: String, customFields: String, translations: [InputDocumentTypeTranslation], documents: [InputDocument], documentBaseConfigs: [InputDocumentBaseConfig], documentBaseConfigSalesChannels: [InputDocumentBaseConfigSalesChannel]): DocumentType
  deleteDocumentType(id: ID!): ID
  createDocumentBaseConfig(id: ID, documentTypeId: ID, logoId: ID, name: String!, filenamePrefix: String, filenameSuffix: String, global: Boolean!, documentNumber: String, documentType: InputDocumentType, logo: InputMedia, salesChannels: [InputDocumentBaseConfigSalesChannel]): DocumentBaseConfig
  updateDocumentBaseConfig(id: ID!, documentTypeId: ID, logoId: ID, name: String, filenamePrefix: String, filenameSuffix: String, global: Boolean, documentNumber: String, documentType: InputDocumentType, logo: InputMedia, salesChannels: [InputDocumentBaseConfigSalesChannel]): DocumentBaseConfig
  deleteDocumentBaseConfig(id: ID!): ID
  createDocumentBaseConfigSalesChannel(id: ID, documentBaseConfigId: ID, salesChannelId: ID, documentTypeId: ID, documentType: InputDocumentType, documentBaseConfig: InputDocumentBaseConfig, salesChannel: InputSalesChannel): DocumentBaseConfigSalesChannel
  updateDocumentBaseConfigSalesChannel(id: ID!, documentBaseConfigId: ID, salesChannelId: ID, documentTypeId: ID, documentType: InputDocumentType, documentBaseConfig: InputDocumentBaseConfig, salesChannel: InputSalesChannel): DocumentBaseConfigSalesChannel
  deleteDocumentBaseConfigSalesChannel(id: ID!): ID
  createOrder(id: ID, versionId: ID, autoIncrement: Int, orderNumber: String, billingAddressId: ID, billingAddressVersionId: ID, currencyId: ID, languageId: ID, salesChannelId: ID, orderDate: Date, amountTotal: Float, amountNet: Float, positionPrice: Float, taxStatus: String, shippingTotal: Float, currencyFactor: Float!, deepLinkCode: String, affiliateCode: String, campaignCode: String, customerComment: String, stateId: ID, stateMachineState: InputStateMachineState, createdById: ID, updatedById: ID, orderCustomer: InputOrderCustomer, currency: InputCurrency, language: InputLanguage, salesChannel: InputSalesChannel, addresses: [InputOrderAddress], billingAddress: InputOrderAddress, deliveries: [InputOrderDelivery], lineItems: [InputOrderLineItem], transactions: [InputOrderTransaction], documents: [InputDocument], tags: [InputOrderTag], createdBy: InputUser, updatedBy: InputUser): Order
  updateOrder(id: ID!, versionId: ID, autoIncrement: Int, orderNumber: String, billingAddressId: ID, billingAddressVersionId: ID, currencyId: ID, languageId: ID, salesChannelId: ID, orderDate: Date, amountTotal: Float, amountNet: Float, positionPrice: Float, taxStatus: String, shippingTotal: Float, currencyFactor: Float, deepLinkCode: String, affiliateCode: String, campaignCode: String, customerComment: String, stateId: ID, stateMachineState: InputStateMachineState, createdById: ID, updatedById: ID, orderCustomer: InputOrderCustomer, currency: InputCurrency, language: InputLanguage, salesChannel: InputSalesChannel, addresses: [InputOrderAddress], billingAddress: InputOrderAddress, deliveries: [InputOrderDelivery], lineItems: [InputOrderLineItem], transactions: [InputOrderTransaction], documents: [InputDocument], tags: [InputOrderTag], createdBy: InputUser, updatedBy: InputUser): Order
  deleteOrder(id: ID!, versionId: ID): ID
  createOrderAddress(id: ID, versionId: ID, countryId: ID, countryStateId: ID, orderId: ID, orderVersionId: ID, salutationId: ID, firstName: String!, lastName: String!, street: String!, zipcode: String!, city: String!, company: String, department: String, title: String, vatId: String, phoneNumber: String, additionalAddressLine1: String, additionalAddressLine2: String, country: InputCountry, countryState: InputCountryState, order: InputOrder, orderDeliveries: [InputOrderDelivery], salutation: InputSalutation): OrderAddress
  updateOrderAddress(id: ID!, versionId: ID, countryId: ID, countryStateId: ID, orderId: ID, orderVersionId: ID, salutationId: ID, firstName: String, lastName: String, street: String, zipcode: String, city: String, company: String, department: String, title: String, vatId: String, phoneNumber: String, additionalAddressLine1: String, additionalAddressLine2: String, country: InputCountry, countryState: InputCountryState, order: InputOrder, orderDeliveries: [InputOrderDelivery], salutation: InputSalutation): OrderAddress
  deleteOrderAddress(id: ID!, versionId: ID): ID
  createOrderCustomer(id: ID, versionId: ID, customerId: ID, orderId: ID, orderVersionId: ID, email: String!, salutationId: ID, firstName: String!, lastName: String!, company: String, title: String, customerNumber: String, order: InputOrder, customer: InputCustomer, salutation: InputSalutation): OrderCustomer
  updateOrderCustomer(id: ID!, versionId: ID, customerId: ID, orderId: ID, orderVersionId: ID, email: String, salutationId: ID, firstName: String, lastName: String, company: String, title: String, customerNumber: String, order: InputOrder, customer: InputCustomer, salutation: InputSalutation): OrderCustomer
  deleteOrderCustomer(id: ID!, versionId: ID): ID
  createOrderDelivery(id: ID, versionId: ID, orderId: ID, orderVersionId: ID, shippingOrderAddressId: ID, shippingOrderAddressVersionId: ID, shippingMethodId: ID, stateId: ID, stateMachineState: InputStateMachineState, order: InputOrder, shippingOrderAddress: InputOrderAddress, shippingMethod: InputShippingMethod, positions: [InputOrderDeliveryPosition]): OrderDelivery
  updateOrderDelivery(id: ID!, versionId: ID, orderId: ID, orderVersionId: ID, shippingOrderAddressId: ID, shippingOrderAddressVersionId: ID, shippingMethodId: ID, stateId: ID, stateMachineState: InputStateMachineState, order: InputOrder, shippingOrderAddress: InputOrderAddress, shippingMethod: InputShippingMethod, positions: [InputOrderDeliveryPosition]): OrderDelivery
  deleteOrderDelivery(id: ID!, versionId: ID): ID
  createOrderDeliveryPosition(id: ID, versionId: ID, orderDeliveryId: ID, orderDeliveryVersionId: ID, orderLineItemId: ID, orderLineItemVersionId: ID, unitPrice: Float, totalPrice: Float, quantity: Int, orderDelivery: InputOrderDelivery, orderLineItem: InputOrderLineItem): OrderDeliveryPosition
  updateOrderDeliveryPosition(id: ID!, versionId: ID, orderDeliveryId: ID, orderDeliveryVersionId: ID, orderLineItemId: ID, orderLineItemVersionId: ID, unitPrice: Float, totalPrice: Float, quantity: Int, orderDelivery: InputOrderDelivery, orderLineItem: InputOrderLineItem): OrderDeliveryPosition
  deleteOrderDeliveryPosition(id: ID!, versionId: ID): ID
  createOrderLineItem(id: ID, versionId: ID, orderId: ID, orderVersionId: ID, productId: ID, productVersionId: ID, parentId: ID, parentVersionId: ID, coverId: ID, cover: InputMedia, identifier: String!, referencedId: String, quantity: Int!, label: String!, good: Boolean, removable: Boolean, stackable: Boolean, position: Int! = 1, unitPrice: Float, totalPrice: Float, description: String, type: String, order: InputOrder, product: InputProduct, orderDeliveryPositions: [InputOrderDeliveryPosition], parent: InputOrderLineItem, children: [InputOrderLineItem]!): OrderLineItem
  updateOrderLineItem(id: ID!, versionId: ID, orderId: ID, orderVersionId: ID, productId: ID, productVersionId: ID, parentId: ID, parentVersionId: ID, coverId: ID, cover: InputMedia, identifier: String, referencedId: String, quantity: Int, label: String, good: Boolean, removable: Boolean, stackable: Boolean, position: Int, unitPrice: Float, totalPrice: Float, description: String, type: String, order: InputOrder, product: InputProduct, orderDeliveryPositions: [InputOrderDeliveryPosition], parent: InputOrderLineItem, children: [InputOrderLineItem]): OrderLineItem
  deleteOrderLineItem(id: ID!, versionId: ID): ID
  createOrderTransaction(id: ID, versionId: ID, orderId: ID, orderVersionId: ID, paymentMethodId: ID, stateId: ID, stateMachineState: InputStateMachineState, order: InputOrder, paymentMethod: InputPaymentMethod): OrderTransaction
  updateOrderTransaction(id: ID!, versionId: ID, orderId: ID, orderVersionId: ID, paymentMethodId: ID, stateId: ID, stateMachineState: InputStateMachineState, order: InputOrder, paymentMethod: InputPaymentMethod): OrderTransaction
  deleteOrderTransaction(id: ID!, versionId: ID): ID
  createPaymentMethod(id: ID, pluginId: ID, handlerIdentifier: String, name: String, distinguishableName: String, description: String, position: Int, active: Boolean, afterOrderEnabled: Boolean, customFields: String, availabilityRuleId: ID, mediaId: ID, formattedHandlerIdentifier: String, synchronous: Boolean, asynchronous: Boolean, prepared: Boolean, translations: [InputPaymentMethodTranslation], media: InputMedia, availabilityRule: InputRule, salesChannelDefaultAssignments: [InputSalesChannel], plugin: InputPlugin, customers: [InputCustomer], orderTransactions: [InputOrderTransaction], salesChannels: [InputSalesChannelPaymentMethod], appPaymentMethod: InputAppPaymentMethod): PaymentMethod
  updatePaymentMethod(id: ID!, pluginId: ID, handlerIdentifier: String, name: String, distinguishableName: String, description: String, position: Int, active: Boolean, afterOrderEnabled: Boolean, customFields: String, availabilityRuleId: ID, mediaId: ID, formattedHandlerIdentifier: String, synchronous: Boolean, asynchronous: Boolean, prepared: Boolean, translations: [InputPaymentMethodTranslation], media: InputMedia, availabilityRule: InputRule, salesChannelDefaultAssignments: [InputSalesChannel], plugin: InputPlugin, customers: [InputCustomer], orderTransactions: [InputOrderTransaction], salesChannels: [InputSalesChannelPaymentMethod], appPaymentMethod: InputAppPaymentMethod): PaymentMethod
  deletePaymentMethod(id: ID!): ID
  createPromotion(id: ID, name: String, active: Boolean! = false, maxRedemptionsGlobal: Int = null, maxRedemptionsPerCustomer: Int = null, exclusive: Boolean! = false, code: String, useCodes: Boolean! = false, useIndividualCodes: Boolean! = false, individualCodePattern: String = "", useSetGroups: Boolean! = false, customerRestriction: Boolean, preventCombination: Boolean! = false, orderCount: Int, setgroups: [InputPromotionSetgroup], salesChannels: [InputPromotionSalesChannel], discounts: [InputPromotionDiscount], individualCodes: [InputPromotionIndividualCode], personaRules: [InputPromotionPersonaRule], personaCustomers: [InputPromotionPersonaCustomer], orderRules: [InputPromotionOrderRule], cartRules: [InputPromotionCartRule], translations: [InputPromotionTranslation], customFields: String): Promotion
  updatePromotion(id: ID!, name: String, active: Boolean, maxRedemptionsGlobal: Int, maxRedemptionsPerCustomer: Int, exclusive: Boolean, code: String, useCodes: Boolean, useIndividualCodes: Boolean, individualCodePattern: String, useSetGroups: Boolean, customerRestriction: Boolean, preventCombination: Boolean, orderCount: Int, setgroups: [InputPromotionSetgroup], salesChannels: [InputPromotionSalesChannel], discounts: [InputPromotionDiscount], individualCodes: [InputPromotionIndividualCode], personaRules: [InputPromotionPersonaRule], personaCustomers: [InputPromotionPersonaCustomer], orderRules: [InputPromotionOrderRule], cartRules: [InputPromotionCartRule], translations: [InputPromotionTranslation], customFields: String): Promotion
  deletePromotion(id: ID!): ID
  createPromotionSalesChannel(id: ID, promotionId: ID, salesChannelId: ID, priority: Int!, promotion: InputPromotion, salesChannel: InputSalesChannel): PromotionSalesChannel
  updatePromotionSalesChannel(id: ID!, promotionId: ID, salesChannelId: ID, priority: Int, promotion: InputPromotion, salesChannel: InputSalesChannel): PromotionSalesChannel
  deletePromotionSalesChannel(id: ID!): ID
  createPromotionIndividualCode(id: ID, promotionId: ID, code: String!, promotion: InputPromotion): PromotionIndividualCode
  updatePromotionIndividualCode(id: ID!, promotionId: ID, code: String, promotion: InputPromotion): PromotionIndividualCode
  deletePromotionIndividualCode(id: ID!): ID
  createPromotionDiscount(id: ID, promotionId: ID, scope: String!, type: String!, value: Float!, considerAdvancedRules: Boolean!, maxValue: Float, sorterKey: String, applierKey: String, usageKey: String, pickerKey: String, promotion: InputPromotion, discountRules: [InputPromotionDiscountRule], promotionDiscountPrices: [InputPromotionDiscountPrices]): PromotionDiscount
  updatePromotionDiscount(id: ID!, promotionId: ID, scope: String, type: String, value: Float, considerAdvancedRules: Boolean, maxValue: Float, sorterKey: String, applierKey: String, usageKey: String, pickerKey: String, promotion: InputPromotion, discountRules: [InputPromotionDiscountRule], promotionDiscountPrices: [InputPromotionDiscountPrices]): PromotionDiscount
  deletePromotionDiscount(id: ID!): ID
  createPromotionSetgroup(id: ID, promotionId: ID, packagerKey: String!, sorterKey: String!, value: Float!, promotion: InputPromotion, setGroupRules: [InputPromotionSetgroupRule]): PromotionSetgroup
  updatePromotionSetgroup(id: ID!, promotionId: ID, packagerKey: String, sorterKey: String, value: Float, promotion: InputPromotion, setGroupRules: [InputPromotionSetgroupRule]): PromotionSetgroup
  deletePromotionSetgroup(id: ID!): ID
  createPromotionDiscountPrices(id: ID, discountId: ID, currencyId: ID, price: Float!, promotionDiscount: InputPromotionDiscount, currency: InputCurrency): PromotionDiscountPrices
  updatePromotionDiscountPrices(id: ID!, discountId: ID, currencyId: ID, price: Float, promotionDiscount: InputPromotionDiscount, currency: InputCurrency): PromotionDiscountPrices
  deletePromotionDiscountPrices(id: ID!): ID
  createShippingMethod(id: ID, name: String, active: Boolean, customFields: String, availabilityRuleId: ID, mediaId: ID, deliveryTimeId: ID, taxType: String! = "auto", taxId: ID, deliveryTime: InputDeliveryTime, description: String, trackingUrl: String, translations: [InputShippingMethodTranslation], availabilityRule: InputRule, prices: [InputShippingMethodPrice], media: InputMedia, tags: [InputShippingMethodTag], orderDeliveries: [InputOrderDelivery], salesChannels: [InputSalesChannelShippingMethod], salesChannelDefaultAssignments: [InputSalesChannel], tax: InputTax): ShippingMethod
  updateShippingMethod(id: ID!, name: String, active: Boolean, customFields: String, availabilityRuleId: ID, mediaId: ID, deliveryTimeId: ID, taxType: String, taxId: ID, deliveryTime: InputDeliveryTime, description: String, trackingUrl: String, translations: [InputShippingMethodTranslation], availabilityRule: InputRule, prices: [InputShippingMethodPrice], media: InputMedia, tags: [InputShippingMethodTag], orderDeliveries: [InputOrderDelivery], salesChannels: [InputSalesChannelShippingMethod], salesChannelDefaultAssignments: [InputSalesChannel], tax: InputTax): ShippingMethod
  deleteShippingMethod(id: ID!): ID
  createShippingMethodPrice(id: ID, shippingMethodId: ID, ruleId: ID, calculation: Int, calculationRuleId: ID, quantityStart: Float, quantityEnd: Float, shippingMethod: InputShippingMethod, rule: InputRule, calculationRule: InputRule): ShippingMethodPrice
  updateShippingMethodPrice(id: ID!, shippingMethodId: ID, ruleId: ID, calculation: Int, calculationRuleId: ID, quantityStart: Float, quantityEnd: Float, shippingMethod: InputShippingMethod, rule: InputRule, calculationRule: InputRule): ShippingMethodPrice
  deleteShippingMethodPrice(id: ID!): ID
  createTheme(id: ID, technicalName: String, name: String!, author: String!, description: String, labels: String, helpTexts: String, customFields: String, previewMediaId: ID, parentThemeId: ID, active: Boolean!, translations: [InputThemeTranslation], salesChannels: [InputThemeSalesChannel], media: [InputThemeMedia], previewMedia: InputMedia, childThemes: [InputTheme]): Theme
  updateTheme(id: ID!, technicalName: String, name: String, author: String, description: String, labels: String, helpTexts: String, customFields: String, previewMediaId: ID, parentThemeId: ID, active: Boolean, translations: [InputThemeTranslation], salesChannels: [InputThemeSalesChannel], media: [InputThemeMedia], previewMedia: InputMedia, childThemes: [InputTheme]): Theme
  deleteTheme(id: ID!): ID

  """Dissolves a media folder and puts the content one level higher."""
  dissolveMediaFolder(mediaFolderId: ID!): ID!

  """Provides a unique filename based on the given one."""
  provideFileName(fileName: String!, fileExtension: String!, mediaId: ID): String!

  """Renames the file with the given ID."""
  renameMedia(mediaId: ID!, fileName: String!): Media
}

type Named {
  __typename: String
  id: ID!
  name: String!
  optionalGroupId: ID
  optionalGroup: NamedOptionalGroup
}

"""The Result for a search that returns multiple Items"""
type NamedConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [NamedEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  optionalGroupId: ID
  optionalGroup: NamedOptionalGroup
}

"""Contains the information for one Edge"""
type NamedEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Named

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type NamedOptionalGroup {
  __typename: String
  id: ID!
  name: String!
  nameds(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NamedConnection
}

"""The Result for a search that returns multiple Items"""
type NamedOptionalGroupConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [NamedOptionalGroupEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  nameds(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NamedConnection
}

"""Contains the information for one Edge"""
type NamedOptionalGroupEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: NamedOptionalGroup

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type NewsletterRecipient {
  __typename: String
  id: ID!
  email: String!
  title: String
  firstName: String
  lastName: String
  zipCode: String
  city: String
  street: String
  status: String!
  hash: String!
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientTagConnection
  salutationId: ID
  salutation: Salutation
  languageId: ID!
  language: Language
  salesChannelId: ID!
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type NewsletterRecipientConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [NewsletterRecipientEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  email: String!
  title: String
  firstName: String
  lastName: String
  zipCode: String
  city: String
  street: String
  status: String!
  hash: String!
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientTagConnection
  salutationId: ID
  salutation: Salutation
  languageId: ID!
  language: Language
  salesChannelId: ID!
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type NewsletterRecipientEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: NewsletterRecipient

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type NewsletterRecipientTag {
  __typename: String
  newsletterRecipientId: ID!
  tagId: ID!
  newsletterRecipient: NewsletterRecipient
  tag: Tag
}

"""The Result for a search that returns multiple Items"""
type NewsletterRecipientTagConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [NewsletterRecipientTagEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  newsletterRecipientId: ID!
  tagId: ID!
  newsletterRecipient: NewsletterRecipient
  tag: Tag
}

"""Contains the information for one Edge"""
type NewsletterRecipientTagEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: NewsletterRecipientTag

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type NumberRange {
  __typename: String
  id: ID!
  typeId: ID!
  global: Boolean!
  name: String
  description: String
  pattern: String!
  start: Int!
  customFields: String
  type: NumberRangeType
  numberRangeSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeSalesChannelConnection
  state: NumberRangeState
  translations: NumberRangeTranslationConnection!
}

"""The Result for a search that returns multiple Items"""
type NumberRangeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [NumberRangeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  typeId: ID!
  global: Boolean!
  name: String
  description: String
  pattern: String!
  start: Int!
  customFields: String
  type: NumberRangeType
  numberRangeSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeSalesChannelConnection
  state: NumberRangeState
  translations: NumberRangeTranslationConnection!
}

"""Contains the information for one Edge"""
type NumberRangeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: NumberRange

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type NumberRangeSalesChannel {
  __typename: String
  id: ID!
  numberRangeId: ID!
  salesChannelId: ID!
  numberRangeTypeId: ID
  numberRange: NumberRange
  salesChannel: SalesChannel
  numberRangeType: NumberRangeType
}

"""The Result for a search that returns multiple Items"""
type NumberRangeSalesChannelConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [NumberRangeSalesChannelEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  numberRangeId: ID!
  salesChannelId: ID!
  numberRangeTypeId: ID
  numberRange: NumberRange
  salesChannel: SalesChannel
  numberRangeType: NumberRangeType
}

"""Contains the information for one Edge"""
type NumberRangeSalesChannelEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: NumberRangeSalesChannel

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type NumberRangeState {
  __typename: String
  id: ID!
  numberRangeId: ID!
  lastValue: Int!
  numberRange: NumberRange
}

"""The Result for a search that returns multiple Items"""
type NumberRangeStateConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [NumberRangeStateEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  numberRangeId: ID!
  lastValue: Int!
  numberRange: NumberRange
}

"""Contains the information for one Edge"""
type NumberRangeStateEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: NumberRangeState

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type NumberRangeTranslation {
  __typename: String
  name: String!
  description: String
  numberRangeId: ID!
  languageId: ID!
  numberRange: NumberRange
  language: Language
}

"""The Result for a search that returns multiple Items"""
type NumberRangeTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [NumberRangeTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  description: String
  numberRangeId: ID!
  languageId: ID!
  numberRange: NumberRange
  language: Language
}

"""Contains the information for one Edge"""
type NumberRangeTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: NumberRangeTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type NumberRangeType {
  __typename: String
  id: ID!
  technicalName: String
  typeName: String
  global: Boolean!
  customFields: String
  numberRanges(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeConnection
  numberRangeSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeSalesChannelConnection
  translations: NumberRangeTypeTranslationConnection!
}

"""The Result for a search that returns multiple Items"""
type NumberRangeTypeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [NumberRangeTypeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  technicalName: String
  typeName: String
  global: Boolean!
  customFields: String
  numberRanges(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeConnection
  numberRangeSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeSalesChannelConnection
  translations: NumberRangeTypeTranslationConnection!
}

"""Contains the information for one Edge"""
type NumberRangeTypeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: NumberRangeType

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type NumberRangeTypeTranslation {
  __typename: String
  typeName: String!
  numberRangeTypeId: ID!
  languageId: ID!
  numberRangeType: NumberRangeType
  language: Language
}

"""The Result for a search that returns multiple Items"""
type NumberRangeTypeTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [NumberRangeTypeTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  typeName: String!
  numberRangeTypeId: ID!
  languageId: ID!
  numberRangeType: NumberRangeType
  language: Language
}

"""Contains the information for one Edge"""
type NumberRangeTypeTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: NumberRangeTypeTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Order {
  __typename: String
  id: ID!
  versionId: ID!
  autoIncrement: Int
  orderNumber: String
  billingAddressId: ID!
  billingAddressVersionId: ID!
  currencyId: ID!
  languageId: ID!
  salesChannelId: ID!
  orderDate: Date
  amountTotal: Float
  amountNet: Float
  positionPrice: Float
  taxStatus: String
  shippingTotal: Float
  currencyFactor: Float!
  deepLinkCode: String
  affiliateCode: String
  campaignCode: String
  customerComment: String
  stateId: ID!
  stateMachineState: StateMachineState
  createdById: ID
  updatedById: ID
  orderCustomer: OrderCustomer
  currency: Currency
  language: Language
  salesChannel: SalesChannel
  addresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderAddressConnection
  billingAddress: OrderAddress
  deliveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryConnection
  lineItems(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderLineItemConnection
  transactions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTransactionConnection
  documents(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentConnection
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTagConnection
  createdBy: User
  updatedBy: User
}

type OrderAddress {
  __typename: String
  id: ID!
  versionId: ID!
  countryId: ID!
  countryStateId: ID
  orderId: ID!
  orderVersionId: ID!
  salutationId: ID!
  firstName: String!
  lastName: String!
  street: String!
  zipcode: String!
  city: String!
  company: String
  department: String
  title: String
  vatId: String
  phoneNumber: String
  additionalAddressLine1: String
  additionalAddressLine2: String
  country: Country
  countryState: CountryState
  order: Order
  orderDeliveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryConnection
  salutation: Salutation
}

"""The Result for a search that returns multiple Items"""
type OrderAddressConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [OrderAddressEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  countryId: ID!
  countryStateId: ID
  orderId: ID!
  orderVersionId: ID!
  salutationId: ID!
  firstName: String!
  lastName: String!
  street: String!
  zipcode: String!
  city: String!
  company: String
  department: String
  title: String
  vatId: String
  phoneNumber: String
  additionalAddressLine1: String
  additionalAddressLine2: String
  country: Country
  countryState: CountryState
  order: Order
  orderDeliveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryConnection
  salutation: Salutation
}

"""Contains the information for one Edge"""
type OrderAddressEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: OrderAddress

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type OrderConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [OrderEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  autoIncrement: Int
  orderNumber: String
  billingAddressId: ID!
  billingAddressVersionId: ID!
  currencyId: ID!
  languageId: ID!
  salesChannelId: ID!
  orderDate: Date
  amountTotal: Float
  amountNet: Float
  positionPrice: Float
  taxStatus: String
  shippingTotal: Float
  currencyFactor: Float!
  deepLinkCode: String
  affiliateCode: String
  campaignCode: String
  customerComment: String
  stateId: ID!
  stateMachineState: StateMachineState
  createdById: ID
  updatedById: ID
  orderCustomer: OrderCustomer
  currency: Currency
  language: Language
  salesChannel: SalesChannel
  addresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderAddressConnection
  billingAddress: OrderAddress
  deliveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryConnection
  lineItems(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderLineItemConnection
  transactions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTransactionConnection
  documents(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentConnection
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTagConnection
  createdBy: User
  updatedBy: User
}

type OrderCustomer {
  __typename: String
  id: ID!
  versionId: ID!
  customerId: ID
  orderId: ID!
  orderVersionId: ID!
  email: String!
  salutationId: ID!
  firstName: String!
  lastName: String!
  company: String
  title: String
  customerNumber: String
  order: Order
  customer: Customer
  salutation: Salutation
}

"""The Result for a search that returns multiple Items"""
type OrderCustomerConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [OrderCustomerEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  customerId: ID
  orderId: ID!
  orderVersionId: ID!
  email: String!
  salutationId: ID!
  firstName: String!
  lastName: String!
  company: String
  title: String
  customerNumber: String
  order: Order
  customer: Customer
  salutation: Salutation
}

"""Contains the information for one Edge"""
type OrderCustomerEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: OrderCustomer

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type OrderDelivery {
  __typename: String
  id: ID!
  versionId: ID!
  orderId: ID!
  orderVersionId: ID!
  shippingOrderAddressId: ID!
  shippingOrderAddressVersionId: ID!
  shippingMethodId: ID!
  stateId: ID!
  stateMachineState: StateMachineState
  order: Order
  shippingOrderAddress: OrderAddress
  shippingMethod: ShippingMethod
  positions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryPositionConnection
}

"""The Result for a search that returns multiple Items"""
type OrderDeliveryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [OrderDeliveryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  orderId: ID!
  orderVersionId: ID!
  shippingOrderAddressId: ID!
  shippingOrderAddressVersionId: ID!
  shippingMethodId: ID!
  stateId: ID!
  stateMachineState: StateMachineState
  order: Order
  shippingOrderAddress: OrderAddress
  shippingMethod: ShippingMethod
  positions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryPositionConnection
}

"""Contains the information for one Edge"""
type OrderDeliveryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: OrderDelivery

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type OrderDeliveryPosition {
  __typename: String
  id: ID!
  versionId: ID!
  orderDeliveryId: ID!
  orderDeliveryVersionId: ID!
  orderLineItemId: ID!
  orderLineItemVersionId: ID!
  unitPrice: Float
  totalPrice: Float
  quantity: Int
  orderDelivery: OrderDelivery
  orderLineItem: OrderLineItem
}

"""The Result for a search that returns multiple Items"""
type OrderDeliveryPositionConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [OrderDeliveryPositionEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  orderDeliveryId: ID!
  orderDeliveryVersionId: ID!
  orderLineItemId: ID!
  orderLineItemVersionId: ID!
  unitPrice: Float
  totalPrice: Float
  quantity: Int
  orderDelivery: OrderDelivery
  orderLineItem: OrderLineItem
}

"""Contains the information for one Edge"""
type OrderDeliveryPositionEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: OrderDeliveryPosition

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""Contains the information for one Edge"""
type OrderEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Order

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type OrderLineItem {
  __typename: String
  id: ID!
  versionId: ID!
  orderId: ID!
  orderVersionId: ID!
  productId: ID
  productVersionId: ID!
  parentId: ID
  parentVersionId: ID!
  coverId: ID
  cover: Media
  identifier: String!
  referencedId: String
  quantity: Int!
  label: String!
  good: Boolean
  removable: Boolean
  stackable: Boolean
  position: Int!
  unitPrice: Float
  totalPrice: Float
  description: String
  type: String
  order: Order
  product: Product
  orderDeliveryPositions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryPositionConnection
  parent: OrderLineItem
  children: OrderLineItemConnection!
}

"""The Result for a search that returns multiple Items"""
type OrderLineItemConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [OrderLineItemEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  orderId: ID!
  orderVersionId: ID!
  productId: ID
  productVersionId: ID!
  parentId: ID
  parentVersionId: ID!
  coverId: ID
  cover: Media
  identifier: String!
  referencedId: String
  quantity: Int!
  label: String!
  good: Boolean
  removable: Boolean
  stackable: Boolean
  position: Int!
  unitPrice: Float
  totalPrice: Float
  description: String
  type: String
  order: Order
  product: Product
  orderDeliveryPositions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryPositionConnection
  parent: OrderLineItem
  children: OrderLineItemConnection!
}

"""Contains the information for one Edge"""
type OrderLineItemEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: OrderLineItem

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type OrderTag {
  __typename: String
  orderId: ID!
  orderVersionId: ID!
  tagId: ID!
  order: Order
  tag: Tag
}

"""The Result for a search that returns multiple Items"""
type OrderTagConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [OrderTagEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  orderId: ID!
  orderVersionId: ID!
  tagId: ID!
  order: Order
  tag: Tag
}

"""Contains the information for one Edge"""
type OrderTagEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: OrderTag

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type OrderTransaction {
  __typename: String
  id: ID!
  versionId: ID!
  orderId: ID!
  orderVersionId: ID!
  paymentMethodId: ID!
  stateId: ID!
  stateMachineState: StateMachineState
  order: Order
  paymentMethod: PaymentMethod
}

"""The Result for a search that returns multiple Items"""
type OrderTransactionConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [OrderTransactionEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  orderId: ID!
  orderVersionId: ID!
  paymentMethodId: ID!
  stateId: ID!
  stateMachineState: StateMachineState
  order: Order
  paymentMethod: PaymentMethod
}

"""Contains the information for one Edge"""
type OrderTransactionEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: OrderTransaction

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""
Contains information about the current Page fetched from the Connection
"""
type PageInfo {
  __typename: String

  """The cursor to the last element in the current Connection"""
  endCursor: ID

  """The cursor to the first element in the current Connection"""
  startCursor: ID

  """Shows if there are more Items"""
  hasNextPage: Boolean

  """Shows if there are previous Items"""
  hasPreviousPage: Boolean
}

input Parameter {
  __typename: String

  """The operator used to compare the field and the value"""
  operator: RangeOperator!

  """The value with which the field will be compared"""
  value: Float!
}

type PaymentMethod {
  __typename: String
  id: ID!
  pluginId: ID
  handlerIdentifier: String
  name: String
  distinguishableName: String
  description: String
  position: Int
  active: Boolean
  afterOrderEnabled: Boolean
  customFields: String
  availabilityRuleId: ID
  mediaId: ID
  formattedHandlerIdentifier: String
  synchronous: Boolean
  asynchronous: Boolean
  prepared: Boolean
  translations: PaymentMethodTranslationConnection!
  media: Media
  availabilityRule: Rule
  salesChannelDefaultAssignments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  plugin: Plugin
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  orderTransactions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTransactionConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelPaymentMethodConnection
  appPaymentMethod: AppPaymentMethod
}

"""The Result for a search that returns multiple Items"""
type PaymentMethodConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PaymentMethodEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  pluginId: ID
  handlerIdentifier: String
  name: String
  distinguishableName: String
  description: String
  position: Int
  active: Boolean
  afterOrderEnabled: Boolean
  customFields: String
  availabilityRuleId: ID
  mediaId: ID
  formattedHandlerIdentifier: String
  synchronous: Boolean
  asynchronous: Boolean
  prepared: Boolean
  translations: PaymentMethodTranslationConnection!
  media: Media
  availabilityRule: Rule
  salesChannelDefaultAssignments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  plugin: Plugin
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  orderTransactions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTransactionConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelPaymentMethodConnection
  appPaymentMethod: AppPaymentMethod
}

"""Contains the information for one Edge"""
type PaymentMethodEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PaymentMethod

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PaymentMethodTranslation {
  __typename: String
  name: String!
  distinguishableName: String
  description: String
  paymentMethodId: ID!
  languageId: ID!
  paymentMethod: PaymentMethod
  language: Language
}

"""The Result for a search that returns multiple Items"""
type PaymentMethodTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PaymentMethodTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  distinguishableName: String
  description: String
  paymentMethodId: ID!
  languageId: ID!
  paymentMethod: PaymentMethod
  language: Language
}

"""Contains the information for one Edge"""
type PaymentMethodTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PaymentMethodTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Plugin {
  __typename: String
  id: ID!
  baseClass: String!
  name: String!
  composerName: String
  active: Boolean
  managedByComposer: Boolean
  path: String
  author: String
  copyright: String
  license: String
  version: String!
  upgradeVersion: String
  icon: String
  label: String
  description: String
  manufacturerLink: String
  supportLink: String
  changelog: String
  customFields: String
  translations: PluginTranslationConnection!
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PaymentMethodConnection
}

"""The Result for a search that returns multiple Items"""
type PluginConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PluginEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  baseClass: String!
  name: String!
  composerName: String
  active: Boolean
  managedByComposer: Boolean
  path: String
  author: String
  copyright: String
  license: String
  version: String!
  upgradeVersion: String
  icon: String
  label: String
  description: String
  manufacturerLink: String
  supportLink: String
  changelog: String
  customFields: String
  translations: PluginTranslationConnection!
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PaymentMethodConnection
}

"""Contains the information for one Edge"""
type PluginEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Plugin

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PluginTranslation {
  __typename: String
  label: String!
  description: String
  manufacturerLink: String
  supportLink: String
  pluginId: ID!
  languageId: ID!
  plugin: Plugin
  language: Language
}

"""The Result for a search that returns multiple Items"""
type PluginTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PluginTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  label: String!
  description: String
  manufacturerLink: String
  supportLink: String
  pluginId: ID!
  languageId: ID!
  plugin: Plugin
  language: Language
}

"""Contains the information for one Edge"""
type PluginTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PluginTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Product {
  __typename: String
  id: ID!
  versionId: ID!
  parentId: ID
  parentVersionId: ID!
  manufacturerId: ID
  productManufacturerVersionId: ID!
  unitId: ID
  taxId: ID!
  coverId: ID
  productMediaVersionId: ID
  deliveryTimeId: ID
  featureSetId: ID
  canonicalProductId: ID
  cmsPageId: ID
  cmsPageVersionId: ID!
  productNumber: String!
  stock: Int!
  restockTime: Int
  autoIncrement: Int
  active: Boolean
  availableStock: Int
  available: Boolean
  isCloseout: Boolean
  displayGroup: String
  mainVariantId: ID
  manufacturerNumber: String
  ean: String
  purchaseSteps: Int
  maxPurchase: Int
  minPurchase: Int
  purchaseUnit: Float
  referenceUnit: Float
  shippingFree: Boolean
  markAsTopseller: Boolean
  weight: Float
  width: Float
  height: Float
  length: Float
  ratingAverage: Float
  childCount: Int
  customFieldSetSelectionActive: Boolean
  sales: Int
  metaDescription: String
  name: String
  keywords: String
  description: String
  metaTitle: String
  packUnit: String
  packUnitPlural: String
  customFields: String
  slotConfig: String
  customSearchKeywords: String
  parent: Product
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  deliveryTime: DeliveryTime
  tax: Tax
  manufacturer: ProductManufacturer
  unit: Unit
  cover: ProductMedia
  featureSet: ProductFeatureSet
  cmsPage: CmsPage
  canonicalProduct: Product
  prices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductPriceConnection
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductMediaConnection
  crossSellings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingConnection
  crossSellingAssignedProducts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingAssignedProductsConnection
  configuratorSettings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConfiguratorSettingConnection
  visibilities(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductVisibilityConnection
  searchKeywords(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchKeywordConnection
  productReviews(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductReviewConnection
  mainCategories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MainCategoryConnection
  seoUrls(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
  orderLineItems(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderLineItemConnection
  wishlists(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerWishlistProductConnection
  options(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductOptionConnection
  properties(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductPropertyConnection
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCategoryConnection
  streams(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductStreamMappingConnection
  categoriesRo(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCategoryTreeConnection
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductTagConnection
  customFieldSets(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCustomFieldSetConnection
  translations: ProductTranslationConnection!
}

type ProductCategory {
  __typename: String
  productId: ID!
  productVersionId: ID!
  categoryId: ID!
  categoryVersionId: ID!
  product: Product
  category: Category
}

"""The Result for a search that returns multiple Items"""
type ProductCategoryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductCategoryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  productId: ID!
  productVersionId: ID!
  categoryId: ID!
  categoryVersionId: ID!
  product: Product
  category: Category
}

"""Contains the information for one Edge"""
type ProductCategoryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductCategory

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductCategoryTree {
  __typename: String
  productId: ID!
  productVersionId: ID!
  categoryId: ID!
  categoryVersionId: ID!
  product: Product
  category: Category
}

"""The Result for a search that returns multiple Items"""
type ProductCategoryTreeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductCategoryTreeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  productId: ID!
  productVersionId: ID!
  categoryId: ID!
  categoryVersionId: ID!
  product: Product
  category: Category
}

"""Contains the information for one Edge"""
type ProductCategoryTreeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductCategoryTree

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductConfiguratorSetting {
  __typename: String
  id: ID!
  versionId: ID!
  productId: ID!
  productVersionId: ID!
  mediaId: ID
  optionId: ID!
  position: Int
  product: Product
  media: Media
  option: PropertyGroupOption
}

"""The Result for a search that returns multiple Items"""
type ProductConfiguratorSettingConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductConfiguratorSettingEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  productId: ID!
  productVersionId: ID!
  mediaId: ID
  optionId: ID!
  position: Int
  product: Product
  media: Media
  option: PropertyGroupOption
}

"""Contains the information for one Edge"""
type ProductConfiguratorSettingEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductConfiguratorSetting

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type ProductConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  parentId: ID
  parentVersionId: ID!
  manufacturerId: ID
  productManufacturerVersionId: ID!
  unitId: ID
  taxId: ID!
  coverId: ID
  productMediaVersionId: ID
  deliveryTimeId: ID
  featureSetId: ID
  canonicalProductId: ID
  cmsPageId: ID
  cmsPageVersionId: ID!
  productNumber: String!
  stock: Int!
  restockTime: Int
  autoIncrement: Int
  active: Boolean
  availableStock: Int
  available: Boolean
  isCloseout: Boolean
  displayGroup: String
  mainVariantId: ID
  manufacturerNumber: String
  ean: String
  purchaseSteps: Int
  maxPurchase: Int
  minPurchase: Int
  purchaseUnit: Float
  referenceUnit: Float
  shippingFree: Boolean
  markAsTopseller: Boolean
  weight: Float
  width: Float
  height: Float
  length: Float
  ratingAverage: Float
  childCount: Int
  customFieldSetSelectionActive: Boolean
  sales: Int
  metaDescription: String
  name: String
  keywords: String
  description: String
  metaTitle: String
  packUnit: String
  packUnitPlural: String
  customFields: String
  slotConfig: String
  customSearchKeywords: String
  parent: Product
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  deliveryTime: DeliveryTime
  tax: Tax
  manufacturer: ProductManufacturer
  unit: Unit
  cover: ProductMedia
  featureSet: ProductFeatureSet
  cmsPage: CmsPage
  canonicalProduct: Product
  prices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductPriceConnection
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductMediaConnection
  crossSellings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingConnection
  crossSellingAssignedProducts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingAssignedProductsConnection
  configuratorSettings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConfiguratorSettingConnection
  visibilities(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductVisibilityConnection
  searchKeywords(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchKeywordConnection
  productReviews(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductReviewConnection
  mainCategories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MainCategoryConnection
  seoUrls(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
  orderLineItems(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderLineItemConnection
  wishlists(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerWishlistProductConnection
  options(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductOptionConnection
  properties(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductPropertyConnection
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCategoryConnection
  streams(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductStreamMappingConnection
  categoriesRo(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCategoryTreeConnection
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductTagConnection
  customFieldSets(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCustomFieldSetConnection
  translations: ProductTranslationConnection!
}

type ProductCrossSelling {
  __typename: String
  id: ID!
  name: String!
  position: Int!
  sortBy: String
  sortDirection: String
  type: String!
  active: Boolean
  limit: Int
  productId: ID!
  productVersionId: ID!
  product: Product
  productStreamId: ID
  productStream: ProductStream
  assignedProducts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingAssignedProductsConnection
  translations: ProductCrossSellingTranslationConnection!
}

type ProductCrossSellingAssignedProducts {
  __typename: String
  id: ID!
  crossSellingId: ID!
  productId: ID!
  productVersionId: ID!
  product: Product
  crossSelling: ProductCrossSelling
  position: Int
}

"""The Result for a search that returns multiple Items"""
type ProductCrossSellingAssignedProductsConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductCrossSellingAssignedProductsEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  crossSellingId: ID!
  productId: ID!
  productVersionId: ID!
  product: Product
  crossSelling: ProductCrossSelling
  position: Int
}

"""Contains the information for one Edge"""
type ProductCrossSellingAssignedProductsEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductCrossSellingAssignedProducts

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type ProductCrossSellingConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductCrossSellingEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  position: Int!
  sortBy: String
  sortDirection: String
  type: String!
  active: Boolean
  limit: Int
  productId: ID!
  productVersionId: ID!
  product: Product
  productStreamId: ID
  productStream: ProductStream
  assignedProducts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingAssignedProductsConnection
  translations: ProductCrossSellingTranslationConnection!
}

"""Contains the information for one Edge"""
type ProductCrossSellingEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductCrossSelling

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductCrossSellingTranslation {
  __typename: String
  name: String!
  productCrossSellingId: ID!
  languageId: ID!
  productCrossSelling: ProductCrossSelling
  language: Language
}

"""The Result for a search that returns multiple Items"""
type ProductCrossSellingTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductCrossSellingTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  productCrossSellingId: ID!
  languageId: ID!
  productCrossSelling: ProductCrossSelling
  language: Language
}

"""Contains the information for one Edge"""
type ProductCrossSellingTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductCrossSellingTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductCustomFieldSet {
  __typename: String
  productId: ID!
  customFieldSetId: ID!
  productVersionId: ID!
  product: Product
  customFieldSet: CustomFieldSet
}

"""The Result for a search that returns multiple Items"""
type ProductCustomFieldSetConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductCustomFieldSetEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  productId: ID!
  customFieldSetId: ID!
  productVersionId: ID!
  product: Product
  customFieldSet: CustomFieldSet
}

"""Contains the information for one Edge"""
type ProductCustomFieldSetEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductCustomFieldSet

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""Contains the information for one Edge"""
type ProductEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Product

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductExport {
  __typename: String
  id: ID!
  productStreamId: ID!
  storefrontSalesChannelId: ID!
  salesChannelId: ID!
  salesChannelDomainId: ID!
  currencyId: ID!
  fileName: String!
  accessKey: String!
  encoding: String!
  fileFormat: String!
  includeVariants: Boolean
  generateByCronjob: Boolean!
  interval: Int!
  headerTemplate: String
  bodyTemplate: String
  footerTemplate: String
  pausedSchedule: Boolean
  productStream: ProductStream
  storefrontSalesChannel: SalesChannel
  salesChannel: SalesChannel
  salesChannelDomain: SalesChannelDomain
  currency: Currency
}

"""The Result for a search that returns multiple Items"""
type ProductExportConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductExportEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  productStreamId: ID!
  storefrontSalesChannelId: ID!
  salesChannelId: ID!
  salesChannelDomainId: ID!
  currencyId: ID!
  fileName: String!
  accessKey: String!
  encoding: String!
  fileFormat: String!
  includeVariants: Boolean
  generateByCronjob: Boolean!
  interval: Int!
  headerTemplate: String
  bodyTemplate: String
  footerTemplate: String
  pausedSchedule: Boolean
  productStream: ProductStream
  storefrontSalesChannel: SalesChannel
  salesChannel: SalesChannel
  salesChannelDomain: SalesChannelDomain
  currency: Currency
}

"""Contains the information for one Edge"""
type ProductExportEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductExport

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductFeatureSet {
  __typename: String
  id: ID!
  name: String
  description: String
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  translations: ProductFeatureSetTranslationConnection!
}

"""The Result for a search that returns multiple Items"""
type ProductFeatureSetConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductFeatureSetEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String
  description: String
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  translations: ProductFeatureSetTranslationConnection!
}

"""Contains the information for one Edge"""
type ProductFeatureSetEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductFeatureSet

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductFeatureSetTranslation {
  __typename: String
  name: String!
  description: String
  productFeatureSetId: ID!
  languageId: ID!
  productFeatureSet: ProductFeatureSet
  language: Language
}

"""The Result for a search that returns multiple Items"""
type ProductFeatureSetTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductFeatureSetTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  description: String
  productFeatureSetId: ID!
  languageId: ID!
  productFeatureSet: ProductFeatureSet
  language: Language
}

"""Contains the information for one Edge"""
type ProductFeatureSetTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductFeatureSetTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductKeywordDictionary {
  __typename: String
  id: ID!
  languageId: ID!
  keyword: String!
  reversed: String
  language: Language
}

"""The Result for a search that returns multiple Items"""
type ProductKeywordDictionaryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductKeywordDictionaryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  languageId: ID!
  keyword: String!
  reversed: String
  language: Language
}

"""Contains the information for one Edge"""
type ProductKeywordDictionaryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductKeywordDictionary

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductManufacturer {
  __typename: String
  id: ID!
  versionId: ID!
  mediaId: ID
  link: String
  name: String
  description: String
  customFields: String
  media: Media
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  translations: ProductManufacturerTranslationConnection!
}

"""The Result for a search that returns multiple Items"""
type ProductManufacturerConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductManufacturerEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  mediaId: ID
  link: String
  name: String
  description: String
  customFields: String
  media: Media
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  translations: ProductManufacturerTranslationConnection!
}

"""Contains the information for one Edge"""
type ProductManufacturerEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductManufacturer

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductManufacturerTranslation {
  __typename: String
  name: String!
  description: String
  productManufacturerId: ID!
  languageId: ID!
  productManufacturer: ProductManufacturer
  language: Language
  productManufacturerVersionId: ID!
}

"""The Result for a search that returns multiple Items"""
type ProductManufacturerTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductManufacturerTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  description: String
  productManufacturerId: ID!
  languageId: ID!
  productManufacturer: ProductManufacturer
  language: Language
  productManufacturerVersionId: ID!
}

"""Contains the information for one Edge"""
type ProductManufacturerTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductManufacturerTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductMedia {
  __typename: String
  id: ID!
  versionId: ID!
  productId: ID!
  productVersionId: ID!
  mediaId: ID!
  position: Int
  product: Product
  media: Media
}

"""The Result for a search that returns multiple Items"""
type ProductMediaConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductMediaEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  productId: ID!
  productVersionId: ID!
  mediaId: ID!
  position: Int
  product: Product
  media: Media
}

"""Contains the information for one Edge"""
type ProductMediaEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductMedia

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductOption {
  __typename: String
  productId: ID!
  productVersionId: ID!
  optionId: ID!
  product: Product
  option: PropertyGroupOption
}

"""The Result for a search that returns multiple Items"""
type ProductOptionConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductOptionEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  productId: ID!
  productVersionId: ID!
  optionId: ID!
  product: Product
  option: PropertyGroupOption
}

"""Contains the information for one Edge"""
type ProductOptionEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductOption

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductPrice {
  __typename: String
  id: ID!
  versionId: ID!
  productId: ID!
  productVersionId: ID!
  ruleId: ID!
  quantityStart: Int!
  quantityEnd: Int
  product: Product
  rule: Rule
}

"""The Result for a search that returns multiple Items"""
type ProductPriceConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductPriceEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  productId: ID!
  productVersionId: ID!
  ruleId: ID!
  quantityStart: Int!
  quantityEnd: Int
  product: Product
  rule: Rule
}

"""Contains the information for one Edge"""
type ProductPriceEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductPrice

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductProperty {
  __typename: String
  productId: ID!
  productVersionId: ID!
  optionId: ID!
  product: Product
  option: PropertyGroupOption
}

"""The Result for a search that returns multiple Items"""
type ProductPropertyConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductPropertyEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  productId: ID!
  productVersionId: ID!
  optionId: ID!
  product: Product
  option: PropertyGroupOption
}

"""Contains the information for one Edge"""
type ProductPropertyEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductProperty

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductReview {
  __typename: String
  id: ID!
  productId: ID!
  productVersionId: ID!
  customerId: ID
  salesChannelId: ID!
  languageId: ID!
  externalUser: String
  externalEmail: String
  title: String!
  content: String!
  points: Float
  status: Boolean
  comment: String
  product: Product
  customer: Customer
  salesChannel: SalesChannel
  language: Language
}

"""The Result for a search that returns multiple Items"""
type ProductReviewConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductReviewEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  productId: ID!
  productVersionId: ID!
  customerId: ID
  salesChannelId: ID!
  languageId: ID!
  externalUser: String
  externalEmail: String
  title: String!
  content: String!
  points: Float
  status: Boolean
  comment: String
  product: Product
  customer: Customer
  salesChannel: SalesChannel
  language: Language
}

"""Contains the information for one Edge"""
type ProductReviewEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductReview

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductSearchConfig {
  __typename: String
  id: ID!
  languageId: ID!
  andLogic: Boolean!
  minSearchLength: Int!
  language: Language
  configFields(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchConfigFieldConnection
}

"""The Result for a search that returns multiple Items"""
type ProductSearchConfigConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductSearchConfigEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  languageId: ID!
  andLogic: Boolean!
  minSearchLength: Int!
  language: Language
  configFields(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchConfigFieldConnection
}

"""Contains the information for one Edge"""
type ProductSearchConfigEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductSearchConfig

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductSearchConfigField {
  __typename: String
  id: ID!
  searchConfigId: ID!
  customFieldId: ID
  field: String!
  tokenize: Boolean!
  searchable: Boolean!
  ranking: Int!
  searchConfig: ProductSearchConfig
  customField: CustomField
}

"""The Result for a search that returns multiple Items"""
type ProductSearchConfigFieldConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductSearchConfigFieldEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  searchConfigId: ID!
  customFieldId: ID
  field: String!
  tokenize: Boolean!
  searchable: Boolean!
  ranking: Int!
  searchConfig: ProductSearchConfig
  customField: CustomField
}

"""Contains the information for one Edge"""
type ProductSearchConfigFieldEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductSearchConfigField

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductSearchKeyword {
  __typename: String
  id: ID!
  versionId: ID!
  languageId: ID!
  productId: ID!
  productVersionId: ID!
  keyword: String!
  ranking: Float!
  product: Product
  language: Language
}

"""The Result for a search that returns multiple Items"""
type ProductSearchKeywordConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductSearchKeywordEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  languageId: ID!
  productId: ID!
  productVersionId: ID!
  keyword: String!
  ranking: Float!
  product: Product
  language: Language
}

"""Contains the information for one Edge"""
type ProductSearchKeywordEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductSearchKeyword

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductSorting {
  __typename: String
  id: ID!
  locked: Boolean
  key: String!
  priority: Int!
  active: Boolean!
  label: String
  translations: ProductSortingTranslationConnection!
}

"""The Result for a search that returns multiple Items"""
type ProductSortingConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductSortingEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  locked: Boolean
  key: String!
  priority: Int!
  active: Boolean!
  label: String
  translations: ProductSortingTranslationConnection!
}

"""Contains the information for one Edge"""
type ProductSortingEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductSorting

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductSortingTranslation {
  __typename: String
  label: String!
  productSortingId: ID!
  languageId: ID!
  productSorting: ProductSorting
  language: Language
}

"""The Result for a search that returns multiple Items"""
type ProductSortingTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductSortingTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  label: String!
  productSortingId: ID!
  languageId: ID!
  productSorting: ProductSorting
  language: Language
}

"""Contains the information for one Edge"""
type ProductSortingTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductSortingTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductStream {
  __typename: String
  id: ID!
  invalid: Boolean
  name: String
  description: String
  customFields: String
  translations: ProductStreamTranslationConnection!
  filters(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductStreamFilterConnection
  productCrossSellings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingConnection
  productExports(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductExportConnection
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryConnection
}

"""The Result for a search that returns multiple Items"""
type ProductStreamConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductStreamEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  invalid: Boolean
  name: String
  description: String
  customFields: String
  translations: ProductStreamTranslationConnection!
  filters(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductStreamFilterConnection
  productCrossSellings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingConnection
  productExports(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductExportConnection
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryConnection
}

"""Contains the information for one Edge"""
type ProductStreamEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductStream

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductStreamFilter {
  __typename: String
  id: ID!
  productStreamId: ID!
  parentId: ID
  type: String!
  field: String
  operator: String
  value: String
  position: Int
  productStream: ProductStream
  parent: ProductStreamFilter
  queries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductStreamFilterConnection
}

"""The Result for a search that returns multiple Items"""
type ProductStreamFilterConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductStreamFilterEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  productStreamId: ID!
  parentId: ID
  type: String!
  field: String
  operator: String
  value: String
  position: Int
  productStream: ProductStream
  parent: ProductStreamFilter
  queries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductStreamFilterConnection
}

"""Contains the information for one Edge"""
type ProductStreamFilterEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductStreamFilter

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductStreamMapping {
  __typename: String
  productId: ID!
  productVersionId: ID!
  productStreamId: ID!
  product: Product
  productStream: ProductStream
}

"""The Result for a search that returns multiple Items"""
type ProductStreamMappingConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductStreamMappingEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  productId: ID!
  productVersionId: ID!
  productStreamId: ID!
  product: Product
  productStream: ProductStream
}

"""Contains the information for one Edge"""
type ProductStreamMappingEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductStreamMapping

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductStreamTranslation {
  __typename: String
  name: String!
  description: String
  productStreamId: ID!
  languageId: ID!
  productStream: ProductStream
  language: Language
}

"""The Result for a search that returns multiple Items"""
type ProductStreamTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductStreamTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  description: String
  productStreamId: ID!
  languageId: ID!
  productStream: ProductStream
  language: Language
}

"""Contains the information for one Edge"""
type ProductStreamTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductStreamTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductTag {
  __typename: String
  productId: ID!
  productVersionId: ID!
  tagId: ID!
  product: Product
  tag: Tag
}

"""The Result for a search that returns multiple Items"""
type ProductTagConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductTagEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  productId: ID!
  productVersionId: ID!
  tagId: ID!
  product: Product
  tag: Tag
}

"""Contains the information for one Edge"""
type ProductTagEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductTag

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductTranslation {
  __typename: String
  metaDescription: String
  name: String!
  keywords: String
  description: String
  metaTitle: String
  packUnit: String
  packUnitPlural: String
  productId: ID!
  languageId: ID!
  product: Product
  language: Language
  productVersionId: ID!
}

"""The Result for a search that returns multiple Items"""
type ProductTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  metaDescription: String
  name: String!
  keywords: String
  description: String
  metaTitle: String
  packUnit: String
  packUnitPlural: String
  productId: ID!
  languageId: ID!
  product: Product
  language: Language
  productVersionId: ID!
}

"""Contains the information for one Edge"""
type ProductTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ProductVisibility {
  __typename: String
  id: ID!
  productId: ID!
  productVersionId: ID!
  salesChannelId: ID!
  visibility: Int!
  salesChannel: SalesChannel
  product: Product
}

"""The Result for a search that returns multiple Items"""
type ProductVisibilityConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ProductVisibilityEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  productId: ID!
  productVersionId: ID!
  salesChannelId: ID!
  visibility: Int!
  salesChannel: SalesChannel
  product: Product
}

"""Contains the information for one Edge"""
type ProductVisibilityEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ProductVisibility

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Promotion {
  __typename: String
  id: ID!
  name: String
  active: Boolean!
  maxRedemptionsGlobal: Int
  maxRedemptionsPerCustomer: Int
  exclusive: Boolean!
  code: String
  useCodes: Boolean!
  useIndividualCodes: Boolean!
  individualCodePattern: String
  useSetGroups: Boolean!
  customerRestriction: Boolean
  preventCombination: Boolean!
  orderCount: Int
  setgroups(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSetgroupConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSalesChannelConnection
  discounts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountConnection
  individualCodes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionIndividualCodeConnection
  personaRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionPersonaRuleConnection
  personaCustomers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionPersonaCustomerConnection
  orderRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionOrderRuleConnection
  cartRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionCartRuleConnection
  translations: PromotionTranslationConnection!
  customFields: String
}

type PromotionCartRule {
  __typename: String
  promotionId: ID!
  ruleId: ID!
  promotion: Promotion
  rule: Rule
}

"""The Result for a search that returns multiple Items"""
type PromotionCartRuleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionCartRuleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  promotionId: ID!
  ruleId: ID!
  promotion: Promotion
  rule: Rule
}

"""Contains the information for one Edge"""
type PromotionCartRuleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionCartRule

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type PromotionConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String
  active: Boolean!
  maxRedemptionsGlobal: Int
  maxRedemptionsPerCustomer: Int
  exclusive: Boolean!
  code: String
  useCodes: Boolean!
  useIndividualCodes: Boolean!
  individualCodePattern: String
  useSetGroups: Boolean!
  customerRestriction: Boolean
  preventCombination: Boolean!
  orderCount: Int
  setgroups(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSetgroupConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSalesChannelConnection
  discounts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountConnection
  individualCodes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionIndividualCodeConnection
  personaRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionPersonaRuleConnection
  personaCustomers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionPersonaCustomerConnection
  orderRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionOrderRuleConnection
  cartRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionCartRuleConnection
  translations: PromotionTranslationConnection!
  customFields: String
}

type PromotionDiscount {
  __typename: String
  id: ID!
  promotionId: ID!
  scope: String!
  type: String!
  value: Float!
  considerAdvancedRules: Boolean!
  maxValue: Float
  sorterKey: String
  applierKey: String
  usageKey: String
  pickerKey: String
  promotion: Promotion
  discountRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountRuleConnection
  promotionDiscountPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountPricesConnection
}

"""The Result for a search that returns multiple Items"""
type PromotionDiscountConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionDiscountEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  promotionId: ID!
  scope: String!
  type: String!
  value: Float!
  considerAdvancedRules: Boolean!
  maxValue: Float
  sorterKey: String
  applierKey: String
  usageKey: String
  pickerKey: String
  promotion: Promotion
  discountRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountRuleConnection
  promotionDiscountPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountPricesConnection
}

"""Contains the information for one Edge"""
type PromotionDiscountEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionDiscount

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PromotionDiscountPrices {
  __typename: String
  id: ID!
  discountId: ID!
  currencyId: ID!
  price: Float!
  promotionDiscount: PromotionDiscount
  currency: Currency
}

"""The Result for a search that returns multiple Items"""
type PromotionDiscountPricesConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionDiscountPricesEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  discountId: ID!
  currencyId: ID!
  price: Float!
  promotionDiscount: PromotionDiscount
  currency: Currency
}

"""Contains the information for one Edge"""
type PromotionDiscountPricesEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionDiscountPrices

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PromotionDiscountRule {
  __typename: String
  discountId: ID!
  ruleId: ID!
  discount: PromotionDiscount
  rule: Rule
}

"""The Result for a search that returns multiple Items"""
type PromotionDiscountRuleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionDiscountRuleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  discountId: ID!
  ruleId: ID!
  discount: PromotionDiscount
  rule: Rule
}

"""Contains the information for one Edge"""
type PromotionDiscountRuleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionDiscountRule

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""Contains the information for one Edge"""
type PromotionEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Promotion

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PromotionIndividualCode {
  __typename: String
  id: ID!
  promotionId: ID!
  code: String!
  promotion: Promotion
}

"""The Result for a search that returns multiple Items"""
type PromotionIndividualCodeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionIndividualCodeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  promotionId: ID!
  code: String!
  promotion: Promotion
}

"""Contains the information for one Edge"""
type PromotionIndividualCodeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionIndividualCode

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PromotionOrderRule {
  __typename: String
  promotionId: ID!
  ruleId: ID!
  promotion: Promotion
  rule: Rule
}

"""The Result for a search that returns multiple Items"""
type PromotionOrderRuleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionOrderRuleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  promotionId: ID!
  ruleId: ID!
  promotion: Promotion
  rule: Rule
}

"""Contains the information for one Edge"""
type PromotionOrderRuleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionOrderRule

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PromotionPersonaCustomer {
  __typename: String
  promotionId: ID!
  customerId: ID!
  promotion: Promotion
  customer: Customer
}

"""The Result for a search that returns multiple Items"""
type PromotionPersonaCustomerConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionPersonaCustomerEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  promotionId: ID!
  customerId: ID!
  promotion: Promotion
  customer: Customer
}

"""Contains the information for one Edge"""
type PromotionPersonaCustomerEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionPersonaCustomer

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PromotionPersonaRule {
  __typename: String
  promotionId: ID!
  ruleId: ID!
  promotion: Promotion
  rule: Rule
}

"""The Result for a search that returns multiple Items"""
type PromotionPersonaRuleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionPersonaRuleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  promotionId: ID!
  ruleId: ID!
  promotion: Promotion
  rule: Rule
}

"""Contains the information for one Edge"""
type PromotionPersonaRuleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionPersonaRule

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PromotionSalesChannel {
  __typename: String
  id: ID!
  promotionId: ID!
  salesChannelId: ID!
  priority: Int!
  promotion: Promotion
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type PromotionSalesChannelConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionSalesChannelEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  promotionId: ID!
  salesChannelId: ID!
  priority: Int!
  promotion: Promotion
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type PromotionSalesChannelEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionSalesChannel

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PromotionSetgroup {
  __typename: String
  id: ID!
  promotionId: ID!
  packagerKey: String!
  sorterKey: String!
  value: Float!
  promotion: Promotion
  setGroupRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSetgroupRuleConnection
}

"""The Result for a search that returns multiple Items"""
type PromotionSetgroupConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionSetgroupEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  promotionId: ID!
  packagerKey: String!
  sorterKey: String!
  value: Float!
  promotion: Promotion
  setGroupRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSetgroupRuleConnection
}

"""Contains the information for one Edge"""
type PromotionSetgroupEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionSetgroup

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PromotionSetgroupRule {
  __typename: String
  setgroupId: ID!
  ruleId: ID!
  setgroup: PromotionSetgroup
  rule: Rule
}

"""The Result for a search that returns multiple Items"""
type PromotionSetgroupRuleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionSetgroupRuleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  setgroupId: ID!
  ruleId: ID!
  setgroup: PromotionSetgroup
  rule: Rule
}

"""Contains the information for one Edge"""
type PromotionSetgroupRuleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionSetgroupRule

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PromotionTranslation {
  __typename: String
  name: String!
  promotionId: ID!
  languageId: ID!
  promotion: Promotion
  language: Language
}

"""The Result for a search that returns multiple Items"""
type PromotionTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PromotionTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  promotionId: ID!
  languageId: ID!
  promotion: Promotion
  language: Language
}

"""Contains the information for one Edge"""
type PromotionTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PromotionTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PropertyGroup {
  __typename: String
  id: ID!
  name: String
  description: String
  displayType: String!
  sortingType: String!
  filterable: Boolean
  visibleOnProductDetailPage: Boolean
  position: String
  customFields: String
  options(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PropertyGroupOptionConnection
  translations: PropertyGroupTranslationConnection!
}

"""The Result for a search that returns multiple Items"""
type PropertyGroupConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PropertyGroupEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String
  description: String
  displayType: String!
  sortingType: String!
  filterable: Boolean
  visibleOnProductDetailPage: Boolean
  position: String
  customFields: String
  options(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PropertyGroupOptionConnection
  translations: PropertyGroupTranslationConnection!
}

"""Contains the information for one Edge"""
type PropertyGroupEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PropertyGroup

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PropertyGroupOption {
  __typename: String
  id: ID!
  groupId: ID!
  name: String
  position: String
  colorHexCode: String
  mediaId: ID
  customFields: String
  media: Media
  group: PropertyGroup
  translations: PropertyGroupOptionTranslationConnection!
  productConfiguratorSettings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConfiguratorSettingConnection
  productProperties(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductPropertyConnection
  productOptions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductOptionConnection
}

"""The Result for a search that returns multiple Items"""
type PropertyGroupOptionConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PropertyGroupOptionEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  groupId: ID!
  name: String
  position: String
  colorHexCode: String
  mediaId: ID
  customFields: String
  media: Media
  group: PropertyGroup
  translations: PropertyGroupOptionTranslationConnection!
  productConfiguratorSettings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConfiguratorSettingConnection
  productProperties(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductPropertyConnection
  productOptions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductOptionConnection
}

"""Contains the information for one Edge"""
type PropertyGroupOptionEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PropertyGroupOption

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PropertyGroupOptionTranslation {
  __typename: String
  name: String!
  position: Int
  propertyGroupOptionId: ID!
  languageId: ID!
  propertyGroupOption: PropertyGroupOption
  language: Language
}

"""The Result for a search that returns multiple Items"""
type PropertyGroupOptionTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PropertyGroupOptionTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  position: Int
  propertyGroupOptionId: ID!
  languageId: ID!
  propertyGroupOption: PropertyGroupOption
  language: Language
}

"""Contains the information for one Edge"""
type PropertyGroupOptionTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PropertyGroupOptionTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type PropertyGroupTranslation {
  __typename: String
  name: String!
  description: String
  position: Int
  propertyGroupId: ID!
  languageId: ID!
  propertyGroup: PropertyGroup
  language: Language
}

"""The Result for a search that returns multiple Items"""
type PropertyGroupTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [PropertyGroupTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  description: String
  position: Int
  propertyGroupId: ID!
  languageId: ID!
  propertyGroup: PropertyGroup
  language: Language
}

"""Contains the information for one Edge"""
type PropertyGroupTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: PropertyGroupTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Query {
  __typename: String
  logEntry(id: ID!): LogEntry
  logEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LogEntryConnection
  aclRole(id: ID!): AclRole
  aclRoles(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AclRoleConnection
  app(id: ID!): App
  apps(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppConnection
  appActionButton(id: ID!): AppActionButton
  appActionButtons(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppActionButtonConnection
  appTemplate(id: ID!): AppTemplate
  appTemplates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppTemplateConnection
  appPaymentMethod(id: ID!): AppPaymentMethod
  appPaymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppPaymentMethodConnection
  appCmsBlock(id: ID!): AppCmsBlock
  appCmsBlocks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AppCmsBlockConnection
  customField(id: ID!): CustomField
  customFields(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomFieldConnection
  customFieldSet(id: ID!): CustomFieldSet
  customFieldSets(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomFieldSetConnection
  customFieldSetRelation(id: ID!): CustomFieldSetRelation
  customFieldSetRelations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomFieldSetRelationConnection
  version(id: ID!): Version
  versions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): VersionConnection
  versionCommit(id: ID!): VersionCommit
  versionCommits(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): VersionCommitConnection
  versionCommitData(id: ID!): VersionCommitData
  versionCommitDatas(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): VersionCommitDataConnection
  eventAction(id: ID!): EventAction
  eventActions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): EventActionConnection
  deadMessage(id: ID!): DeadMessage
  deadMessages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DeadMessageConnection
  messageQueueStats(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MessageQueueStatsConnection
  plugin(id: ID!): Plugin
  plugins(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PluginConnection
  scheduledTask(id: ID!): ScheduledTask
  scheduledTasks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ScheduledTaskConnection
  script(id: ID!): Script
  scripts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ScriptConnection
  language(id: ID!): Language
  languages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LanguageConnection
  seoUrl(id: ID!): SeoUrl
  seoUrls(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
  seoUrlTemplate(id: ID!): SeoUrlTemplate
  seoUrlTemplates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlTemplateConnection
  mainCategory(id: ID!): MainCategory
  mainCategories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MainCategoryConnection
  webhook(id: ID!): Webhook
  webhooks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): WebhookConnection
  webhookEventLog(id: ID!): WebhookEventLog
  webhookEventLogs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): WebhookEventLogConnection
  named(id: ID!): Named
  nameds(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NamedConnection
  namedOptionalGroup(id: ID!): NamedOptionalGroup
  namedOptionalGroups(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NamedOptionalGroupConnection
  calculatedPriceFieldTest(id: ID!, versionId: ID): CalculatedPriceFieldTest
  calculatedPriceFieldTests(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CalculatedPriceFieldTestConnection
  root(id: ID!, versionId: ID): Root
  roots(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RootConnection
  rootSub(id: ID!, versionId: ID): RootSub
  rootSubs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RootSubConnection
  rootSubCascade(id: ID!, versionId: ID): RootSubCascade
  rootSubCascades(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RootSubCascadeConnection
  rootSubMany(id: ID!, versionId: ID): RootSubMany
  rootSubManies(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RootSubManyConnection
  testLock(id: ID!): TestLock
  testLocks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestLockConnection
  attributeTest(id: ID!): AttributeTest
  attributeTests(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AttributeTestConnection
  testNullable(id: ID!): TestNullable
  testNullables(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableConnection
  testRelation(id: ID!): TestRelation
  testRelations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestRelationConnection
  extendedProduct(id: ID!): ExtendedProduct
  extendedProducts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ExtendedProductConnection
  dateTimeTest(id: ID!): DateTimeTest
  dateTimeTests(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DateTimeTestConnection
  salesChannel(id: ID!): SalesChannel
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  salesChannelDomain(id: ID!): SalesChannelDomain
  salesChannelDomains(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelDomainConnection
  salesChannelType(id: ID!): SalesChannelType
  salesChannelTypes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelTypeConnection
  salesChannelAnalytics(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelAnalyticsConnection
  country(id: ID!): Country
  countries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CountryConnection
  countryState(id: ID!): CountryState
  countryStates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CountryStateConnection
  currency(id: ID!): Currency
  currencies(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CurrencyConnection
  currencyCountryRounding(id: ID!): CurrencyCountryRounding
  currencyCountryRoundings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CurrencyCountryRoundingConnection
  locale(id: ID!): Locale
  locales(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LocaleConnection
  snippetSet(id: ID!): SnippetSet
  snippetSets(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SnippetSetConnection
  snippet(id: ID!): Snippet
  snippets(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SnippetConnection
  salutation(id: ID!): Salutation
  salutations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalutationConnection
  tax(id: ID!): Tax
  taxes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxConnection
  taxRule(id: ID!): TaxRule
  taxRules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxRuleConnection
  taxRuleType(id: ID!): TaxRuleType
  taxRuleTypes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxRuleTypeConnection
  unit(id: ID!): Unit
  units(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UnitConnection
  user(id: ID!): User
  users(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UserConnection
  userConfig(id: ID!): UserConfig
  userConfigs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UserConfigConnection
  userAccessKey(id: ID!): UserAccessKey
  userAccessKeys(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UserAccessKeyConnection
  userRecovery(id: ID!): UserRecovery
  userRecoveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UserRecoveryConnection
  integration(id: ID!): Integration
  integrations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): IntegrationConnection
  stateMachine(id: ID!): StateMachine
  stateMachines(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineConnection
  stateMachineState(id: ID!): StateMachineState
  stateMachineStates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineStateConnection
  stateMachineTransition(id: ID!): StateMachineTransition
  stateMachineTransitions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineTransitionConnection
  stateMachineHistory(id: ID!): StateMachineHistory
  stateMachineHistories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineHistoryConnection
  systemConfig(id: ID!): SystemConfig
  systemConfigs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SystemConfigConnection
  numberRange(id: ID!): NumberRange
  numberRanges(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeConnection
  numberRangeSalesChannel(id: ID!): NumberRangeSalesChannel
  numberRangeSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeSalesChannelConnection
  numberRangeState(id: ID!): NumberRangeState
  numberRangeStates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeStateConnection
  numberRangeType(id: ID!): NumberRangeType
  numberRangeTypes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeTypeConnection
  tag(id: ID!): Tag
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TagConnection
  category(id: ID!, versionId: ID): Category
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryConnection
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaConnection
  mediaDefaultFolder(id: ID!): MediaDefaultFolder
  mediaDefaultFolders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaDefaultFolderConnection
  mediaThumbnail(id: ID!): MediaThumbnail
  mediaThumbnails(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaThumbnailConnection
  mediaFolder(id: ID!): MediaFolder
  mediaFolders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaFolderConnection
  mediaThumbnailSize(id: ID!): MediaThumbnailSize
  mediaThumbnailSizes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaThumbnailSizeConnection
  mediaFolderConfiguration(id: ID!): MediaFolderConfiguration
  mediaFolderConfigurations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaFolderConfigurationConnection
  product(id: ID!, versionId: ID): Product
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  productConfiguratorSetting(id: ID!, versionId: ID): ProductConfiguratorSetting
  productConfiguratorSettings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConfiguratorSettingConnection
  productPrice(id: ID!, versionId: ID): ProductPrice
  productPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductPriceConnection
  productSearchKeyword(id: ID!, versionId: ID): ProductSearchKeyword
  productSearchKeywords(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchKeywordConnection
  productKeywordDictionary(id: ID!): ProductKeywordDictionary
  productKeywordDictionaries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductKeywordDictionaryConnection
  productReview(id: ID!): ProductReview
  productReviews(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductReviewConnection
  productManufacturer(id: ID!, versionId: ID): ProductManufacturer
  productManufacturers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductManufacturerConnection
  productMedia(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductMediaConnection
  productCrossSelling(id: ID!): ProductCrossSelling
  productCrossSellings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingConnection
  productCrossSellingAssignedProducts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductCrossSellingAssignedProductsConnection
  productFeatureSet(id: ID!): ProductFeatureSet
  productFeatureSets(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductFeatureSetConnection
  productSorting(id: ID!): ProductSorting
  productSortings(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSortingConnection
  productSearchConfig(id: ID!): ProductSearchConfig
  productSearchConfigs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchConfigConnection
  productSearchConfigField(id: ID!): ProductSearchConfigField
  productSearchConfigFields(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductSearchConfigFieldConnection
  productVisibility(id: ID!): ProductVisibility
  productVisibilities(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductVisibilityConnection
  deliveryTime(id: ID!): DeliveryTime
  deliveryTimes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DeliveryTimeConnection
  newsletterRecipient(id: ID!): NewsletterRecipient
  newsletterRecipients(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientConnection
  rule(id: ID!): Rule
  rules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RuleConnection
  ruleCondition(id: ID!): RuleCondition
  ruleConditions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RuleConditionConnection
  productStream(id: ID!): ProductStream
  productStreams(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductStreamConnection
  productStreamFilter(id: ID!): ProductStreamFilter
  productStreamFilters(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductStreamFilterConnection
  productExport(id: ID!): ProductExport
  productExports(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductExportConnection
  propertyGroup(id: ID!): PropertyGroup
  propertyGroups(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PropertyGroupConnection
  propertyGroupOption(id: ID!): PropertyGroupOption
  propertyGroupOptions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PropertyGroupOptionConnection
  cmsPage(id: ID!, versionId: ID): CmsPage
  cmsPages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsPageConnection
  cmsSection(id: ID!, versionId: ID): CmsSection
  cmsSections(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSectionConnection
  cmsBlock(id: ID!, versionId: ID): CmsBlock
  cmsBlocks(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsBlockConnection
  cmsSlot(id: ID!, versionId: ID): CmsSlot
  cmsSlots(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CmsSlotConnection
  mailTemplate(id: ID!): MailTemplate
  mailTemplates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateConnection
  mailTemplateType(id: ID!): MailTemplateType
  mailTemplateTypes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailTemplateTypeConnection
  mailHeaderFooter(id: ID!): MailHeaderFooter
  mailHeaderFooters(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MailHeaderFooterConnection
  importExportProfile(id: ID!): ImportExportProfile
  importExportProfiles(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ImportExportProfileConnection
  importExportLog(id: ID!): ImportExportLog
  importExportLogs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ImportExportLogConnection
  importExportFile(id: ID!): ImportExportFile
  importExportFiles(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ImportExportFileConnection
  landingPage(id: ID!, versionId: ID): LandingPage
  landingPages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageConnection
  flow(id: ID!): Flow
  flows(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): FlowConnection
  flowSequence(id: ID!): FlowSequence
  flowSequences(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): FlowSequenceConnection
  customer(id: ID!): Customer
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  customerAddress(id: ID!): CustomerAddress
  customerAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerAddressConnection
  customerRecovery(id: ID!): CustomerRecovery
  customerRecoveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerRecoveryConnection
  customerGroup(id: ID!): CustomerGroup
  customerGroups(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerGroupConnection
  customerWishlist(id: ID!): CustomerWishlist
  customerWishlists(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerWishlistConnection
  customerWishlistProduct(id: ID!): CustomerWishlistProduct
  customerWishlistProducts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerWishlistProductConnection
  document(id: ID!): Document
  documents(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentConnection
  documentType(id: ID!): DocumentType
  documentTypes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentTypeConnection
  documentBaseConfig(id: ID!): DocumentBaseConfig
  documentBaseConfigs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigConnection
  documentBaseConfigSalesChannel(id: ID!): DocumentBaseConfigSalesChannel
  documentBaseConfigSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigSalesChannelConnection
  order(id: ID!, versionId: ID): Order
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  orderAddress(id: ID!, versionId: ID): OrderAddress
  orderAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderAddressConnection
  orderCustomer(id: ID!, versionId: ID): OrderCustomer
  orderCustomers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderCustomerConnection
  orderDelivery(id: ID!, versionId: ID): OrderDelivery
  orderDeliveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryConnection
  orderDeliveryPosition(id: ID!, versionId: ID): OrderDeliveryPosition
  orderDeliveryPositions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryPositionConnection
  orderLineItem(id: ID!, versionId: ID): OrderLineItem
  orderLineItems(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderLineItemConnection
  orderTransaction(id: ID!, versionId: ID): OrderTransaction
  orderTransactions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTransactionConnection
  paymentMethod(id: ID!): PaymentMethod
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PaymentMethodConnection
  promotion(id: ID!): Promotion
  promotions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionConnection
  promotionSalesChannel(id: ID!): PromotionSalesChannel
  promotionSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSalesChannelConnection
  promotionIndividualCode(id: ID!): PromotionIndividualCode
  promotionIndividualCodes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionIndividualCodeConnection
  promotionDiscount(id: ID!): PromotionDiscount
  promotionDiscounts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountConnection
  promotionSetgroup(id: ID!): PromotionSetgroup
  promotionSetgroups(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSetgroupConnection
  promotionDiscountPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountPricesConnection
  shippingMethod(id: ID!): ShippingMethod
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodConnection
  shippingMethodPrice(id: ID!): ShippingMethodPrice
  shippingMethodPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodPriceConnection
  theme(id: ID!): Theme
  themes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeConnection

  """Generates access keys for integrations."""
  generateIntegrationKey: IntegrationAccessKey

  """Generates the access key for a sales channel."""
  generateSalesChannelKey: ID!

  """Generates the access keys for a user."""
  generateUserKey: KeyPair
}

"""The possible operators to combine queries"""
enum QueryOperator {
  """
  Combines the queries using logical "and"
  """
  AND

  """
  Combines the queries using logical "or"
  """
  OR
}

"""The QueryTypes the DAL can perform"""
enum QueryTypes {
  """Performs an equals query"""
  equals

  """Performs a contains query"""
  contains

  """Performs an equalsAny query"""
  equalsAny

  """Combines multiple queries"""
  multi

  """Inverts an query"""
  not

  """Performs a range query"""
  range
}

"""The possible operators for range queries"""
enum RangeOperator {
  """Greater than or equals"""
  GTE

  """Greater than"""
  GT

  """Less than or equals"""
  LTE

  """Less than"""
  LT
}

type Root {
  __typename: String
  id: ID!
  versionId: ID!
  name: String
  sub: RootSub
  subCascade: RootSubCascade
}

"""The Result for a search that returns multiple Items"""
type RootConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [RootEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  name: String
  sub: RootSub
  subCascade: RootSubCascade
}

"""Contains the information for one Edge"""
type RootEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Root

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type RootSub {
  __typename: String
  id: ID!
  versionId: ID!
  name: String
  stock: Int
  rootId: ID
  rootVersionId: ID!
  root: Root
  manies(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RootSubManyConnection
}

type RootSubCascade {
  __typename: String
  id: ID!
  versionId: ID!
  name: String
  stock: Int
  rootId: ID
  rootVersionId: ID!
  root: Root
}

"""The Result for a search that returns multiple Items"""
type RootSubCascadeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [RootSubCascadeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  name: String
  stock: Int
  rootId: ID
  rootVersionId: ID!
  root: Root
}

"""Contains the information for one Edge"""
type RootSubCascadeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: RootSubCascade

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type RootSubConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [RootSubEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  name: String
  stock: Int
  rootId: ID
  rootVersionId: ID!
  root: Root
  manies(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RootSubManyConnection
}

"""Contains the information for one Edge"""
type RootSubEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: RootSub

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type RootSubMany {
  __typename: String
  id: ID!
  versionId: ID!
  name: String
  subId: ID!
  rootSubVersionId: ID!
  sub: RootSub
}

"""The Result for a search that returns multiple Items"""
type RootSubManyConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [RootSubManyEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  name: String
  subId: ID!
  rootSubVersionId: ID!
  sub: RootSub
}

"""Contains the information for one Edge"""
type RootSubManyEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: RootSubMany

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Rule {
  __typename: String
  id: ID!
  name: String!
  priority: Int!
  description: String
  invalid: Boolean
  conditions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RuleConditionConnection
  productPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductPriceConnection
  shippingMethodPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodPriceConnection
  shippingMethodPriceCalculations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodPriceConnection
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodConnection
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PaymentMethodConnection
  personaPromotions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionPersonaRuleConnection
  flowSequences(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): FlowSequenceConnection
  orderPromotions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionOrderRuleConnection
  cartPromotions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionCartRuleConnection
  promotionDiscounts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountRuleConnection
  promotionSetGroups(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSetgroupRuleConnection
  eventActions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): EventActionRuleConnection
}

type RuleCondition {
  __typename: String
  id: ID!
  type: String
  ruleId: ID!
  parentId: ID
  position: Int
  rule: Rule
  parent: RuleCondition
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RuleConditionConnection
}

"""The Result for a search that returns multiple Items"""
type RuleConditionConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [RuleConditionEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  type: String
  ruleId: ID!
  parentId: ID
  position: Int
  rule: Rule
  parent: RuleCondition
  children(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RuleConditionConnection
}

"""Contains the information for one Edge"""
type RuleConditionEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: RuleCondition

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type RuleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [RuleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  priority: Int!
  description: String
  invalid: Boolean
  conditions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): RuleConditionConnection
  productPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductPriceConnection
  shippingMethodPrices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodPriceConnection
  shippingMethodPriceCalculations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodPriceConnection
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodConnection
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PaymentMethodConnection
  personaPromotions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionPersonaRuleConnection
  flowSequences(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): FlowSequenceConnection
  orderPromotions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionOrderRuleConnection
  cartPromotions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionCartRuleConnection
  promotionDiscounts(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionDiscountRuleConnection
  promotionSetGroups(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSetgroupRuleConnection
  eventActions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): EventActionRuleConnection
}

"""Contains the information for one Edge"""
type RuleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Rule

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SalesChannel {
  __typename: String
  id: ID!
  typeId: ID!
  languageId: ID!
  customerGroupId: ID!
  currencyId: ID!
  paymentMethodId: ID!
  shippingMethodId: ID!
  countryId: ID!
  analyticsId: ID
  navigationCategoryId: ID!
  navigationCategoryVersionId: ID!
  navigationCategoryDepth: Int
  footerCategoryId: ID
  footerCategoryVersionId: ID!
  serviceCategoryId: ID
  serviceCategoryVersionId: ID!
  mailHeaderFooterId: ID
  hreflangDefaultDomainId: ID
  name: String
  shortName: String
  taxCalculationType: String
  accessKey: String!
  active: Boolean
  hreflangActive: Boolean
  maintenance: Boolean
  customFields: String
  translations: SalesChannelTranslationConnection!
  currencies(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelCurrencyConnection
  languages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelLanguageConnection
  countries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelCountryConnection
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelPaymentMethodConnection
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelShippingMethodConnection
  type: SalesChannelType
  language: Language
  customerGroup: CustomerGroup
  currency: Currency
  paymentMethod: PaymentMethod
  shippingMethod: ShippingMethod
  country: Country
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  homeCmsPageId: ID
  homeCmsPageVersionId: ID!
  homeCmsPage: CmsPage
  homeSlotConfig: String
  homeEnabled: String
  homeName: String
  homeMetaTitle: String
  homeMetaDescription: String
  homeKeywords: String
  domains(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelDomainConnection
  systemConfigs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SystemConfigConnection
  navigationCategory: Category
  footerCategory: Category
  serviceCategory: Category
  productVisibilities(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductVisibilityConnection
  hreflangDefaultDomain: SalesChannelDomain
  mailHeaderFooter: MailHeaderFooter
  newsletterRecipients(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientConnection
  numberRangeSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeSalesChannelConnection
  promotionSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSalesChannelConnection
  documentBaseConfigSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigSalesChannelConnection
  productReviews(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductReviewConnection
  seoUrls(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
  seoUrlTemplates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlTemplateConnection
  mainCategories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MainCategoryConnection
  productExports(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductExportConnection
  analytics: SalesChannelAnalytics
  customerGroupsRegistrations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerGroupRegistrationSalesChannelsConnection
  eventActions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): EventActionSalesChannelConnection
  landingPages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageSalesChannelConnection
  boundCustomers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  wishlists(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerWishlistConnection
}

type SalesChannelAnalytics {
  __typename: String
  id: ID!
  trackingId: String
  active: Boolean
  trackOrders: Boolean
  anonymizeIp: Boolean
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type SalesChannelAnalyticsConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelAnalyticsEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  trackingId: String
  active: Boolean
  trackOrders: Boolean
  anonymizeIp: Boolean
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type SalesChannelAnalyticsEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannelAnalytics

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type SalesChannelConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  typeId: ID!
  languageId: ID!
  customerGroupId: ID!
  currencyId: ID!
  paymentMethodId: ID!
  shippingMethodId: ID!
  countryId: ID!
  analyticsId: ID
  navigationCategoryId: ID!
  navigationCategoryVersionId: ID!
  navigationCategoryDepth: Int
  footerCategoryId: ID
  footerCategoryVersionId: ID!
  serviceCategoryId: ID
  serviceCategoryVersionId: ID!
  mailHeaderFooterId: ID
  hreflangDefaultDomainId: ID
  name: String
  shortName: String
  taxCalculationType: String
  accessKey: String!
  active: Boolean
  hreflangActive: Boolean
  maintenance: Boolean
  customFields: String
  translations: SalesChannelTranslationConnection!
  currencies(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelCurrencyConnection
  languages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelLanguageConnection
  countries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelCountryConnection
  paymentMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelPaymentMethodConnection
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelShippingMethodConnection
  type: SalesChannelType
  language: Language
  customerGroup: CustomerGroup
  currency: Currency
  paymentMethod: PaymentMethod
  shippingMethod: ShippingMethod
  country: Country
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  homeCmsPageId: ID
  homeCmsPageVersionId: ID!
  homeCmsPage: CmsPage
  homeSlotConfig: String
  homeEnabled: String
  homeName: String
  homeMetaTitle: String
  homeMetaDescription: String
  homeKeywords: String
  domains(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelDomainConnection
  systemConfigs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SystemConfigConnection
  navigationCategory: Category
  footerCategory: Category
  serviceCategory: Category
  productVisibilities(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductVisibilityConnection
  hreflangDefaultDomain: SalesChannelDomain
  mailHeaderFooter: MailHeaderFooter
  newsletterRecipients(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientConnection
  numberRangeSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NumberRangeSalesChannelConnection
  promotionSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): PromotionSalesChannelConnection
  documentBaseConfigSalesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DocumentBaseConfigSalesChannelConnection
  productReviews(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductReviewConnection
  seoUrls(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlConnection
  seoUrlTemplates(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SeoUrlTemplateConnection
  mainCategories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MainCategoryConnection
  productExports(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductExportConnection
  analytics: SalesChannelAnalytics
  customerGroupsRegistrations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerGroupRegistrationSalesChannelsConnection
  eventActions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): EventActionSalesChannelConnection
  landingPages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageSalesChannelConnection
  boundCustomers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  wishlists(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerWishlistConnection
  themes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeSalesChannelConnection
}

type SalesChannelCountry {
  __typename: String
  salesChannelId: ID!
  countryId: ID!
  salesChannel: SalesChannel
  country: Country
}

"""The Result for a search that returns multiple Items"""
type SalesChannelCountryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelCountryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  salesChannelId: ID!
  countryId: ID!
  salesChannel: SalesChannel
  country: Country
}

"""Contains the information for one Edge"""
type SalesChannelCountryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannelCountry

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SalesChannelCurrency {
  __typename: String
  salesChannelId: ID!
  currencyId: ID!
  salesChannel: SalesChannel
  currency: Currency
}

"""The Result for a search that returns multiple Items"""
type SalesChannelCurrencyConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelCurrencyEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  salesChannelId: ID!
  currencyId: ID!
  salesChannel: SalesChannel
  currency: Currency
}

"""Contains the information for one Edge"""
type SalesChannelCurrencyEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannelCurrency

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SalesChannelDomain {
  __typename: String
  id: ID!
  url: String!
  salesChannelId: ID!
  languageId: ID!
  currencyId: ID!
  snippetSetId: ID!
  salesChannel: SalesChannel
  language: Language
  currency: Currency
  snippetSet: SnippetSet
  salesChannelDefaultHreflang: SalesChannel
  productExports(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductExportConnection
  hreflangUseOnlyLocale: Boolean
}

"""The Result for a search that returns multiple Items"""
type SalesChannelDomainConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelDomainEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  url: String!
  salesChannelId: ID!
  languageId: ID!
  currencyId: ID!
  snippetSetId: ID!
  salesChannel: SalesChannel
  language: Language
  currency: Currency
  snippetSet: SnippetSet
  salesChannelDefaultHreflang: SalesChannel
  productExports(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductExportConnection
  hreflangUseOnlyLocale: Boolean
}

"""Contains the information for one Edge"""
type SalesChannelDomainEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannelDomain

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""Contains the information for one Edge"""
type SalesChannelEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannel

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SalesChannelLanguage {
  __typename: String
  salesChannelId: ID!
  languageId: ID!
  salesChannel: SalesChannel
  language: Language
}

"""The Result for a search that returns multiple Items"""
type SalesChannelLanguageConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelLanguageEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  salesChannelId: ID!
  languageId: ID!
  salesChannel: SalesChannel
  language: Language
}

"""Contains the information for one Edge"""
type SalesChannelLanguageEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannelLanguage

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SalesChannelPaymentMethod {
  __typename: String
  salesChannelId: ID!
  paymentMethodId: ID!
  salesChannel: SalesChannel
  paymentMethod: PaymentMethod
}

"""The Result for a search that returns multiple Items"""
type SalesChannelPaymentMethodConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelPaymentMethodEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  salesChannelId: ID!
  paymentMethodId: ID!
  salesChannel: SalesChannel
  paymentMethod: PaymentMethod
}

"""Contains the information for one Edge"""
type SalesChannelPaymentMethodEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannelPaymentMethod

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SalesChannelShippingMethod {
  __typename: String
  salesChannelId: ID!
  shippingMethodId: ID!
  salesChannel: SalesChannel
  shippingMethod: ShippingMethod
}

"""The Result for a search that returns multiple Items"""
type SalesChannelShippingMethodConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelShippingMethodEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  salesChannelId: ID!
  shippingMethodId: ID!
  salesChannel: SalesChannel
  shippingMethod: ShippingMethod
}

"""Contains the information for one Edge"""
type SalesChannelShippingMethodEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannelShippingMethod

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SalesChannelTranslation {
  __typename: String
  name: String!
  homeEnabled: Boolean!
  homeName: String
  homeMetaTitle: String
  homeMetaDescription: String
  homeKeywords: String
  salesChannelId: ID!
  languageId: ID!
  salesChannel: SalesChannel
  language: Language
}

"""The Result for a search that returns multiple Items"""
type SalesChannelTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  homeEnabled: Boolean!
  homeName: String
  homeMetaTitle: String
  homeMetaDescription: String
  homeKeywords: String
  salesChannelId: ID!
  languageId: ID!
  salesChannel: SalesChannel
  language: Language
}

"""Contains the information for one Edge"""
type SalesChannelTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannelTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SalesChannelType {
  __typename: String
  id: ID!
  coverUrl: String
  iconName: String
  name: String
  manufacturer: String
  description: String
  descriptionLong: String
  customFields: String
  translations: SalesChannelTypeTranslationConnection!
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
}

"""The Result for a search that returns multiple Items"""
type SalesChannelTypeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelTypeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  coverUrl: String
  iconName: String
  name: String
  manufacturer: String
  description: String
  descriptionLong: String
  customFields: String
  translations: SalesChannelTypeTranslationConnection!
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
}

"""Contains the information for one Edge"""
type SalesChannelTypeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannelType

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SalesChannelTypeTranslation {
  __typename: String
  name: String!
  manufacturer: String
  description: String
  descriptionLong: String
  salesChannelTypeId: ID!
  languageId: ID!
  salesChannelType: SalesChannelType
  language: Language
}

"""The Result for a search that returns multiple Items"""
type SalesChannelTypeTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalesChannelTypeTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  manufacturer: String
  description: String
  descriptionLong: String
  salesChannelTypeId: ID!
  languageId: ID!
  salesChannelType: SalesChannelType
  language: Language
}

"""Contains the information for one Edge"""
type SalesChannelTypeTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalesChannelTypeTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Salutation {
  __typename: String
  id: ID!
  salutationKey: String!
  displayName: String
  letterName: String
  customFields: String
  translations: SalutationTranslationConnection!
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  customerAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerAddressConnection
  orderCustomers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderCustomerConnection
  orderAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderAddressConnection
  newsletterRecipients(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientConnection
}

"""The Result for a search that returns multiple Items"""
type SalutationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalutationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  salutationKey: String!
  displayName: String
  letterName: String
  customFields: String
  translations: SalutationTranslationConnection!
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerConnection
  customerAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerAddressConnection
  orderCustomers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderCustomerConnection
  orderAddresses(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderAddressConnection
  newsletterRecipients(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientConnection
}

"""Contains the information for one Edge"""
type SalutationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Salutation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SalutationTranslation {
  __typename: String
  displayName: String!
  letterName: String!
  salutationId: ID!
  languageId: ID!
  salutation: Salutation
  language: Language
}

"""The Result for a search that returns multiple Items"""
type SalutationTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SalutationTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  displayName: String!
  letterName: String!
  salutationId: ID!
  languageId: ID!
  salutation: Salutation
  language: Language
}

"""Contains the information for one Edge"""
type SalutationTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SalutationTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ScheduledTask {
  __typename: String
  id: ID!
  name: String!
  scheduledTaskClass: String!
  runInterval: Int!
  status: String!
  deadMessages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DeadMessageConnection
}

"""The Result for a search that returns multiple Items"""
type ScheduledTaskConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ScheduledTaskEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  scheduledTaskClass: String!
  runInterval: Int!
  status: String!
  deadMessages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): DeadMessageConnection
}

"""Contains the information for one Edge"""
type ScheduledTaskEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ScheduledTask

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Script {
  __typename: String
  id: ID!
  script: String!
  hook: String!
  name: String!
  active: Boolean!
  appId: ID
  app: App
}

"""The Result for a search that returns multiple Items"""
type ScriptConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ScriptEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  script: String!
  hook: String!
  name: String!
  active: Boolean!
  appId: ID
  app: App
}

"""Contains the information for one Edge"""
type ScriptEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Script

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The DAL query that is used to filter the Items"""
input SearchQuery {
  __typename: String

  """The query type"""
  type: QueryTypes!

  """The operator used to combine the queries"""
  operator: QueryOperator

  """A nested list of SearchQueries"""
  queries: [SearchQuery]

  """The field used in the Query"""
  field: String

  """The value with which the field will be compared"""
  value: String

  """
  A list of parameters with which the field will be compared in a Range Query
  """
  parameters: [Parameter]
}

type SeoUrl {
  __typename: String
  id: ID!
  salesChannelId: ID
  languageId: ID!
  foreignKey: ID!
  routeName: String!
  pathInfo: String!
  seoPathInfo: String!
  isCanonical: Boolean
  isModified: Boolean
  isDeleted: Boolean
  url: String
  language: Language
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type SeoUrlConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SeoUrlEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  salesChannelId: ID
  languageId: ID!
  foreignKey: ID!
  routeName: String!
  pathInfo: String!
  seoPathInfo: String!
  isCanonical: Boolean
  isModified: Boolean
  isDeleted: Boolean
  url: String
  language: Language
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type SeoUrlEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SeoUrl

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SeoUrlTemplate {
  __typename: String
  id: ID!
  salesChannelId: ID
  entityName: String!
  routeName: String!
  template: String
  isValid: Boolean
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type SeoUrlTemplateConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SeoUrlTemplateEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  salesChannelId: ID
  entityName: String!
  routeName: String!
  template: String
  isValid: Boolean
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type SeoUrlTemplateEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SeoUrlTemplate

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ShippingMethod {
  __typename: String
  id: ID!
  name: String
  active: Boolean
  customFields: String
  availabilityRuleId: ID!
  mediaId: ID
  deliveryTimeId: ID!
  taxType: String!
  taxId: ID
  deliveryTime: DeliveryTime
  description: String
  trackingUrl: String
  translations: ShippingMethodTranslationConnection!
  availabilityRule: Rule
  prices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodPriceConnection
  media: Media
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodTagConnection
  orderDeliveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelShippingMethodConnection
  salesChannelDefaultAssignments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  tax: Tax
}

"""The Result for a search that returns multiple Items"""
type ShippingMethodConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ShippingMethodEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String
  active: Boolean
  customFields: String
  availabilityRuleId: ID!
  mediaId: ID
  deliveryTimeId: ID!
  taxType: String!
  taxId: ID
  deliveryTime: DeliveryTime
  description: String
  trackingUrl: String
  translations: ShippingMethodTranslationConnection!
  availabilityRule: Rule
  prices(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodPriceConnection
  media: Media
  tags(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodTagConnection
  orderDeliveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryConnection
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelShippingMethodConnection
  salesChannelDefaultAssignments(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelConnection
  tax: Tax
}

"""Contains the information for one Edge"""
type ShippingMethodEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ShippingMethod

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ShippingMethodPrice {
  __typename: String
  id: ID!
  shippingMethodId: ID!
  ruleId: ID
  calculation: Int
  calculationRuleId: ID
  quantityStart: Float
  quantityEnd: Float
  shippingMethod: ShippingMethod
  rule: Rule
  calculationRule: Rule
}

"""The Result for a search that returns multiple Items"""
type ShippingMethodPriceConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ShippingMethodPriceEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  shippingMethodId: ID!
  ruleId: ID
  calculation: Int
  calculationRuleId: ID
  quantityStart: Float
  quantityEnd: Float
  shippingMethod: ShippingMethod
  rule: Rule
  calculationRule: Rule
}

"""Contains the information for one Edge"""
type ShippingMethodPriceEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ShippingMethodPrice

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ShippingMethodTag {
  __typename: String
  shippingMethodId: ID!
  tagId: ID!
  shippingMethod: ShippingMethod
  tag: Tag
}

"""The Result for a search that returns multiple Items"""
type ShippingMethodTagConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ShippingMethodTagEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  shippingMethodId: ID!
  tagId: ID!
  shippingMethod: ShippingMethod
  tag: Tag
}

"""Contains the information for one Edge"""
type ShippingMethodTagEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ShippingMethodTag

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ShippingMethodTranslation {
  __typename: String
  name: String!
  description: String
  trackingUrl: String
  shippingMethodId: ID!
  languageId: ID!
  shippingMethod: ShippingMethod
  language: Language
}

"""The Result for a search that returns multiple Items"""
type ShippingMethodTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ShippingMethodTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  description: String
  trackingUrl: String
  shippingMethodId: ID!
  languageId: ID!
  shippingMethod: ShippingMethod
  language: Language
}

"""Contains the information for one Edge"""
type ShippingMethodTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ShippingMethodTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Snippet {
  __typename: String
  id: ID!
  setId: ID!
  translationKey: String!
  value: String!
  author: String!
  set: SnippetSet
}

"""The Result for a search that returns multiple Items"""
type SnippetConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SnippetEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  setId: ID!
  translationKey: String!
  value: String!
  author: String!
  set: SnippetSet
}

"""Contains the information for one Edge"""
type SnippetEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Snippet

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SnippetSet {
  __typename: String
  id: ID!
  name: String!
  baseFile: String!
  iso: String!
  snippets(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SnippetConnection
  salesChannelDomains(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelDomainConnection
}

"""The Result for a search that returns multiple Items"""
type SnippetSetConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SnippetSetEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  baseFile: String!
  iso: String!
  snippets(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SnippetConnection
  salesChannelDomains(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): SalesChannelDomainConnection
}

"""Contains the information for one Edge"""
type SnippetSetEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SnippetSet

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The possible sort directions"""
enum SortDirection {
  """Ascending sort direction"""
  ASC

  """Descending sort direction"""
  DESC
}

type StateMachine {
  __typename: String
  id: ID!
  technicalName: String!
  name: String
  customFields: String
  states(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineStateConnection
  transitions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineTransitionConnection
  initialStateId: ID
  translations: StateMachineTranslationConnection!
  historyEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineHistoryConnection
}

"""The Result for a search that returns multiple Items"""
type StateMachineConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [StateMachineEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  technicalName: String!
  name: String
  customFields: String
  states(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineStateConnection
  transitions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineTransitionConnection
  initialStateId: ID
  translations: StateMachineTranslationConnection!
  historyEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineHistoryConnection
}

"""Contains the information for one Edge"""
type StateMachineEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: StateMachine

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type StateMachineHistory {
  __typename: String
  id: ID!
  stateMachineId: ID!
  stateMachine: StateMachine
  entityName: String!
  fromStateId: ID!
  fromStateMachineState: StateMachineState
  toStateId: ID!
  toStateMachineState: StateMachineState
  transitionActionName: String
  userId: ID
  user: User
}

"""The Result for a search that returns multiple Items"""
type StateMachineHistoryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [StateMachineHistoryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  stateMachineId: ID!
  stateMachine: StateMachine
  entityName: String!
  fromStateId: ID!
  fromStateMachineState: StateMachineState
  toStateId: ID!
  toStateMachineState: StateMachineState
  transitionActionName: String
  userId: ID
  user: User
}

"""Contains the information for one Edge"""
type StateMachineHistoryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: StateMachineHistory

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type StateMachineState {
  __typename: String
  id: ID!
  technicalName: String!
  name: String
  stateMachineId: ID!
  stateMachine: StateMachine
  fromStateMachineTransitions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineTransitionConnection
  toStateMachineTransitions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineTransitionConnection
  translations: StateMachineStateTranslationConnection!
  orderTransactions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTransactionConnection
  orderDeliveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryConnection
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  customFields: String
  toStateMachineHistoryEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineHistoryConnection
  fromStateMachineHistoryEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineHistoryConnection
}

"""The Result for a search that returns multiple Items"""
type StateMachineStateConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [StateMachineStateEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  technicalName: String!
  name: String
  stateMachineId: ID!
  stateMachine: StateMachine
  fromStateMachineTransitions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineTransitionConnection
  toStateMachineTransitions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineTransitionConnection
  translations: StateMachineStateTranslationConnection!
  orderTransactions(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTransactionConnection
  orderDeliveries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderDeliveryConnection
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  customFields: String
  toStateMachineHistoryEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineHistoryConnection
  fromStateMachineHistoryEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineHistoryConnection
}

"""Contains the information for one Edge"""
type StateMachineStateEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: StateMachineState

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type StateMachineStateTranslation {
  __typename: String
  name: String!
  stateMachineStateId: ID!
  languageId: ID!
  stateMachineState: StateMachineState
  language: Language
}

"""The Result for a search that returns multiple Items"""
type StateMachineStateTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [StateMachineStateTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  stateMachineStateId: ID!
  languageId: ID!
  stateMachineState: StateMachineState
  language: Language
}

"""Contains the information for one Edge"""
type StateMachineStateTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: StateMachineStateTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type StateMachineTransition {
  __typename: String
  id: ID!
  actionName: String!
  stateMachineId: ID!
  stateMachine: StateMachine
  fromStateId: ID!
  fromStateMachineState: StateMachineState
  toStateId: ID!
  toStateMachineState: StateMachineState
}

"""The Result for a search that returns multiple Items"""
type StateMachineTransitionConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [StateMachineTransitionEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  actionName: String!
  stateMachineId: ID!
  stateMachine: StateMachine
  fromStateId: ID!
  fromStateMachineState: StateMachineState
  toStateId: ID!
  toStateMachineState: StateMachineState
}

"""Contains the information for one Edge"""
type StateMachineTransitionEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: StateMachineTransition

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type StateMachineTranslation {
  __typename: String
  name: String!
  stateMachineId: ID!
  languageId: ID!
  stateMachine: StateMachine
  language: Language
}

"""The Result for a search that returns multiple Items"""
type StateMachineTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [StateMachineTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String!
  stateMachineId: ID!
  languageId: ID!
  stateMachine: StateMachine
  language: Language
}

"""Contains the information for one Edge"""
type StateMachineTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: StateMachineTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type SystemConfig {
  __typename: String
  id: ID!
  configurationKey: String!
  salesChannelId: ID
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type SystemConfigConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [SystemConfigEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  configurationKey: String!
  salesChannelId: ID
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type SystemConfigEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: SystemConfig

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Tag {
  __typename: String
  id: ID!
  name: String!
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductTagConnection
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaTagConnection
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryTagConnection
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerTagConnection
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTagConnection
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodTagConnection
  newsletterRecipients(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientTagConnection
  landingPages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageTagConnection
}

"""The Result for a search that returns multiple Items"""
type TagConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [TagEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductTagConnection
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaTagConnection
  categories(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CategoryTagConnection
  customers(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): CustomerTagConnection
  orders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderTagConnection
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodTagConnection
  newsletterRecipients(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): NewsletterRecipientTagConnection
  landingPages(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): LandingPageTagConnection
}

"""Contains the information for one Edge"""
type TagEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Tag

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Tax {
  __typename: String
  id: ID!
  taxRate: Float!
  name: String!
  position: Int!
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  rules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxRuleConnection
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodConnection
}

"""The Result for a search that returns multiple Items"""
type TaxConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [TaxEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  taxRate: Float!
  name: String!
  position: Int!
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  rules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxRuleConnection
  shippingMethods(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ShippingMethodConnection
}

"""Contains the information for one Edge"""
type TaxEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Tax

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type TaxRule {
  __typename: String
  id: ID!
  taxRuleTypeId: ID!
  countryId: ID!
  taxRate: Float!
  taxId: ID!
  type: TaxRuleType
  country: Country
  tax: Tax
}

"""The Result for a search that returns multiple Items"""
type TaxRuleConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [TaxRuleEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  taxRuleTypeId: ID!
  countryId: ID!
  taxRate: Float!
  taxId: ID!
  type: TaxRuleType
  country: Country
  tax: Tax
}

"""Contains the information for one Edge"""
type TaxRuleEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: TaxRule

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type TaxRuleType {
  __typename: String
  id: ID!
  technicalName: String!
  position: Int!
  typeName: String
  rules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxRuleConnection
  translations: TaxRuleTypeTranslationConnection!
}

"""The Result for a search that returns multiple Items"""
type TaxRuleTypeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [TaxRuleTypeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  technicalName: String!
  position: Int!
  typeName: String
  rules(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TaxRuleConnection
  translations: TaxRuleTypeTranslationConnection!
}

"""Contains the information for one Edge"""
type TaxRuleTypeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: TaxRuleType

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type TaxRuleTypeTranslation {
  __typename: String
  typeName: String!
  taxRuleTypeId: ID!
  languageId: ID!
  taxRuleType: TaxRuleType
  language: Language
}

"""The Result for a search that returns multiple Items"""
type TaxRuleTypeTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [TaxRuleTypeTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  typeName: String!
  taxRuleTypeId: ID!
  languageId: ID!
  taxRuleType: TaxRuleType
  language: Language
}

"""Contains the information for one Edge"""
type TaxRuleTypeTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: TaxRuleTypeTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type TestLock {
  __typename: String
  id: ID!
  description: String
  name: String
  translations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestLockTranslationConnection
  locked: Boolean
}

"""The Result for a search that returns multiple Items"""
type TestLockConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [TestLockEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  description: String
  name: String
  translations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestLockTranslationConnection
  locked: Boolean
}

"""Contains the information for one Edge"""
type TestLockEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: TestLock

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type TestLockTranslation {
  __typename: String
  name: String
  testLockId: ID!
  languageId: ID!
  testLock: TestLock
  language: Language
}

"""The Result for a search that returns multiple Items"""
type TestLockTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [TestLockTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  name: String
  testLockId: ID!
  languageId: ID!
  testLock: TestLock
  language: Language
}

"""Contains the information for one Edge"""
type TestLockTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: TestLockTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type TestNullable {
  __typename: String
  id: ID!
  protected: String
  systemProtected: String
  relationId: ID
  relation: TestRelation
  relations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableReferenceConnection
  systemRelationId: ID
  systemRelation: TestRelation
  systemRelations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableReferenceConnection
}

"""The Result for a search that returns multiple Items"""
type TestNullableConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [TestNullableEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  protected: String
  systemProtected: String
  relationId: ID
  relation: TestRelation
  relations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableReferenceConnection
  systemRelationId: ID
  systemRelation: TestRelation
  systemRelations(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableReferenceConnection
}

"""Contains the information for one Edge"""
type TestNullableEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: TestNullable

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type TestNullableReference {
  __typename: String
  wpId: ID!
  relationId: ID!
  wp: TestNullable
  relation: TestRelation
}

"""The Result for a search that returns multiple Items"""
type TestNullableReferenceConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [TestNullableReferenceEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  wpId: ID!
  relationId: ID!
  wp: TestNullable
  relation: TestRelation
}

"""Contains the information for one Edge"""
type TestNullableReferenceEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: TestNullableReference

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type TestRelation {
  __typename: String
  id: ID!
  wp(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableConnection
  wps(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableReferenceConnection
  systemWp(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableConnection
  systemWps(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableReferenceConnection
}

"""The Result for a search that returns multiple Items"""
type TestRelationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [TestRelationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  wp(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableConnection
  wps(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableReferenceConnection
  systemWp(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableConnection
  systemWps(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): TestNullableReferenceConnection
}

"""Contains the information for one Edge"""
type TestRelationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: TestRelation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Theme {
  __typename: String
  id: ID!
  technicalName: String
  name: String!
  author: String!
  description: String
  labels: String
  helpTexts: String
  customFields: String
  previewMediaId: ID
  parentThemeId: ID
  active: Boolean!
  translations: ThemeTranslationConnection!
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeSalesChannelConnection
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeMediaConnection
  previewMedia: Media
  childThemes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeConnection
}

"""The Result for a search that returns multiple Items"""
type ThemeConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ThemeEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  technicalName: String
  name: String!
  author: String!
  description: String
  labels: String
  helpTexts: String
  customFields: String
  previewMediaId: ID
  parentThemeId: ID
  active: Boolean!
  translations: ThemeTranslationConnection!
  salesChannels(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeSalesChannelConnection
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeMediaConnection
  previewMedia: Media
  childThemes(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ThemeConnection
}

"""Contains the information for one Edge"""
type ThemeEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Theme

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ThemeMedia {
  __typename: String
  themeId: ID!
  mediaId: ID!
  theme: Theme
  media: Media
}

"""The Result for a search that returns multiple Items"""
type ThemeMediaConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ThemeMediaEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  themeId: ID!
  mediaId: ID!
  theme: Theme
  media: Media
}

"""Contains the information for one Edge"""
type ThemeMediaEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ThemeMedia

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ThemeSalesChannel {
  __typename: String
  salesChannelId: ID!
  themeId: ID!
  theme: Theme
  salesChannel: SalesChannel
}

"""The Result for a search that returns multiple Items"""
type ThemeSalesChannelConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ThemeSalesChannelEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  salesChannelId: ID!
  themeId: ID!
  theme: Theme
  salesChannel: SalesChannel
}

"""Contains the information for one Edge"""
type ThemeSalesChannelEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ThemeSalesChannel

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type ThemeTranslation {
  __typename: String
  description: String
  themeId: ID!
  languageId: ID!
  theme: Theme
  language: Language
}

"""The Result for a search that returns multiple Items"""
type ThemeTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [ThemeTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  description: String
  themeId: ID!
  languageId: ID!
  theme: Theme
  language: Language
}

"""Contains the information for one Edge"""
type ThemeTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: ThemeTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Unit {
  __typename: String
  id: ID!
  shortCode: String
  name: String
  customFields: String
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  translations: UnitTranslationConnection!
}

"""The Result for a search that returns multiple Items"""
type UnitConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [UnitEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  shortCode: String
  name: String
  customFields: String
  products(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ProductConnection
  translations: UnitTranslationConnection!
}

"""Contains the information for one Edge"""
type UnitEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Unit

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type UnitTranslation {
  __typename: String
  shortCode: String!
  name: String!
  unitId: ID!
  languageId: ID!
  unit: Unit
  language: Language
}

"""The Result for a search that returns multiple Items"""
type UnitTranslationConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [UnitTranslationEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  shortCode: String!
  name: String!
  unitId: ID!
  languageId: ID!
  unit: Unit
  language: Language
}

"""Contains the information for one Edge"""
type UnitTranslationEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: UnitTranslation

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type User {
  __typename: String
  id: ID!
  localeId: ID!
  avatarId: ID
  username: String!
  firstName: String!
  lastName: String!
  title: String
  email: String!
  active: Boolean
  admin: Boolean
  timeZone: String!
  locale: Locale
  avatarMedia: Media
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaConnection
  accessKeys(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UserAccessKeyConnection
  configs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UserConfigConnection
  stateMachineHistoryEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineHistoryConnection
  importExportLogEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ImportExportLogConnection
  aclRoles(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AclUserRoleConnection
  recoveryUser: UserRecovery
  storeToken: String
  createdOrders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  updatedOrders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
}

type UserAccessKey {
  __typename: String
  id: ID!
  userId: ID!
  accessKey: String!
  writeAccess: Boolean
  user: User
}

"""The Result for a search that returns multiple Items"""
type UserAccessKeyConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [UserAccessKeyEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  userId: ID!
  accessKey: String!
  writeAccess: Boolean
  user: User
}

"""Contains the information for one Edge"""
type UserAccessKeyEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: UserAccessKey

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type UserConfig {
  __typename: String
  id: ID!
  userId: ID!
  key: String!
  user: User
}

"""The Result for a search that returns multiple Items"""
type UserConfigConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [UserConfigEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  userId: ID!
  key: String!
  user: User
}

"""Contains the information for one Edge"""
type UserConfigEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: UserConfig

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type UserConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [UserEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  localeId: ID!
  avatarId: ID
  username: String!
  firstName: String!
  lastName: String!
  title: String
  email: String!
  active: Boolean
  admin: Boolean
  timeZone: String!
  locale: Locale
  avatarMedia: Media
  media(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): MediaConnection
  accessKeys(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UserAccessKeyConnection
  configs(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): UserConfigConnection
  stateMachineHistoryEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): StateMachineHistoryConnection
  importExportLogEntries(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): ImportExportLogConnection
  aclRoles(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): AclUserRoleConnection
  recoveryUser: UserRecovery
  storeToken: String
  createdOrders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
  updatedOrders(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): OrderConnection
}

"""Contains the information for one Edge"""
type UserEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: User

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type UserRecovery {
  __typename: String
  id: ID!
  hash: String!
  userId: ID!
  user: User
}

"""The Result for a search that returns multiple Items"""
type UserRecoveryConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [UserRecoveryEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  hash: String!
  userId: ID!
  user: User
}

"""Contains the information for one Edge"""
type UserRecoveryEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: UserRecovery

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Version {
  __typename: String
  id: ID!
  name: String!
  commits(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): VersionCommitConnection
}

type VersionCommit {
  __typename: String
  id: ID!
  versionId: ID!
  userId: ID
  integrationId: ID
  autoIncrement: Int
  isMerge: Boolean
  message: String
  data(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): VersionCommitDataConnection
  version: Version
}

"""The Result for a search that returns multiple Items"""
type VersionCommitConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [VersionCommitEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionId: ID!
  userId: ID
  integrationId: ID
  autoIncrement: Int
  isMerge: Boolean
  message: String
  data(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): VersionCommitDataConnection
  version: Version
}

type VersionCommitData {
  __typename: String
  id: ID!
  versionCommitId: ID!
  commit: VersionCommit
  userId: ID
  integrationId: ID
  autoIncrement: Int
  entityName: String!
  action: String!
}

"""The Result for a search that returns multiple Items"""
type VersionCommitDataConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [VersionCommitDataEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  versionCommitId: ID!
  commit: VersionCommit
  userId: ID
  integrationId: ID
  autoIncrement: Int
  entityName: String!
  action: String!
}

"""Contains the information for one Edge"""
type VersionCommitDataEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: VersionCommitData

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""Contains the information for one Edge"""
type VersionCommitEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: VersionCommit

  """The cursor to the Item of the Edge"""
  cursor: ID
}

"""The Result for a search that returns multiple Items"""
type VersionConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [VersionEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  commits(
    """The count of items to be returned"""
    first: Int

    """The count of items to be returned"""
    last: Int

    """The cursor to the first Result to be fetched"""
    after: String

    """The cursor to the last Result to be fetched"""
    before: String

    """The field used for sorting"""
    sortBy: String

    """The direction of the sorting"""
    sortDirection: SortDirection

    """The query the DAL should perform"""
    query: SearchQuery

    """The aggregations should perform"""
    aggregations: [Aggregation]
  ): VersionCommitConnection
}

"""Contains the information for one Edge"""
type VersionEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Version

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type Webhook {
  __typename: String
  id: ID!
  name: String!
  eventName: String!
  url: String!
  errorCount: Int!
  active: Boolean
  appId: ID
  app: App
}

"""The Result for a search that returns multiple Items"""
type WebhookConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [WebhookEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  name: String!
  eventName: String!
  url: String!
  errorCount: Int!
  active: Boolean
  appId: ID
  app: App
}

"""Contains the information for one Edge"""
type WebhookEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: Webhook

  """The cursor to the Item of the Edge"""
  cursor: ID
}

type WebhookEventLog {
  __typename: String
  id: ID!
  appName: String
  webhookName: String!
  eventName: String!
  deliveryStatus: String!
  timestamp: Int
  processingTime: Int
  appVersion: String
  responseStatusCode: Int
  responseReasonPhrase: String
  url: String!
}

"""The Result for a search that returns multiple Items"""
type WebhookEventLogConnection {
  __typename: String

  """The total of Items found by the Query"""
  total: Int

  """A List of the Items"""
  edges: [WebhookEventLogEdge]

  """Additional information for pagination"""
  pageInfo: PageInfo

  """the result of aggregations"""
  aggregations: [AggregationResults]
  id: ID!
  appName: String
  webhookName: String!
  eventName: String!
  deliveryStatus: String!
  timestamp: Int
  processingTime: Int
  appVersion: String
  responseStatusCode: Int
  responseReasonPhrase: String
  url: String!
}

"""Contains the information for one Edge"""
type WebhookEventLogEdge {
  __typename: String

  """The Node of the Edge that contains the real element"""
  node: WebhookEventLog

  """The cursor to the Item of the Edge"""
  cursor: ID
}
